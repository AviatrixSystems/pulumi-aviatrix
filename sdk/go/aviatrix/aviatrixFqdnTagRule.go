// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aviatrix

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AviatrixFqdnTagRule struct {
	pulumi.CustomResourceState

	// What action should happen to matching requests. Possible values are: 'Base Policy', 'Allow' or 'Deny'. Defaults to 'Base
	// Policy' if no value is provided.
	Action pulumi.StringPtrOutput `pulumi:"action"`
	// FQDN.
	Fqdn pulumi.StringOutput `pulumi:"fqdn"`
	// FQDN Filter Tag Name to attach this domain.
	FqdnTagName pulumi.StringOutput `pulumi:"fqdnTagName"`
	// Port.
	Port pulumi.StringOutput `pulumi:"port"`
	// Protocol.
	Protocol pulumi.StringOutput `pulumi:"protocol"`
}

// NewAviatrixFqdnTagRule registers a new resource with the given unique name, arguments, and options.
func NewAviatrixFqdnTagRule(ctx *pulumi.Context,
	name string, args *AviatrixFqdnTagRuleArgs, opts ...pulumi.ResourceOption) (*AviatrixFqdnTagRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Fqdn == nil {
		return nil, errors.New("invalid value for required argument 'Fqdn'")
	}
	if args.FqdnTagName == nil {
		return nil, errors.New("invalid value for required argument 'FqdnTagName'")
	}
	if args.Port == nil {
		return nil, errors.New("invalid value for required argument 'Port'")
	}
	if args.Protocol == nil {
		return nil, errors.New("invalid value for required argument 'Protocol'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource AviatrixFqdnTagRule
	err := ctx.RegisterResource("aviatrix:index/aviatrixFqdnTagRule:AviatrixFqdnTagRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAviatrixFqdnTagRule gets an existing AviatrixFqdnTagRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAviatrixFqdnTagRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AviatrixFqdnTagRuleState, opts ...pulumi.ResourceOption) (*AviatrixFqdnTagRule, error) {
	var resource AviatrixFqdnTagRule
	err := ctx.ReadResource("aviatrix:index/aviatrixFqdnTagRule:AviatrixFqdnTagRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AviatrixFqdnTagRule resources.
type aviatrixFqdnTagRuleState struct {
	// What action should happen to matching requests. Possible values are: 'Base Policy', 'Allow' or 'Deny'. Defaults to 'Base
	// Policy' if no value is provided.
	Action *string `pulumi:"action"`
	// FQDN.
	Fqdn *string `pulumi:"fqdn"`
	// FQDN Filter Tag Name to attach this domain.
	FqdnTagName *string `pulumi:"fqdnTagName"`
	// Port.
	Port *string `pulumi:"port"`
	// Protocol.
	Protocol *string `pulumi:"protocol"`
}

type AviatrixFqdnTagRuleState struct {
	// What action should happen to matching requests. Possible values are: 'Base Policy', 'Allow' or 'Deny'. Defaults to 'Base
	// Policy' if no value is provided.
	Action pulumi.StringPtrInput
	// FQDN.
	Fqdn pulumi.StringPtrInput
	// FQDN Filter Tag Name to attach this domain.
	FqdnTagName pulumi.StringPtrInput
	// Port.
	Port pulumi.StringPtrInput
	// Protocol.
	Protocol pulumi.StringPtrInput
}

func (AviatrixFqdnTagRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*aviatrixFqdnTagRuleState)(nil)).Elem()
}

type aviatrixFqdnTagRuleArgs struct {
	// What action should happen to matching requests. Possible values are: 'Base Policy', 'Allow' or 'Deny'. Defaults to 'Base
	// Policy' if no value is provided.
	Action *string `pulumi:"action"`
	// FQDN.
	Fqdn string `pulumi:"fqdn"`
	// FQDN Filter Tag Name to attach this domain.
	FqdnTagName string `pulumi:"fqdnTagName"`
	// Port.
	Port string `pulumi:"port"`
	// Protocol.
	Protocol string `pulumi:"protocol"`
}

// The set of arguments for constructing a AviatrixFqdnTagRule resource.
type AviatrixFqdnTagRuleArgs struct {
	// What action should happen to matching requests. Possible values are: 'Base Policy', 'Allow' or 'Deny'. Defaults to 'Base
	// Policy' if no value is provided.
	Action pulumi.StringPtrInput
	// FQDN.
	Fqdn pulumi.StringInput
	// FQDN Filter Tag Name to attach this domain.
	FqdnTagName pulumi.StringInput
	// Port.
	Port pulumi.StringInput
	// Protocol.
	Protocol pulumi.StringInput
}

func (AviatrixFqdnTagRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*aviatrixFqdnTagRuleArgs)(nil)).Elem()
}

type AviatrixFqdnTagRuleInput interface {
	pulumi.Input

	ToAviatrixFqdnTagRuleOutput() AviatrixFqdnTagRuleOutput
	ToAviatrixFqdnTagRuleOutputWithContext(ctx context.Context) AviatrixFqdnTagRuleOutput
}

func (*AviatrixFqdnTagRule) ElementType() reflect.Type {
	return reflect.TypeOf((**AviatrixFqdnTagRule)(nil)).Elem()
}

func (i *AviatrixFqdnTagRule) ToAviatrixFqdnTagRuleOutput() AviatrixFqdnTagRuleOutput {
	return i.ToAviatrixFqdnTagRuleOutputWithContext(context.Background())
}

func (i *AviatrixFqdnTagRule) ToAviatrixFqdnTagRuleOutputWithContext(ctx context.Context) AviatrixFqdnTagRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixFqdnTagRuleOutput)
}

// AviatrixFqdnTagRuleArrayInput is an input type that accepts AviatrixFqdnTagRuleArray and AviatrixFqdnTagRuleArrayOutput values.
// You can construct a concrete instance of `AviatrixFqdnTagRuleArrayInput` via:
//
//	AviatrixFqdnTagRuleArray{ AviatrixFqdnTagRuleArgs{...} }
type AviatrixFqdnTagRuleArrayInput interface {
	pulumi.Input

	ToAviatrixFqdnTagRuleArrayOutput() AviatrixFqdnTagRuleArrayOutput
	ToAviatrixFqdnTagRuleArrayOutputWithContext(context.Context) AviatrixFqdnTagRuleArrayOutput
}

type AviatrixFqdnTagRuleArray []AviatrixFqdnTagRuleInput

func (AviatrixFqdnTagRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AviatrixFqdnTagRule)(nil)).Elem()
}

func (i AviatrixFqdnTagRuleArray) ToAviatrixFqdnTagRuleArrayOutput() AviatrixFqdnTagRuleArrayOutput {
	return i.ToAviatrixFqdnTagRuleArrayOutputWithContext(context.Background())
}

func (i AviatrixFqdnTagRuleArray) ToAviatrixFqdnTagRuleArrayOutputWithContext(ctx context.Context) AviatrixFqdnTagRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixFqdnTagRuleArrayOutput)
}

// AviatrixFqdnTagRuleMapInput is an input type that accepts AviatrixFqdnTagRuleMap and AviatrixFqdnTagRuleMapOutput values.
// You can construct a concrete instance of `AviatrixFqdnTagRuleMapInput` via:
//
//	AviatrixFqdnTagRuleMap{ "key": AviatrixFqdnTagRuleArgs{...} }
type AviatrixFqdnTagRuleMapInput interface {
	pulumi.Input

	ToAviatrixFqdnTagRuleMapOutput() AviatrixFqdnTagRuleMapOutput
	ToAviatrixFqdnTagRuleMapOutputWithContext(context.Context) AviatrixFqdnTagRuleMapOutput
}

type AviatrixFqdnTagRuleMap map[string]AviatrixFqdnTagRuleInput

func (AviatrixFqdnTagRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AviatrixFqdnTagRule)(nil)).Elem()
}

func (i AviatrixFqdnTagRuleMap) ToAviatrixFqdnTagRuleMapOutput() AviatrixFqdnTagRuleMapOutput {
	return i.ToAviatrixFqdnTagRuleMapOutputWithContext(context.Background())
}

func (i AviatrixFqdnTagRuleMap) ToAviatrixFqdnTagRuleMapOutputWithContext(ctx context.Context) AviatrixFqdnTagRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixFqdnTagRuleMapOutput)
}

type AviatrixFqdnTagRuleOutput struct{ *pulumi.OutputState }

func (AviatrixFqdnTagRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AviatrixFqdnTagRule)(nil)).Elem()
}

func (o AviatrixFqdnTagRuleOutput) ToAviatrixFqdnTagRuleOutput() AviatrixFqdnTagRuleOutput {
	return o
}

func (o AviatrixFqdnTagRuleOutput) ToAviatrixFqdnTagRuleOutputWithContext(ctx context.Context) AviatrixFqdnTagRuleOutput {
	return o
}

// What action should happen to matching requests. Possible values are: 'Base Policy', 'Allow' or 'Deny'. Defaults to 'Base
// Policy' if no value is provided.
func (o AviatrixFqdnTagRuleOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixFqdnTagRule) pulumi.StringPtrOutput { return v.Action }).(pulumi.StringPtrOutput)
}

// FQDN.
func (o AviatrixFqdnTagRuleOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixFqdnTagRule) pulumi.StringOutput { return v.Fqdn }).(pulumi.StringOutput)
}

// FQDN Filter Tag Name to attach this domain.
func (o AviatrixFqdnTagRuleOutput) FqdnTagName() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixFqdnTagRule) pulumi.StringOutput { return v.FqdnTagName }).(pulumi.StringOutput)
}

// Port.
func (o AviatrixFqdnTagRuleOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixFqdnTagRule) pulumi.StringOutput { return v.Port }).(pulumi.StringOutput)
}

// Protocol.
func (o AviatrixFqdnTagRuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixFqdnTagRule) pulumi.StringOutput { return v.Protocol }).(pulumi.StringOutput)
}

type AviatrixFqdnTagRuleArrayOutput struct{ *pulumi.OutputState }

func (AviatrixFqdnTagRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AviatrixFqdnTagRule)(nil)).Elem()
}

func (o AviatrixFqdnTagRuleArrayOutput) ToAviatrixFqdnTagRuleArrayOutput() AviatrixFqdnTagRuleArrayOutput {
	return o
}

func (o AviatrixFqdnTagRuleArrayOutput) ToAviatrixFqdnTagRuleArrayOutputWithContext(ctx context.Context) AviatrixFqdnTagRuleArrayOutput {
	return o
}

func (o AviatrixFqdnTagRuleArrayOutput) Index(i pulumi.IntInput) AviatrixFqdnTagRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AviatrixFqdnTagRule {
		return vs[0].([]*AviatrixFqdnTagRule)[vs[1].(int)]
	}).(AviatrixFqdnTagRuleOutput)
}

type AviatrixFqdnTagRuleMapOutput struct{ *pulumi.OutputState }

func (AviatrixFqdnTagRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AviatrixFqdnTagRule)(nil)).Elem()
}

func (o AviatrixFqdnTagRuleMapOutput) ToAviatrixFqdnTagRuleMapOutput() AviatrixFqdnTagRuleMapOutput {
	return o
}

func (o AviatrixFqdnTagRuleMapOutput) ToAviatrixFqdnTagRuleMapOutputWithContext(ctx context.Context) AviatrixFqdnTagRuleMapOutput {
	return o
}

func (o AviatrixFqdnTagRuleMapOutput) MapIndex(k pulumi.StringInput) AviatrixFqdnTagRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AviatrixFqdnTagRule {
		return vs[0].(map[string]*AviatrixFqdnTagRule)[vs[1].(string)]
	}).(AviatrixFqdnTagRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixFqdnTagRuleInput)(nil)).Elem(), &AviatrixFqdnTagRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixFqdnTagRuleArrayInput)(nil)).Elem(), AviatrixFqdnTagRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixFqdnTagRuleMapInput)(nil)).Elem(), AviatrixFqdnTagRuleMap{})
	pulumi.RegisterOutputType(AviatrixFqdnTagRuleOutput{})
	pulumi.RegisterOutputType(AviatrixFqdnTagRuleArrayOutput{})
	pulumi.RegisterOutputType(AviatrixFqdnTagRuleMapOutput{})
}
