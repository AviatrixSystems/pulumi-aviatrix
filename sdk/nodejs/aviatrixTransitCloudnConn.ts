// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class AviatrixTransitCloudnConn extends pulumi.CustomResource {
    /**
     * Get an existing AviatrixTransitCloudnConn resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AviatrixTransitCloudnConnState, opts?: pulumi.CustomResourceOptions): AviatrixTransitCloudnConn {
        return new AviatrixTransitCloudnConn(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aviatrix:index/aviatrixTransitCloudnConn:AviatrixTransitCloudnConn';

    /**
     * Returns true if the given object is an instance of AviatrixTransitCloudnConn.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AviatrixTransitCloudnConn {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AviatrixTransitCloudnConn.__pulumiType;
    }

    /**
     * Set of approved cidrs. Requires 'enable_learned_cidrs_approval' to be true. Type: Set(String).
     */
    public readonly approvedCidrs!: pulumi.Output<string[]>;
    /**
     * Backup Aviatrix CloudN BGP ASN.
     */
    public readonly backupCloudnAsNum!: pulumi.Output<string | undefined>;
    /**
     * Backup Aviatrix CloudN IP Address.
     */
    public readonly backupCloudnIp!: pulumi.Output<string | undefined>;
    /**
     * Backup Aviatrix CloudN LAN Interface Neighbor's BGP ASN.
     */
    public readonly backupCloudnNeighborAsNum!: pulumi.Output<string | undefined>;
    /**
     * Backup Aviatrix CloudN LAN Interface Neighbor's IP Address.
     */
    public readonly backupCloudnNeighborIp!: pulumi.Output<string | undefined>;
    /**
     * Enable direct connect to Backup Aviatrix CloudN over private network.
     */
    public readonly backupDirectConnect!: pulumi.Output<boolean | undefined>;
    /**
     * Enable Insane Mode for connection to Backup Aviatrix CloudN.
     */
    public readonly backupInsaneMode!: pulumi.Output<boolean | undefined>;
    /**
     * BGP local ASN (Autonomous System Number). Integer between 1-4294967294.
     */
    public readonly bgpLocalAsNum!: pulumi.Output<string>;
    /**
     * Aviatrix CloudN BGP ASN (Autonomous System Number). Integer between 1-4294967294.
     */
    public readonly cloudnAsNum!: pulumi.Output<string>;
    /**
     * CloudN LAN Interface Neighbor's BGP ASN.
     */
    public readonly cloudnNeighborAsNum!: pulumi.Output<string>;
    /**
     * Aviatrix CloudN LAN Interface Neighbor's IP Address.
     */
    public readonly cloudnNeighborIp!: pulumi.Output<string>;
    /**
     * Aviatrix CloudN IP Address.
     */
    public readonly cloudnRemoteIp!: pulumi.Output<string>;
    /**
     * The name of the transit Aviatrix CloudN connection.
     */
    public readonly connectionName!: pulumi.Output<string>;
    /**
     * Enable Direct Connect for private network infrastructure.
     */
    public readonly directConnect!: pulumi.Output<boolean | undefined>;
    /**
     * Enable connection to HA CloudN.
     */
    public readonly enableHa!: pulumi.Output<boolean | undefined>;
    /**
     * Enable learned CIDRs approval.
     */
    public readonly enableLearnedCidrsApproval!: pulumi.Output<boolean | undefined>;
    /**
     * Enable load balancing between Aviatrix CloudN and Backup CloudN.
     */
    public readonly enableLoadBalancing!: pulumi.Output<boolean | undefined>;
    /**
     * The name of the Transit Gateway.
     */
    public readonly gwName!: pulumi.Output<string>;
    /**
     * Enable Insane Mode for this connection.
     */
    public readonly insaneMode!: pulumi.Output<boolean | undefined>;
    /**
     * The ID of the VPC where the Transit Gateway is located.
     */
    public readonly vpcId!: pulumi.Output<string>;

    /**
     * Create a AviatrixTransitCloudnConn resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AviatrixTransitCloudnConnArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AviatrixTransitCloudnConnArgs | AviatrixTransitCloudnConnState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AviatrixTransitCloudnConnState | undefined;
            resourceInputs["approvedCidrs"] = state ? state.approvedCidrs : undefined;
            resourceInputs["backupCloudnAsNum"] = state ? state.backupCloudnAsNum : undefined;
            resourceInputs["backupCloudnIp"] = state ? state.backupCloudnIp : undefined;
            resourceInputs["backupCloudnNeighborAsNum"] = state ? state.backupCloudnNeighborAsNum : undefined;
            resourceInputs["backupCloudnNeighborIp"] = state ? state.backupCloudnNeighborIp : undefined;
            resourceInputs["backupDirectConnect"] = state ? state.backupDirectConnect : undefined;
            resourceInputs["backupInsaneMode"] = state ? state.backupInsaneMode : undefined;
            resourceInputs["bgpLocalAsNum"] = state ? state.bgpLocalAsNum : undefined;
            resourceInputs["cloudnAsNum"] = state ? state.cloudnAsNum : undefined;
            resourceInputs["cloudnNeighborAsNum"] = state ? state.cloudnNeighborAsNum : undefined;
            resourceInputs["cloudnNeighborIp"] = state ? state.cloudnNeighborIp : undefined;
            resourceInputs["cloudnRemoteIp"] = state ? state.cloudnRemoteIp : undefined;
            resourceInputs["connectionName"] = state ? state.connectionName : undefined;
            resourceInputs["directConnect"] = state ? state.directConnect : undefined;
            resourceInputs["enableHa"] = state ? state.enableHa : undefined;
            resourceInputs["enableLearnedCidrsApproval"] = state ? state.enableLearnedCidrsApproval : undefined;
            resourceInputs["enableLoadBalancing"] = state ? state.enableLoadBalancing : undefined;
            resourceInputs["gwName"] = state ? state.gwName : undefined;
            resourceInputs["insaneMode"] = state ? state.insaneMode : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
        } else {
            const args = argsOrState as AviatrixTransitCloudnConnArgs | undefined;
            if ((!args || args.bgpLocalAsNum === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bgpLocalAsNum'");
            }
            if ((!args || args.cloudnAsNum === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cloudnAsNum'");
            }
            if ((!args || args.cloudnNeighborAsNum === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cloudnNeighborAsNum'");
            }
            if ((!args || args.cloudnNeighborIp === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cloudnNeighborIp'");
            }
            if ((!args || args.cloudnRemoteIp === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cloudnRemoteIp'");
            }
            if ((!args || args.connectionName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'connectionName'");
            }
            if ((!args || args.gwName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'gwName'");
            }
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["approvedCidrs"] = args ? args.approvedCidrs : undefined;
            resourceInputs["backupCloudnAsNum"] = args ? args.backupCloudnAsNum : undefined;
            resourceInputs["backupCloudnIp"] = args ? args.backupCloudnIp : undefined;
            resourceInputs["backupCloudnNeighborAsNum"] = args ? args.backupCloudnNeighborAsNum : undefined;
            resourceInputs["backupCloudnNeighborIp"] = args ? args.backupCloudnNeighborIp : undefined;
            resourceInputs["backupDirectConnect"] = args ? args.backupDirectConnect : undefined;
            resourceInputs["backupInsaneMode"] = args ? args.backupInsaneMode : undefined;
            resourceInputs["bgpLocalAsNum"] = args ? args.bgpLocalAsNum : undefined;
            resourceInputs["cloudnAsNum"] = args ? args.cloudnAsNum : undefined;
            resourceInputs["cloudnNeighborAsNum"] = args ? args.cloudnNeighborAsNum : undefined;
            resourceInputs["cloudnNeighborIp"] = args ? args.cloudnNeighborIp : undefined;
            resourceInputs["cloudnRemoteIp"] = args ? args.cloudnRemoteIp : undefined;
            resourceInputs["connectionName"] = args ? args.connectionName : undefined;
            resourceInputs["directConnect"] = args ? args.directConnect : undefined;
            resourceInputs["enableHa"] = args ? args.enableHa : undefined;
            resourceInputs["enableLearnedCidrsApproval"] = args ? args.enableLearnedCidrsApproval : undefined;
            resourceInputs["enableLoadBalancing"] = args ? args.enableLoadBalancing : undefined;
            resourceInputs["gwName"] = args ? args.gwName : undefined;
            resourceInputs["insaneMode"] = args ? args.insaneMode : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AviatrixTransitCloudnConn.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AviatrixTransitCloudnConn resources.
 */
export interface AviatrixTransitCloudnConnState {
    /**
     * Set of approved cidrs. Requires 'enable_learned_cidrs_approval' to be true. Type: Set(String).
     */
    approvedCidrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Backup Aviatrix CloudN BGP ASN.
     */
    backupCloudnAsNum?: pulumi.Input<string>;
    /**
     * Backup Aviatrix CloudN IP Address.
     */
    backupCloudnIp?: pulumi.Input<string>;
    /**
     * Backup Aviatrix CloudN LAN Interface Neighbor's BGP ASN.
     */
    backupCloudnNeighborAsNum?: pulumi.Input<string>;
    /**
     * Backup Aviatrix CloudN LAN Interface Neighbor's IP Address.
     */
    backupCloudnNeighborIp?: pulumi.Input<string>;
    /**
     * Enable direct connect to Backup Aviatrix CloudN over private network.
     */
    backupDirectConnect?: pulumi.Input<boolean>;
    /**
     * Enable Insane Mode for connection to Backup Aviatrix CloudN.
     */
    backupInsaneMode?: pulumi.Input<boolean>;
    /**
     * BGP local ASN (Autonomous System Number). Integer between 1-4294967294.
     */
    bgpLocalAsNum?: pulumi.Input<string>;
    /**
     * Aviatrix CloudN BGP ASN (Autonomous System Number). Integer between 1-4294967294.
     */
    cloudnAsNum?: pulumi.Input<string>;
    /**
     * CloudN LAN Interface Neighbor's BGP ASN.
     */
    cloudnNeighborAsNum?: pulumi.Input<string>;
    /**
     * Aviatrix CloudN LAN Interface Neighbor's IP Address.
     */
    cloudnNeighborIp?: pulumi.Input<string>;
    /**
     * Aviatrix CloudN IP Address.
     */
    cloudnRemoteIp?: pulumi.Input<string>;
    /**
     * The name of the transit Aviatrix CloudN connection.
     */
    connectionName?: pulumi.Input<string>;
    /**
     * Enable Direct Connect for private network infrastructure.
     */
    directConnect?: pulumi.Input<boolean>;
    /**
     * Enable connection to HA CloudN.
     */
    enableHa?: pulumi.Input<boolean>;
    /**
     * Enable learned CIDRs approval.
     */
    enableLearnedCidrsApproval?: pulumi.Input<boolean>;
    /**
     * Enable load balancing between Aviatrix CloudN and Backup CloudN.
     */
    enableLoadBalancing?: pulumi.Input<boolean>;
    /**
     * The name of the Transit Gateway.
     */
    gwName?: pulumi.Input<string>;
    /**
     * Enable Insane Mode for this connection.
     */
    insaneMode?: pulumi.Input<boolean>;
    /**
     * The ID of the VPC where the Transit Gateway is located.
     */
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AviatrixTransitCloudnConn resource.
 */
export interface AviatrixTransitCloudnConnArgs {
    /**
     * Set of approved cidrs. Requires 'enable_learned_cidrs_approval' to be true. Type: Set(String).
     */
    approvedCidrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Backup Aviatrix CloudN BGP ASN.
     */
    backupCloudnAsNum?: pulumi.Input<string>;
    /**
     * Backup Aviatrix CloudN IP Address.
     */
    backupCloudnIp?: pulumi.Input<string>;
    /**
     * Backup Aviatrix CloudN LAN Interface Neighbor's BGP ASN.
     */
    backupCloudnNeighborAsNum?: pulumi.Input<string>;
    /**
     * Backup Aviatrix CloudN LAN Interface Neighbor's IP Address.
     */
    backupCloudnNeighborIp?: pulumi.Input<string>;
    /**
     * Enable direct connect to Backup Aviatrix CloudN over private network.
     */
    backupDirectConnect?: pulumi.Input<boolean>;
    /**
     * Enable Insane Mode for connection to Backup Aviatrix CloudN.
     */
    backupInsaneMode?: pulumi.Input<boolean>;
    /**
     * BGP local ASN (Autonomous System Number). Integer between 1-4294967294.
     */
    bgpLocalAsNum: pulumi.Input<string>;
    /**
     * Aviatrix CloudN BGP ASN (Autonomous System Number). Integer between 1-4294967294.
     */
    cloudnAsNum: pulumi.Input<string>;
    /**
     * CloudN LAN Interface Neighbor's BGP ASN.
     */
    cloudnNeighborAsNum: pulumi.Input<string>;
    /**
     * Aviatrix CloudN LAN Interface Neighbor's IP Address.
     */
    cloudnNeighborIp: pulumi.Input<string>;
    /**
     * Aviatrix CloudN IP Address.
     */
    cloudnRemoteIp: pulumi.Input<string>;
    /**
     * The name of the transit Aviatrix CloudN connection.
     */
    connectionName: pulumi.Input<string>;
    /**
     * Enable Direct Connect for private network infrastructure.
     */
    directConnect?: pulumi.Input<boolean>;
    /**
     * Enable connection to HA CloudN.
     */
    enableHa?: pulumi.Input<boolean>;
    /**
     * Enable learned CIDRs approval.
     */
    enableLearnedCidrsApproval?: pulumi.Input<boolean>;
    /**
     * Enable load balancing between Aviatrix CloudN and Backup CloudN.
     */
    enableLoadBalancing?: pulumi.Input<boolean>;
    /**
     * The name of the Transit Gateway.
     */
    gwName: pulumi.Input<string>;
    /**
     * Enable Insane Mode for this connection.
     */
    insaneMode?: pulumi.Input<boolean>;
    /**
     * The ID of the VPC where the Transit Gateway is located.
     */
    vpcId: pulumi.Input<string>;
}
