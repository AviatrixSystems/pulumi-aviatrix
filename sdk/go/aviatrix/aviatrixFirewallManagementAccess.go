// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aviatrix

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AviatrixFirewallManagementAccess struct {
	pulumi.CustomResourceState

	// Name of the resource to be enabled firewall management access.
	ManagementAccessResourceName pulumi.StringOutput `pulumi:"managementAccessResourceName"`
	// Name of the transit firenet gateway.
	TransitFirenetGatewayName pulumi.StringOutput `pulumi:"transitFirenetGatewayName"`
}

// NewAviatrixFirewallManagementAccess registers a new resource with the given unique name, arguments, and options.
func NewAviatrixFirewallManagementAccess(ctx *pulumi.Context,
	name string, args *AviatrixFirewallManagementAccessArgs, opts ...pulumi.ResourceOption) (*AviatrixFirewallManagementAccess, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ManagementAccessResourceName == nil {
		return nil, errors.New("invalid value for required argument 'ManagementAccessResourceName'")
	}
	if args.TransitFirenetGatewayName == nil {
		return nil, errors.New("invalid value for required argument 'TransitFirenetGatewayName'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource AviatrixFirewallManagementAccess
	err := ctx.RegisterResource("aviatrix:index/aviatrixFirewallManagementAccess:AviatrixFirewallManagementAccess", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAviatrixFirewallManagementAccess gets an existing AviatrixFirewallManagementAccess resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAviatrixFirewallManagementAccess(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AviatrixFirewallManagementAccessState, opts ...pulumi.ResourceOption) (*AviatrixFirewallManagementAccess, error) {
	var resource AviatrixFirewallManagementAccess
	err := ctx.ReadResource("aviatrix:index/aviatrixFirewallManagementAccess:AviatrixFirewallManagementAccess", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AviatrixFirewallManagementAccess resources.
type aviatrixFirewallManagementAccessState struct {
	// Name of the resource to be enabled firewall management access.
	ManagementAccessResourceName *string `pulumi:"managementAccessResourceName"`
	// Name of the transit firenet gateway.
	TransitFirenetGatewayName *string `pulumi:"transitFirenetGatewayName"`
}

type AviatrixFirewallManagementAccessState struct {
	// Name of the resource to be enabled firewall management access.
	ManagementAccessResourceName pulumi.StringPtrInput
	// Name of the transit firenet gateway.
	TransitFirenetGatewayName pulumi.StringPtrInput
}

func (AviatrixFirewallManagementAccessState) ElementType() reflect.Type {
	return reflect.TypeOf((*aviatrixFirewallManagementAccessState)(nil)).Elem()
}

type aviatrixFirewallManagementAccessArgs struct {
	// Name of the resource to be enabled firewall management access.
	ManagementAccessResourceName string `pulumi:"managementAccessResourceName"`
	// Name of the transit firenet gateway.
	TransitFirenetGatewayName string `pulumi:"transitFirenetGatewayName"`
}

// The set of arguments for constructing a AviatrixFirewallManagementAccess resource.
type AviatrixFirewallManagementAccessArgs struct {
	// Name of the resource to be enabled firewall management access.
	ManagementAccessResourceName pulumi.StringInput
	// Name of the transit firenet gateway.
	TransitFirenetGatewayName pulumi.StringInput
}

func (AviatrixFirewallManagementAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*aviatrixFirewallManagementAccessArgs)(nil)).Elem()
}

type AviatrixFirewallManagementAccessInput interface {
	pulumi.Input

	ToAviatrixFirewallManagementAccessOutput() AviatrixFirewallManagementAccessOutput
	ToAviatrixFirewallManagementAccessOutputWithContext(ctx context.Context) AviatrixFirewallManagementAccessOutput
}

func (*AviatrixFirewallManagementAccess) ElementType() reflect.Type {
	return reflect.TypeOf((**AviatrixFirewallManagementAccess)(nil)).Elem()
}

func (i *AviatrixFirewallManagementAccess) ToAviatrixFirewallManagementAccessOutput() AviatrixFirewallManagementAccessOutput {
	return i.ToAviatrixFirewallManagementAccessOutputWithContext(context.Background())
}

func (i *AviatrixFirewallManagementAccess) ToAviatrixFirewallManagementAccessOutputWithContext(ctx context.Context) AviatrixFirewallManagementAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixFirewallManagementAccessOutput)
}

// AviatrixFirewallManagementAccessArrayInput is an input type that accepts AviatrixFirewallManagementAccessArray and AviatrixFirewallManagementAccessArrayOutput values.
// You can construct a concrete instance of `AviatrixFirewallManagementAccessArrayInput` via:
//
//	AviatrixFirewallManagementAccessArray{ AviatrixFirewallManagementAccessArgs{...} }
type AviatrixFirewallManagementAccessArrayInput interface {
	pulumi.Input

	ToAviatrixFirewallManagementAccessArrayOutput() AviatrixFirewallManagementAccessArrayOutput
	ToAviatrixFirewallManagementAccessArrayOutputWithContext(context.Context) AviatrixFirewallManagementAccessArrayOutput
}

type AviatrixFirewallManagementAccessArray []AviatrixFirewallManagementAccessInput

func (AviatrixFirewallManagementAccessArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AviatrixFirewallManagementAccess)(nil)).Elem()
}

func (i AviatrixFirewallManagementAccessArray) ToAviatrixFirewallManagementAccessArrayOutput() AviatrixFirewallManagementAccessArrayOutput {
	return i.ToAviatrixFirewallManagementAccessArrayOutputWithContext(context.Background())
}

func (i AviatrixFirewallManagementAccessArray) ToAviatrixFirewallManagementAccessArrayOutputWithContext(ctx context.Context) AviatrixFirewallManagementAccessArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixFirewallManagementAccessArrayOutput)
}

// AviatrixFirewallManagementAccessMapInput is an input type that accepts AviatrixFirewallManagementAccessMap and AviatrixFirewallManagementAccessMapOutput values.
// You can construct a concrete instance of `AviatrixFirewallManagementAccessMapInput` via:
//
//	AviatrixFirewallManagementAccessMap{ "key": AviatrixFirewallManagementAccessArgs{...} }
type AviatrixFirewallManagementAccessMapInput interface {
	pulumi.Input

	ToAviatrixFirewallManagementAccessMapOutput() AviatrixFirewallManagementAccessMapOutput
	ToAviatrixFirewallManagementAccessMapOutputWithContext(context.Context) AviatrixFirewallManagementAccessMapOutput
}

type AviatrixFirewallManagementAccessMap map[string]AviatrixFirewallManagementAccessInput

func (AviatrixFirewallManagementAccessMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AviatrixFirewallManagementAccess)(nil)).Elem()
}

func (i AviatrixFirewallManagementAccessMap) ToAviatrixFirewallManagementAccessMapOutput() AviatrixFirewallManagementAccessMapOutput {
	return i.ToAviatrixFirewallManagementAccessMapOutputWithContext(context.Background())
}

func (i AviatrixFirewallManagementAccessMap) ToAviatrixFirewallManagementAccessMapOutputWithContext(ctx context.Context) AviatrixFirewallManagementAccessMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixFirewallManagementAccessMapOutput)
}

type AviatrixFirewallManagementAccessOutput struct{ *pulumi.OutputState }

func (AviatrixFirewallManagementAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AviatrixFirewallManagementAccess)(nil)).Elem()
}

func (o AviatrixFirewallManagementAccessOutput) ToAviatrixFirewallManagementAccessOutput() AviatrixFirewallManagementAccessOutput {
	return o
}

func (o AviatrixFirewallManagementAccessOutput) ToAviatrixFirewallManagementAccessOutputWithContext(ctx context.Context) AviatrixFirewallManagementAccessOutput {
	return o
}

// Name of the resource to be enabled firewall management access.
func (o AviatrixFirewallManagementAccessOutput) ManagementAccessResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixFirewallManagementAccess) pulumi.StringOutput { return v.ManagementAccessResourceName }).(pulumi.StringOutput)
}

// Name of the transit firenet gateway.
func (o AviatrixFirewallManagementAccessOutput) TransitFirenetGatewayName() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixFirewallManagementAccess) pulumi.StringOutput { return v.TransitFirenetGatewayName }).(pulumi.StringOutput)
}

type AviatrixFirewallManagementAccessArrayOutput struct{ *pulumi.OutputState }

func (AviatrixFirewallManagementAccessArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AviatrixFirewallManagementAccess)(nil)).Elem()
}

func (o AviatrixFirewallManagementAccessArrayOutput) ToAviatrixFirewallManagementAccessArrayOutput() AviatrixFirewallManagementAccessArrayOutput {
	return o
}

func (o AviatrixFirewallManagementAccessArrayOutput) ToAviatrixFirewallManagementAccessArrayOutputWithContext(ctx context.Context) AviatrixFirewallManagementAccessArrayOutput {
	return o
}

func (o AviatrixFirewallManagementAccessArrayOutput) Index(i pulumi.IntInput) AviatrixFirewallManagementAccessOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AviatrixFirewallManagementAccess {
		return vs[0].([]*AviatrixFirewallManagementAccess)[vs[1].(int)]
	}).(AviatrixFirewallManagementAccessOutput)
}

type AviatrixFirewallManagementAccessMapOutput struct{ *pulumi.OutputState }

func (AviatrixFirewallManagementAccessMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AviatrixFirewallManagementAccess)(nil)).Elem()
}

func (o AviatrixFirewallManagementAccessMapOutput) ToAviatrixFirewallManagementAccessMapOutput() AviatrixFirewallManagementAccessMapOutput {
	return o
}

func (o AviatrixFirewallManagementAccessMapOutput) ToAviatrixFirewallManagementAccessMapOutputWithContext(ctx context.Context) AviatrixFirewallManagementAccessMapOutput {
	return o
}

func (o AviatrixFirewallManagementAccessMapOutput) MapIndex(k pulumi.StringInput) AviatrixFirewallManagementAccessOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AviatrixFirewallManagementAccess {
		return vs[0].(map[string]*AviatrixFirewallManagementAccess)[vs[1].(string)]
	}).(AviatrixFirewallManagementAccessOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixFirewallManagementAccessInput)(nil)).Elem(), &AviatrixFirewallManagementAccess{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixFirewallManagementAccessArrayInput)(nil)).Elem(), AviatrixFirewallManagementAccessArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixFirewallManagementAccessMapInput)(nil)).Elem(), AviatrixFirewallManagementAccessMap{})
	pulumi.RegisterOutputType(AviatrixFirewallManagementAccessOutput{})
	pulumi.RegisterOutputType(AviatrixFirewallManagementAccessArrayOutput{})
	pulumi.RegisterOutputType(AviatrixFirewallManagementAccessMapOutput{})
}
