// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aviatrix

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AviatrixAwsTgwNetworkDomain struct {
	pulumi.CustomResourceState

	// Set to true if the network domain is an aviatrix firewall domain.
	AviatrixFirewall pulumi.BoolPtrOutput `pulumi:"aviatrixFirewall"`
	// Network domain name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Set to true if the network domain is a native egress domain.
	NativeEgress pulumi.BoolPtrOutput `pulumi:"nativeEgress"`
	// Set to true if the network domain is a native firewall domain.
	NativeFirewall pulumi.BoolPtrOutput `pulumi:"nativeFirewall"`
	// AWS TGW name.
	TgwName pulumi.StringOutput `pulumi:"tgwName"`
}

// NewAviatrixAwsTgwNetworkDomain registers a new resource with the given unique name, arguments, and options.
func NewAviatrixAwsTgwNetworkDomain(ctx *pulumi.Context,
	name string, args *AviatrixAwsTgwNetworkDomainArgs, opts ...pulumi.ResourceOption) (*AviatrixAwsTgwNetworkDomain, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TgwName == nil {
		return nil, errors.New("invalid value for required argument 'TgwName'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource AviatrixAwsTgwNetworkDomain
	err := ctx.RegisterResource("aviatrix:index/aviatrixAwsTgwNetworkDomain:AviatrixAwsTgwNetworkDomain", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAviatrixAwsTgwNetworkDomain gets an existing AviatrixAwsTgwNetworkDomain resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAviatrixAwsTgwNetworkDomain(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AviatrixAwsTgwNetworkDomainState, opts ...pulumi.ResourceOption) (*AviatrixAwsTgwNetworkDomain, error) {
	var resource AviatrixAwsTgwNetworkDomain
	err := ctx.ReadResource("aviatrix:index/aviatrixAwsTgwNetworkDomain:AviatrixAwsTgwNetworkDomain", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AviatrixAwsTgwNetworkDomain resources.
type aviatrixAwsTgwNetworkDomainState struct {
	// Set to true if the network domain is an aviatrix firewall domain.
	AviatrixFirewall *bool `pulumi:"aviatrixFirewall"`
	// Network domain name.
	Name *string `pulumi:"name"`
	// Set to true if the network domain is a native egress domain.
	NativeEgress *bool `pulumi:"nativeEgress"`
	// Set to true if the network domain is a native firewall domain.
	NativeFirewall *bool `pulumi:"nativeFirewall"`
	// AWS TGW name.
	TgwName *string `pulumi:"tgwName"`
}

type AviatrixAwsTgwNetworkDomainState struct {
	// Set to true if the network domain is an aviatrix firewall domain.
	AviatrixFirewall pulumi.BoolPtrInput
	// Network domain name.
	Name pulumi.StringPtrInput
	// Set to true if the network domain is a native egress domain.
	NativeEgress pulumi.BoolPtrInput
	// Set to true if the network domain is a native firewall domain.
	NativeFirewall pulumi.BoolPtrInput
	// AWS TGW name.
	TgwName pulumi.StringPtrInput
}

func (AviatrixAwsTgwNetworkDomainState) ElementType() reflect.Type {
	return reflect.TypeOf((*aviatrixAwsTgwNetworkDomainState)(nil)).Elem()
}

type aviatrixAwsTgwNetworkDomainArgs struct {
	// Set to true if the network domain is an aviatrix firewall domain.
	AviatrixFirewall *bool `pulumi:"aviatrixFirewall"`
	// Network domain name.
	Name *string `pulumi:"name"`
	// Set to true if the network domain is a native egress domain.
	NativeEgress *bool `pulumi:"nativeEgress"`
	// Set to true if the network domain is a native firewall domain.
	NativeFirewall *bool `pulumi:"nativeFirewall"`
	// AWS TGW name.
	TgwName string `pulumi:"tgwName"`
}

// The set of arguments for constructing a AviatrixAwsTgwNetworkDomain resource.
type AviatrixAwsTgwNetworkDomainArgs struct {
	// Set to true if the network domain is an aviatrix firewall domain.
	AviatrixFirewall pulumi.BoolPtrInput
	// Network domain name.
	Name pulumi.StringPtrInput
	// Set to true if the network domain is a native egress domain.
	NativeEgress pulumi.BoolPtrInput
	// Set to true if the network domain is a native firewall domain.
	NativeFirewall pulumi.BoolPtrInput
	// AWS TGW name.
	TgwName pulumi.StringInput
}

func (AviatrixAwsTgwNetworkDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*aviatrixAwsTgwNetworkDomainArgs)(nil)).Elem()
}

type AviatrixAwsTgwNetworkDomainInput interface {
	pulumi.Input

	ToAviatrixAwsTgwNetworkDomainOutput() AviatrixAwsTgwNetworkDomainOutput
	ToAviatrixAwsTgwNetworkDomainOutputWithContext(ctx context.Context) AviatrixAwsTgwNetworkDomainOutput
}

func (*AviatrixAwsTgwNetworkDomain) ElementType() reflect.Type {
	return reflect.TypeOf((**AviatrixAwsTgwNetworkDomain)(nil)).Elem()
}

func (i *AviatrixAwsTgwNetworkDomain) ToAviatrixAwsTgwNetworkDomainOutput() AviatrixAwsTgwNetworkDomainOutput {
	return i.ToAviatrixAwsTgwNetworkDomainOutputWithContext(context.Background())
}

func (i *AviatrixAwsTgwNetworkDomain) ToAviatrixAwsTgwNetworkDomainOutputWithContext(ctx context.Context) AviatrixAwsTgwNetworkDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixAwsTgwNetworkDomainOutput)
}

// AviatrixAwsTgwNetworkDomainArrayInput is an input type that accepts AviatrixAwsTgwNetworkDomainArray and AviatrixAwsTgwNetworkDomainArrayOutput values.
// You can construct a concrete instance of `AviatrixAwsTgwNetworkDomainArrayInput` via:
//
//	AviatrixAwsTgwNetworkDomainArray{ AviatrixAwsTgwNetworkDomainArgs{...} }
type AviatrixAwsTgwNetworkDomainArrayInput interface {
	pulumi.Input

	ToAviatrixAwsTgwNetworkDomainArrayOutput() AviatrixAwsTgwNetworkDomainArrayOutput
	ToAviatrixAwsTgwNetworkDomainArrayOutputWithContext(context.Context) AviatrixAwsTgwNetworkDomainArrayOutput
}

type AviatrixAwsTgwNetworkDomainArray []AviatrixAwsTgwNetworkDomainInput

func (AviatrixAwsTgwNetworkDomainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AviatrixAwsTgwNetworkDomain)(nil)).Elem()
}

func (i AviatrixAwsTgwNetworkDomainArray) ToAviatrixAwsTgwNetworkDomainArrayOutput() AviatrixAwsTgwNetworkDomainArrayOutput {
	return i.ToAviatrixAwsTgwNetworkDomainArrayOutputWithContext(context.Background())
}

func (i AviatrixAwsTgwNetworkDomainArray) ToAviatrixAwsTgwNetworkDomainArrayOutputWithContext(ctx context.Context) AviatrixAwsTgwNetworkDomainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixAwsTgwNetworkDomainArrayOutput)
}

// AviatrixAwsTgwNetworkDomainMapInput is an input type that accepts AviatrixAwsTgwNetworkDomainMap and AviatrixAwsTgwNetworkDomainMapOutput values.
// You can construct a concrete instance of `AviatrixAwsTgwNetworkDomainMapInput` via:
//
//	AviatrixAwsTgwNetworkDomainMap{ "key": AviatrixAwsTgwNetworkDomainArgs{...} }
type AviatrixAwsTgwNetworkDomainMapInput interface {
	pulumi.Input

	ToAviatrixAwsTgwNetworkDomainMapOutput() AviatrixAwsTgwNetworkDomainMapOutput
	ToAviatrixAwsTgwNetworkDomainMapOutputWithContext(context.Context) AviatrixAwsTgwNetworkDomainMapOutput
}

type AviatrixAwsTgwNetworkDomainMap map[string]AviatrixAwsTgwNetworkDomainInput

func (AviatrixAwsTgwNetworkDomainMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AviatrixAwsTgwNetworkDomain)(nil)).Elem()
}

func (i AviatrixAwsTgwNetworkDomainMap) ToAviatrixAwsTgwNetworkDomainMapOutput() AviatrixAwsTgwNetworkDomainMapOutput {
	return i.ToAviatrixAwsTgwNetworkDomainMapOutputWithContext(context.Background())
}

func (i AviatrixAwsTgwNetworkDomainMap) ToAviatrixAwsTgwNetworkDomainMapOutputWithContext(ctx context.Context) AviatrixAwsTgwNetworkDomainMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixAwsTgwNetworkDomainMapOutput)
}

type AviatrixAwsTgwNetworkDomainOutput struct{ *pulumi.OutputState }

func (AviatrixAwsTgwNetworkDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AviatrixAwsTgwNetworkDomain)(nil)).Elem()
}

func (o AviatrixAwsTgwNetworkDomainOutput) ToAviatrixAwsTgwNetworkDomainOutput() AviatrixAwsTgwNetworkDomainOutput {
	return o
}

func (o AviatrixAwsTgwNetworkDomainOutput) ToAviatrixAwsTgwNetworkDomainOutputWithContext(ctx context.Context) AviatrixAwsTgwNetworkDomainOutput {
	return o
}

// Set to true if the network domain is an aviatrix firewall domain.
func (o AviatrixAwsTgwNetworkDomainOutput) AviatrixFirewall() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AviatrixAwsTgwNetworkDomain) pulumi.BoolPtrOutput { return v.AviatrixFirewall }).(pulumi.BoolPtrOutput)
}

// Network domain name.
func (o AviatrixAwsTgwNetworkDomainOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixAwsTgwNetworkDomain) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Set to true if the network domain is a native egress domain.
func (o AviatrixAwsTgwNetworkDomainOutput) NativeEgress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AviatrixAwsTgwNetworkDomain) pulumi.BoolPtrOutput { return v.NativeEgress }).(pulumi.BoolPtrOutput)
}

// Set to true if the network domain is a native firewall domain.
func (o AviatrixAwsTgwNetworkDomainOutput) NativeFirewall() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AviatrixAwsTgwNetworkDomain) pulumi.BoolPtrOutput { return v.NativeFirewall }).(pulumi.BoolPtrOutput)
}

// AWS TGW name.
func (o AviatrixAwsTgwNetworkDomainOutput) TgwName() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixAwsTgwNetworkDomain) pulumi.StringOutput { return v.TgwName }).(pulumi.StringOutput)
}

type AviatrixAwsTgwNetworkDomainArrayOutput struct{ *pulumi.OutputState }

func (AviatrixAwsTgwNetworkDomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AviatrixAwsTgwNetworkDomain)(nil)).Elem()
}

func (o AviatrixAwsTgwNetworkDomainArrayOutput) ToAviatrixAwsTgwNetworkDomainArrayOutput() AviatrixAwsTgwNetworkDomainArrayOutput {
	return o
}

func (o AviatrixAwsTgwNetworkDomainArrayOutput) ToAviatrixAwsTgwNetworkDomainArrayOutputWithContext(ctx context.Context) AviatrixAwsTgwNetworkDomainArrayOutput {
	return o
}

func (o AviatrixAwsTgwNetworkDomainArrayOutput) Index(i pulumi.IntInput) AviatrixAwsTgwNetworkDomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AviatrixAwsTgwNetworkDomain {
		return vs[0].([]*AviatrixAwsTgwNetworkDomain)[vs[1].(int)]
	}).(AviatrixAwsTgwNetworkDomainOutput)
}

type AviatrixAwsTgwNetworkDomainMapOutput struct{ *pulumi.OutputState }

func (AviatrixAwsTgwNetworkDomainMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AviatrixAwsTgwNetworkDomain)(nil)).Elem()
}

func (o AviatrixAwsTgwNetworkDomainMapOutput) ToAviatrixAwsTgwNetworkDomainMapOutput() AviatrixAwsTgwNetworkDomainMapOutput {
	return o
}

func (o AviatrixAwsTgwNetworkDomainMapOutput) ToAviatrixAwsTgwNetworkDomainMapOutputWithContext(ctx context.Context) AviatrixAwsTgwNetworkDomainMapOutput {
	return o
}

func (o AviatrixAwsTgwNetworkDomainMapOutput) MapIndex(k pulumi.StringInput) AviatrixAwsTgwNetworkDomainOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AviatrixAwsTgwNetworkDomain {
		return vs[0].(map[string]*AviatrixAwsTgwNetworkDomain)[vs[1].(string)]
	}).(AviatrixAwsTgwNetworkDomainOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixAwsTgwNetworkDomainInput)(nil)).Elem(), &AviatrixAwsTgwNetworkDomain{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixAwsTgwNetworkDomainArrayInput)(nil)).Elem(), AviatrixAwsTgwNetworkDomainArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixAwsTgwNetworkDomainMapInput)(nil)).Elem(), AviatrixAwsTgwNetworkDomainMap{})
	pulumi.RegisterOutputType(AviatrixAwsTgwNetworkDomainOutput{})
	pulumi.RegisterOutputType(AviatrixAwsTgwNetworkDomainArrayOutput{})
	pulumi.RegisterOutputType(AviatrixAwsTgwNetworkDomainMapOutput{})
}
