// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aviatrix

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AviatrixSpokeGatewaySubnetGroup struct {
	pulumi.CustomResourceState

	// Spoke gateway name.
	GwName pulumi.StringOutput `pulumi:"gwName"`
	// Subnet group name.
	Name pulumi.StringOutput `pulumi:"name"`
	// A set of subnets in the subnet group.
	Subnets pulumi.StringArrayOutput `pulumi:"subnets"`
}

// NewAviatrixSpokeGatewaySubnetGroup registers a new resource with the given unique name, arguments, and options.
func NewAviatrixSpokeGatewaySubnetGroup(ctx *pulumi.Context,
	name string, args *AviatrixSpokeGatewaySubnetGroupArgs, opts ...pulumi.ResourceOption) (*AviatrixSpokeGatewaySubnetGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GwName == nil {
		return nil, errors.New("invalid value for required argument 'GwName'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource AviatrixSpokeGatewaySubnetGroup
	err := ctx.RegisterResource("aviatrix:index/aviatrixSpokeGatewaySubnetGroup:AviatrixSpokeGatewaySubnetGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAviatrixSpokeGatewaySubnetGroup gets an existing AviatrixSpokeGatewaySubnetGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAviatrixSpokeGatewaySubnetGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AviatrixSpokeGatewaySubnetGroupState, opts ...pulumi.ResourceOption) (*AviatrixSpokeGatewaySubnetGroup, error) {
	var resource AviatrixSpokeGatewaySubnetGroup
	err := ctx.ReadResource("aviatrix:index/aviatrixSpokeGatewaySubnetGroup:AviatrixSpokeGatewaySubnetGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AviatrixSpokeGatewaySubnetGroup resources.
type aviatrixSpokeGatewaySubnetGroupState struct {
	// Spoke gateway name.
	GwName *string `pulumi:"gwName"`
	// Subnet group name.
	Name *string `pulumi:"name"`
	// A set of subnets in the subnet group.
	Subnets []string `pulumi:"subnets"`
}

type AviatrixSpokeGatewaySubnetGroupState struct {
	// Spoke gateway name.
	GwName pulumi.StringPtrInput
	// Subnet group name.
	Name pulumi.StringPtrInput
	// A set of subnets in the subnet group.
	Subnets pulumi.StringArrayInput
}

func (AviatrixSpokeGatewaySubnetGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*aviatrixSpokeGatewaySubnetGroupState)(nil)).Elem()
}

type aviatrixSpokeGatewaySubnetGroupArgs struct {
	// Spoke gateway name.
	GwName string `pulumi:"gwName"`
	// Subnet group name.
	Name *string `pulumi:"name"`
	// A set of subnets in the subnet group.
	Subnets []string `pulumi:"subnets"`
}

// The set of arguments for constructing a AviatrixSpokeGatewaySubnetGroup resource.
type AviatrixSpokeGatewaySubnetGroupArgs struct {
	// Spoke gateway name.
	GwName pulumi.StringInput
	// Subnet group name.
	Name pulumi.StringPtrInput
	// A set of subnets in the subnet group.
	Subnets pulumi.StringArrayInput
}

func (AviatrixSpokeGatewaySubnetGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*aviatrixSpokeGatewaySubnetGroupArgs)(nil)).Elem()
}

type AviatrixSpokeGatewaySubnetGroupInput interface {
	pulumi.Input

	ToAviatrixSpokeGatewaySubnetGroupOutput() AviatrixSpokeGatewaySubnetGroupOutput
	ToAviatrixSpokeGatewaySubnetGroupOutputWithContext(ctx context.Context) AviatrixSpokeGatewaySubnetGroupOutput
}

func (*AviatrixSpokeGatewaySubnetGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**AviatrixSpokeGatewaySubnetGroup)(nil)).Elem()
}

func (i *AviatrixSpokeGatewaySubnetGroup) ToAviatrixSpokeGatewaySubnetGroupOutput() AviatrixSpokeGatewaySubnetGroupOutput {
	return i.ToAviatrixSpokeGatewaySubnetGroupOutputWithContext(context.Background())
}

func (i *AviatrixSpokeGatewaySubnetGroup) ToAviatrixSpokeGatewaySubnetGroupOutputWithContext(ctx context.Context) AviatrixSpokeGatewaySubnetGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixSpokeGatewaySubnetGroupOutput)
}

// AviatrixSpokeGatewaySubnetGroupArrayInput is an input type that accepts AviatrixSpokeGatewaySubnetGroupArray and AviatrixSpokeGatewaySubnetGroupArrayOutput values.
// You can construct a concrete instance of `AviatrixSpokeGatewaySubnetGroupArrayInput` via:
//
//	AviatrixSpokeGatewaySubnetGroupArray{ AviatrixSpokeGatewaySubnetGroupArgs{...} }
type AviatrixSpokeGatewaySubnetGroupArrayInput interface {
	pulumi.Input

	ToAviatrixSpokeGatewaySubnetGroupArrayOutput() AviatrixSpokeGatewaySubnetGroupArrayOutput
	ToAviatrixSpokeGatewaySubnetGroupArrayOutputWithContext(context.Context) AviatrixSpokeGatewaySubnetGroupArrayOutput
}

type AviatrixSpokeGatewaySubnetGroupArray []AviatrixSpokeGatewaySubnetGroupInput

func (AviatrixSpokeGatewaySubnetGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AviatrixSpokeGatewaySubnetGroup)(nil)).Elem()
}

func (i AviatrixSpokeGatewaySubnetGroupArray) ToAviatrixSpokeGatewaySubnetGroupArrayOutput() AviatrixSpokeGatewaySubnetGroupArrayOutput {
	return i.ToAviatrixSpokeGatewaySubnetGroupArrayOutputWithContext(context.Background())
}

func (i AviatrixSpokeGatewaySubnetGroupArray) ToAviatrixSpokeGatewaySubnetGroupArrayOutputWithContext(ctx context.Context) AviatrixSpokeGatewaySubnetGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixSpokeGatewaySubnetGroupArrayOutput)
}

// AviatrixSpokeGatewaySubnetGroupMapInput is an input type that accepts AviatrixSpokeGatewaySubnetGroupMap and AviatrixSpokeGatewaySubnetGroupMapOutput values.
// You can construct a concrete instance of `AviatrixSpokeGatewaySubnetGroupMapInput` via:
//
//	AviatrixSpokeGatewaySubnetGroupMap{ "key": AviatrixSpokeGatewaySubnetGroupArgs{...} }
type AviatrixSpokeGatewaySubnetGroupMapInput interface {
	pulumi.Input

	ToAviatrixSpokeGatewaySubnetGroupMapOutput() AviatrixSpokeGatewaySubnetGroupMapOutput
	ToAviatrixSpokeGatewaySubnetGroupMapOutputWithContext(context.Context) AviatrixSpokeGatewaySubnetGroupMapOutput
}

type AviatrixSpokeGatewaySubnetGroupMap map[string]AviatrixSpokeGatewaySubnetGroupInput

func (AviatrixSpokeGatewaySubnetGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AviatrixSpokeGatewaySubnetGroup)(nil)).Elem()
}

func (i AviatrixSpokeGatewaySubnetGroupMap) ToAviatrixSpokeGatewaySubnetGroupMapOutput() AviatrixSpokeGatewaySubnetGroupMapOutput {
	return i.ToAviatrixSpokeGatewaySubnetGroupMapOutputWithContext(context.Background())
}

func (i AviatrixSpokeGatewaySubnetGroupMap) ToAviatrixSpokeGatewaySubnetGroupMapOutputWithContext(ctx context.Context) AviatrixSpokeGatewaySubnetGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixSpokeGatewaySubnetGroupMapOutput)
}

type AviatrixSpokeGatewaySubnetGroupOutput struct{ *pulumi.OutputState }

func (AviatrixSpokeGatewaySubnetGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AviatrixSpokeGatewaySubnetGroup)(nil)).Elem()
}

func (o AviatrixSpokeGatewaySubnetGroupOutput) ToAviatrixSpokeGatewaySubnetGroupOutput() AviatrixSpokeGatewaySubnetGroupOutput {
	return o
}

func (o AviatrixSpokeGatewaySubnetGroupOutput) ToAviatrixSpokeGatewaySubnetGroupOutputWithContext(ctx context.Context) AviatrixSpokeGatewaySubnetGroupOutput {
	return o
}

// Spoke gateway name.
func (o AviatrixSpokeGatewaySubnetGroupOutput) GwName() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixSpokeGatewaySubnetGroup) pulumi.StringOutput { return v.GwName }).(pulumi.StringOutput)
}

// Subnet group name.
func (o AviatrixSpokeGatewaySubnetGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixSpokeGatewaySubnetGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A set of subnets in the subnet group.
func (o AviatrixSpokeGatewaySubnetGroupOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AviatrixSpokeGatewaySubnetGroup) pulumi.StringArrayOutput { return v.Subnets }).(pulumi.StringArrayOutput)
}

type AviatrixSpokeGatewaySubnetGroupArrayOutput struct{ *pulumi.OutputState }

func (AviatrixSpokeGatewaySubnetGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AviatrixSpokeGatewaySubnetGroup)(nil)).Elem()
}

func (o AviatrixSpokeGatewaySubnetGroupArrayOutput) ToAviatrixSpokeGatewaySubnetGroupArrayOutput() AviatrixSpokeGatewaySubnetGroupArrayOutput {
	return o
}

func (o AviatrixSpokeGatewaySubnetGroupArrayOutput) ToAviatrixSpokeGatewaySubnetGroupArrayOutputWithContext(ctx context.Context) AviatrixSpokeGatewaySubnetGroupArrayOutput {
	return o
}

func (o AviatrixSpokeGatewaySubnetGroupArrayOutput) Index(i pulumi.IntInput) AviatrixSpokeGatewaySubnetGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AviatrixSpokeGatewaySubnetGroup {
		return vs[0].([]*AviatrixSpokeGatewaySubnetGroup)[vs[1].(int)]
	}).(AviatrixSpokeGatewaySubnetGroupOutput)
}

type AviatrixSpokeGatewaySubnetGroupMapOutput struct{ *pulumi.OutputState }

func (AviatrixSpokeGatewaySubnetGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AviatrixSpokeGatewaySubnetGroup)(nil)).Elem()
}

func (o AviatrixSpokeGatewaySubnetGroupMapOutput) ToAviatrixSpokeGatewaySubnetGroupMapOutput() AviatrixSpokeGatewaySubnetGroupMapOutput {
	return o
}

func (o AviatrixSpokeGatewaySubnetGroupMapOutput) ToAviatrixSpokeGatewaySubnetGroupMapOutputWithContext(ctx context.Context) AviatrixSpokeGatewaySubnetGroupMapOutput {
	return o
}

func (o AviatrixSpokeGatewaySubnetGroupMapOutput) MapIndex(k pulumi.StringInput) AviatrixSpokeGatewaySubnetGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AviatrixSpokeGatewaySubnetGroup {
		return vs[0].(map[string]*AviatrixSpokeGatewaySubnetGroup)[vs[1].(string)]
	}).(AviatrixSpokeGatewaySubnetGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixSpokeGatewaySubnetGroupInput)(nil)).Elem(), &AviatrixSpokeGatewaySubnetGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixSpokeGatewaySubnetGroupArrayInput)(nil)).Elem(), AviatrixSpokeGatewaySubnetGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixSpokeGatewaySubnetGroupMapInput)(nil)).Elem(), AviatrixSpokeGatewaySubnetGroupMap{})
	pulumi.RegisterOutputType(AviatrixSpokeGatewaySubnetGroupOutput{})
	pulumi.RegisterOutputType(AviatrixSpokeGatewaySubnetGroupArrayOutput{})
	pulumi.RegisterOutputType(AviatrixSpokeGatewaySubnetGroupMapOutput{})
}
