// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aviatrix

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AviatrixFirewallInstanceAssociation struct {
	pulumi.CustomResourceState

	// Switch to attach/detach firewall instance to/from fireNet.
	Attached pulumi.BoolPtrOutput `pulumi:"attached"`
	// Egress interface ID, required if it is a firewall instance.
	EgressInterface pulumi.StringPtrOutput `pulumi:"egressInterface"`
	// Name of the gateway to launch the firewall instance.
	FirenetGwName pulumi.StringPtrOutput `pulumi:"firenetGwName"`
	// Firewall instance name, or FQDN Gateway's gw_name, required if it is a AWS or Azure firewall instance. Not allowed for
	// GCP
	FirewallName pulumi.StringPtrOutput `pulumi:"firewallName"`
	// ID of Firewall instance, or FQDN Gateway's gw_name.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// Lan interface ID, required if it is a firewall instance.
	LanInterface pulumi.StringPtrOutput `pulumi:"lanInterface"`
	// Management interface ID, required if it is a firewall instance.
	ManagementInterface pulumi.StringPtrOutput `pulumi:"managementInterface"`
	// Indication it is a firewall instance or FQDN gateway to be associated to fireNet. Valid values: 'Generic',
	// 'fqdn_gateway'. Value 'fqdn_gateway' is required for FQDN gateway.
	VendorType pulumi.StringPtrOutput `pulumi:"vendorType"`
	// VPC ID.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
}

// NewAviatrixFirewallInstanceAssociation registers a new resource with the given unique name, arguments, and options.
func NewAviatrixFirewallInstanceAssociation(ctx *pulumi.Context,
	name string, args *AviatrixFirewallInstanceAssociationArgs, opts ...pulumi.ResourceOption) (*AviatrixFirewallInstanceAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource AviatrixFirewallInstanceAssociation
	err := ctx.RegisterResource("aviatrix:index/aviatrixFirewallInstanceAssociation:AviatrixFirewallInstanceAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAviatrixFirewallInstanceAssociation gets an existing AviatrixFirewallInstanceAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAviatrixFirewallInstanceAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AviatrixFirewallInstanceAssociationState, opts ...pulumi.ResourceOption) (*AviatrixFirewallInstanceAssociation, error) {
	var resource AviatrixFirewallInstanceAssociation
	err := ctx.ReadResource("aviatrix:index/aviatrixFirewallInstanceAssociation:AviatrixFirewallInstanceAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AviatrixFirewallInstanceAssociation resources.
type aviatrixFirewallInstanceAssociationState struct {
	// Switch to attach/detach firewall instance to/from fireNet.
	Attached *bool `pulumi:"attached"`
	// Egress interface ID, required if it is a firewall instance.
	EgressInterface *string `pulumi:"egressInterface"`
	// Name of the gateway to launch the firewall instance.
	FirenetGwName *string `pulumi:"firenetGwName"`
	// Firewall instance name, or FQDN Gateway's gw_name, required if it is a AWS or Azure firewall instance. Not allowed for
	// GCP
	FirewallName *string `pulumi:"firewallName"`
	// ID of Firewall instance, or FQDN Gateway's gw_name.
	InstanceId *string `pulumi:"instanceId"`
	// Lan interface ID, required if it is a firewall instance.
	LanInterface *string `pulumi:"lanInterface"`
	// Management interface ID, required if it is a firewall instance.
	ManagementInterface *string `pulumi:"managementInterface"`
	// Indication it is a firewall instance or FQDN gateway to be associated to fireNet. Valid values: 'Generic',
	// 'fqdn_gateway'. Value 'fqdn_gateway' is required for FQDN gateway.
	VendorType *string `pulumi:"vendorType"`
	// VPC ID.
	VpcId *string `pulumi:"vpcId"`
}

type AviatrixFirewallInstanceAssociationState struct {
	// Switch to attach/detach firewall instance to/from fireNet.
	Attached pulumi.BoolPtrInput
	// Egress interface ID, required if it is a firewall instance.
	EgressInterface pulumi.StringPtrInput
	// Name of the gateway to launch the firewall instance.
	FirenetGwName pulumi.StringPtrInput
	// Firewall instance name, or FQDN Gateway's gw_name, required if it is a AWS or Azure firewall instance. Not allowed for
	// GCP
	FirewallName pulumi.StringPtrInput
	// ID of Firewall instance, or FQDN Gateway's gw_name.
	InstanceId pulumi.StringPtrInput
	// Lan interface ID, required if it is a firewall instance.
	LanInterface pulumi.StringPtrInput
	// Management interface ID, required if it is a firewall instance.
	ManagementInterface pulumi.StringPtrInput
	// Indication it is a firewall instance or FQDN gateway to be associated to fireNet. Valid values: 'Generic',
	// 'fqdn_gateway'. Value 'fqdn_gateway' is required for FQDN gateway.
	VendorType pulumi.StringPtrInput
	// VPC ID.
	VpcId pulumi.StringPtrInput
}

func (AviatrixFirewallInstanceAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*aviatrixFirewallInstanceAssociationState)(nil)).Elem()
}

type aviatrixFirewallInstanceAssociationArgs struct {
	// Switch to attach/detach firewall instance to/from fireNet.
	Attached *bool `pulumi:"attached"`
	// Egress interface ID, required if it is a firewall instance.
	EgressInterface *string `pulumi:"egressInterface"`
	// Name of the gateway to launch the firewall instance.
	FirenetGwName *string `pulumi:"firenetGwName"`
	// Firewall instance name, or FQDN Gateway's gw_name, required if it is a AWS or Azure firewall instance. Not allowed for
	// GCP
	FirewallName *string `pulumi:"firewallName"`
	// ID of Firewall instance, or FQDN Gateway's gw_name.
	InstanceId string `pulumi:"instanceId"`
	// Lan interface ID, required if it is a firewall instance.
	LanInterface *string `pulumi:"lanInterface"`
	// Management interface ID, required if it is a firewall instance.
	ManagementInterface *string `pulumi:"managementInterface"`
	// Indication it is a firewall instance or FQDN gateway to be associated to fireNet. Valid values: 'Generic',
	// 'fqdn_gateway'. Value 'fqdn_gateway' is required for FQDN gateway.
	VendorType *string `pulumi:"vendorType"`
	// VPC ID.
	VpcId string `pulumi:"vpcId"`
}

// The set of arguments for constructing a AviatrixFirewallInstanceAssociation resource.
type AviatrixFirewallInstanceAssociationArgs struct {
	// Switch to attach/detach firewall instance to/from fireNet.
	Attached pulumi.BoolPtrInput
	// Egress interface ID, required if it is a firewall instance.
	EgressInterface pulumi.StringPtrInput
	// Name of the gateway to launch the firewall instance.
	FirenetGwName pulumi.StringPtrInput
	// Firewall instance name, or FQDN Gateway's gw_name, required if it is a AWS or Azure firewall instance. Not allowed for
	// GCP
	FirewallName pulumi.StringPtrInput
	// ID of Firewall instance, or FQDN Gateway's gw_name.
	InstanceId pulumi.StringInput
	// Lan interface ID, required if it is a firewall instance.
	LanInterface pulumi.StringPtrInput
	// Management interface ID, required if it is a firewall instance.
	ManagementInterface pulumi.StringPtrInput
	// Indication it is a firewall instance or FQDN gateway to be associated to fireNet. Valid values: 'Generic',
	// 'fqdn_gateway'. Value 'fqdn_gateway' is required for FQDN gateway.
	VendorType pulumi.StringPtrInput
	// VPC ID.
	VpcId pulumi.StringInput
}

func (AviatrixFirewallInstanceAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*aviatrixFirewallInstanceAssociationArgs)(nil)).Elem()
}

type AviatrixFirewallInstanceAssociationInput interface {
	pulumi.Input

	ToAviatrixFirewallInstanceAssociationOutput() AviatrixFirewallInstanceAssociationOutput
	ToAviatrixFirewallInstanceAssociationOutputWithContext(ctx context.Context) AviatrixFirewallInstanceAssociationOutput
}

func (*AviatrixFirewallInstanceAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((**AviatrixFirewallInstanceAssociation)(nil)).Elem()
}

func (i *AviatrixFirewallInstanceAssociation) ToAviatrixFirewallInstanceAssociationOutput() AviatrixFirewallInstanceAssociationOutput {
	return i.ToAviatrixFirewallInstanceAssociationOutputWithContext(context.Background())
}

func (i *AviatrixFirewallInstanceAssociation) ToAviatrixFirewallInstanceAssociationOutputWithContext(ctx context.Context) AviatrixFirewallInstanceAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixFirewallInstanceAssociationOutput)
}

// AviatrixFirewallInstanceAssociationArrayInput is an input type that accepts AviatrixFirewallInstanceAssociationArray and AviatrixFirewallInstanceAssociationArrayOutput values.
// You can construct a concrete instance of `AviatrixFirewallInstanceAssociationArrayInput` via:
//
//	AviatrixFirewallInstanceAssociationArray{ AviatrixFirewallInstanceAssociationArgs{...} }
type AviatrixFirewallInstanceAssociationArrayInput interface {
	pulumi.Input

	ToAviatrixFirewallInstanceAssociationArrayOutput() AviatrixFirewallInstanceAssociationArrayOutput
	ToAviatrixFirewallInstanceAssociationArrayOutputWithContext(context.Context) AviatrixFirewallInstanceAssociationArrayOutput
}

type AviatrixFirewallInstanceAssociationArray []AviatrixFirewallInstanceAssociationInput

func (AviatrixFirewallInstanceAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AviatrixFirewallInstanceAssociation)(nil)).Elem()
}

func (i AviatrixFirewallInstanceAssociationArray) ToAviatrixFirewallInstanceAssociationArrayOutput() AviatrixFirewallInstanceAssociationArrayOutput {
	return i.ToAviatrixFirewallInstanceAssociationArrayOutputWithContext(context.Background())
}

func (i AviatrixFirewallInstanceAssociationArray) ToAviatrixFirewallInstanceAssociationArrayOutputWithContext(ctx context.Context) AviatrixFirewallInstanceAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixFirewallInstanceAssociationArrayOutput)
}

// AviatrixFirewallInstanceAssociationMapInput is an input type that accepts AviatrixFirewallInstanceAssociationMap and AviatrixFirewallInstanceAssociationMapOutput values.
// You can construct a concrete instance of `AviatrixFirewallInstanceAssociationMapInput` via:
//
//	AviatrixFirewallInstanceAssociationMap{ "key": AviatrixFirewallInstanceAssociationArgs{...} }
type AviatrixFirewallInstanceAssociationMapInput interface {
	pulumi.Input

	ToAviatrixFirewallInstanceAssociationMapOutput() AviatrixFirewallInstanceAssociationMapOutput
	ToAviatrixFirewallInstanceAssociationMapOutputWithContext(context.Context) AviatrixFirewallInstanceAssociationMapOutput
}

type AviatrixFirewallInstanceAssociationMap map[string]AviatrixFirewallInstanceAssociationInput

func (AviatrixFirewallInstanceAssociationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AviatrixFirewallInstanceAssociation)(nil)).Elem()
}

func (i AviatrixFirewallInstanceAssociationMap) ToAviatrixFirewallInstanceAssociationMapOutput() AviatrixFirewallInstanceAssociationMapOutput {
	return i.ToAviatrixFirewallInstanceAssociationMapOutputWithContext(context.Background())
}

func (i AviatrixFirewallInstanceAssociationMap) ToAviatrixFirewallInstanceAssociationMapOutputWithContext(ctx context.Context) AviatrixFirewallInstanceAssociationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixFirewallInstanceAssociationMapOutput)
}

type AviatrixFirewallInstanceAssociationOutput struct{ *pulumi.OutputState }

func (AviatrixFirewallInstanceAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AviatrixFirewallInstanceAssociation)(nil)).Elem()
}

func (o AviatrixFirewallInstanceAssociationOutput) ToAviatrixFirewallInstanceAssociationOutput() AviatrixFirewallInstanceAssociationOutput {
	return o
}

func (o AviatrixFirewallInstanceAssociationOutput) ToAviatrixFirewallInstanceAssociationOutputWithContext(ctx context.Context) AviatrixFirewallInstanceAssociationOutput {
	return o
}

// Switch to attach/detach firewall instance to/from fireNet.
func (o AviatrixFirewallInstanceAssociationOutput) Attached() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AviatrixFirewallInstanceAssociation) pulumi.BoolPtrOutput { return v.Attached }).(pulumi.BoolPtrOutput)
}

// Egress interface ID, required if it is a firewall instance.
func (o AviatrixFirewallInstanceAssociationOutput) EgressInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixFirewallInstanceAssociation) pulumi.StringPtrOutput { return v.EgressInterface }).(pulumi.StringPtrOutput)
}

// Name of the gateway to launch the firewall instance.
func (o AviatrixFirewallInstanceAssociationOutput) FirenetGwName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixFirewallInstanceAssociation) pulumi.StringPtrOutput { return v.FirenetGwName }).(pulumi.StringPtrOutput)
}

// Firewall instance name, or FQDN Gateway's gw_name, required if it is a AWS or Azure firewall instance. Not allowed for
// GCP
func (o AviatrixFirewallInstanceAssociationOutput) FirewallName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixFirewallInstanceAssociation) pulumi.StringPtrOutput { return v.FirewallName }).(pulumi.StringPtrOutput)
}

// ID of Firewall instance, or FQDN Gateway's gw_name.
func (o AviatrixFirewallInstanceAssociationOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixFirewallInstanceAssociation) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// Lan interface ID, required if it is a firewall instance.
func (o AviatrixFirewallInstanceAssociationOutput) LanInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixFirewallInstanceAssociation) pulumi.StringPtrOutput { return v.LanInterface }).(pulumi.StringPtrOutput)
}

// Management interface ID, required if it is a firewall instance.
func (o AviatrixFirewallInstanceAssociationOutput) ManagementInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixFirewallInstanceAssociation) pulumi.StringPtrOutput { return v.ManagementInterface }).(pulumi.StringPtrOutput)
}

// Indication it is a firewall instance or FQDN gateway to be associated to fireNet. Valid values: 'Generic',
// 'fqdn_gateway'. Value 'fqdn_gateway' is required for FQDN gateway.
func (o AviatrixFirewallInstanceAssociationOutput) VendorType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixFirewallInstanceAssociation) pulumi.StringPtrOutput { return v.VendorType }).(pulumi.StringPtrOutput)
}

// VPC ID.
func (o AviatrixFirewallInstanceAssociationOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixFirewallInstanceAssociation) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

type AviatrixFirewallInstanceAssociationArrayOutput struct{ *pulumi.OutputState }

func (AviatrixFirewallInstanceAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AviatrixFirewallInstanceAssociation)(nil)).Elem()
}

func (o AviatrixFirewallInstanceAssociationArrayOutput) ToAviatrixFirewallInstanceAssociationArrayOutput() AviatrixFirewallInstanceAssociationArrayOutput {
	return o
}

func (o AviatrixFirewallInstanceAssociationArrayOutput) ToAviatrixFirewallInstanceAssociationArrayOutputWithContext(ctx context.Context) AviatrixFirewallInstanceAssociationArrayOutput {
	return o
}

func (o AviatrixFirewallInstanceAssociationArrayOutput) Index(i pulumi.IntInput) AviatrixFirewallInstanceAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AviatrixFirewallInstanceAssociation {
		return vs[0].([]*AviatrixFirewallInstanceAssociation)[vs[1].(int)]
	}).(AviatrixFirewallInstanceAssociationOutput)
}

type AviatrixFirewallInstanceAssociationMapOutput struct{ *pulumi.OutputState }

func (AviatrixFirewallInstanceAssociationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AviatrixFirewallInstanceAssociation)(nil)).Elem()
}

func (o AviatrixFirewallInstanceAssociationMapOutput) ToAviatrixFirewallInstanceAssociationMapOutput() AviatrixFirewallInstanceAssociationMapOutput {
	return o
}

func (o AviatrixFirewallInstanceAssociationMapOutput) ToAviatrixFirewallInstanceAssociationMapOutputWithContext(ctx context.Context) AviatrixFirewallInstanceAssociationMapOutput {
	return o
}

func (o AviatrixFirewallInstanceAssociationMapOutput) MapIndex(k pulumi.StringInput) AviatrixFirewallInstanceAssociationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AviatrixFirewallInstanceAssociation {
		return vs[0].(map[string]*AviatrixFirewallInstanceAssociation)[vs[1].(string)]
	}).(AviatrixFirewallInstanceAssociationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixFirewallInstanceAssociationInput)(nil)).Elem(), &AviatrixFirewallInstanceAssociation{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixFirewallInstanceAssociationArrayInput)(nil)).Elem(), AviatrixFirewallInstanceAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixFirewallInstanceAssociationMapInput)(nil)).Elem(), AviatrixFirewallInstanceAssociationMap{})
	pulumi.RegisterOutputType(AviatrixFirewallInstanceAssociationOutput{})
	pulumi.RegisterOutputType(AviatrixFirewallInstanceAssociationArrayOutput{})
	pulumi.RegisterOutputType(AviatrixFirewallInstanceAssociationMapOutput{})
}
