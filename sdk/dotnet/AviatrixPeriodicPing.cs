// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aviatrix
{
    /// <summary>
    /// The **aviatrix_periodic_ping** resource manages the periodic ping feature for Aviatrix gateways.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Aviatrix = Pulumi.Aviatrix;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Enable Periodic Ping for a Gateway
    ///     var testPing = new Aviatrix.AviatrixPeriodicPing("testPing", new()
    ///     {
    ///         GwName = "test-gw",
    ///         Interval = 600,
    ///         IpAddress = "127.0.0.1",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// **aviatrix_periodic_ping** can be imported using the `gw_name`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import aviatrix:index/aviatrixPeriodicPing:AviatrixPeriodicPing test gw_name
    /// ```
    /// </summary>
    [AviatrixResourceType("aviatrix:index/aviatrixPeriodicPing:AviatrixPeriodicPing")]
    public partial class AviatrixPeriodicPing : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Name of the gateway.
        /// </summary>
        [Output("gwName")]
        public Output<string> GwName { get; private set; } = null!;

        /// <summary>
        /// Interval between pings in seconds.
        /// </summary>
        [Output("interval")]
        public Output<int> Interval { get; private set; } = null!;

        /// <summary>
        /// IP Address to ping.
        /// </summary>
        [Output("ipAddress")]
        public Output<string> IpAddress { get; private set; } = null!;


        /// <summary>
        /// Create a AviatrixPeriodicPing resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AviatrixPeriodicPing(string name, AviatrixPeriodicPingArgs args, CustomResourceOptions? options = null)
            : base("aviatrix:index/aviatrixPeriodicPing:AviatrixPeriodicPing", name, args ?? new AviatrixPeriodicPingArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AviatrixPeriodicPing(string name, Input<string> id, AviatrixPeriodicPingState? state = null, CustomResourceOptions? options = null)
            : base("aviatrix:index/aviatrixPeriodicPing:AviatrixPeriodicPing", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/astipkovits",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AviatrixPeriodicPing resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AviatrixPeriodicPing Get(string name, Input<string> id, AviatrixPeriodicPingState? state = null, CustomResourceOptions? options = null)
        {
            return new AviatrixPeriodicPing(name, id, state, options);
        }
    }

    public sealed class AviatrixPeriodicPingArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the gateway.
        /// </summary>
        [Input("gwName", required: true)]
        public Input<string> GwName { get; set; } = null!;

        /// <summary>
        /// Interval between pings in seconds.
        /// </summary>
        [Input("interval", required: true)]
        public Input<int> Interval { get; set; } = null!;

        /// <summary>
        /// IP Address to ping.
        /// </summary>
        [Input("ipAddress", required: true)]
        public Input<string> IpAddress { get; set; } = null!;

        public AviatrixPeriodicPingArgs()
        {
        }
        public static new AviatrixPeriodicPingArgs Empty => new AviatrixPeriodicPingArgs();
    }

    public sealed class AviatrixPeriodicPingState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the gateway.
        /// </summary>
        [Input("gwName")]
        public Input<string>? GwName { get; set; }

        /// <summary>
        /// Interval between pings in seconds.
        /// </summary>
        [Input("interval")]
        public Input<int>? Interval { get; set; }

        /// <summary>
        /// IP Address to ping.
        /// </summary>
        [Input("ipAddress")]
        public Input<string>? IpAddress { get; set; }

        public AviatrixPeriodicPingState()
        {
        }
        public static new AviatrixPeriodicPingState Empty => new AviatrixPeriodicPingState();
    }
}
