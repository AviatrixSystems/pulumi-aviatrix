// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aviatrix

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get the list of VPC's for use in other resources.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/astipkovits/pulumi-aviatrix/sdk/go/aviatrix"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err = aviatrix.GetAviatrixVpcTracker(ctx, &GetAviatrixVpcTrackerArgs{
//				AccountName: pulumi.StringRef("bar"),
//				Cidr:        pulumi.StringRef("10.0.0.1/24"),
//				CloudType:   pulumi.IntRef(1),
//				Region:      pulumi.StringRef("us-west-1"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ## Notes
//
// * Please be aware this data source could take up to 20 minutes to refresh depending on the number of VPCs and cloud accounts.
func GetAviatrixVpcTracker(ctx *pulumi.Context, args *GetAviatrixVpcTrackerArgs, opts ...pulumi.InvokeOption) (*GetAviatrixVpcTrackerResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetAviatrixVpcTrackerResult
	err := ctx.Invoke("aviatrix:index/getAviatrixVpcTracker:getAviatrixVpcTracker", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAviatrixVpcTracker.
type GetAviatrixVpcTrackerArgs struct {
	// Filters VPC list by access account name.
	AccountName *string `pulumi:"accountName"`
	// Filters VPC list by CIDR (AWS/Azure only).
	Cidr *string `pulumi:"cidr"`
	// Filters VPC list by cloud provider id. For example, cloudType = 1 will give all AWS VPCs.
	CloudType *int `pulumi:"cloudType"`
	// Filters VPC list by region (AWS/Azure only).
	Region *string `pulumi:"region"`
}

// A collection of values returned by getAviatrixVpcTracker.
type GetAviatrixVpcTrackerResult struct {
	// Aviatrix access account associated with the VPC.
	AccountName *string `pulumi:"accountName"`
	// Subnet CIDR.
	Cidr *string `pulumi:"cidr"`
	// Cloud provider id hosting this VPC.
	CloudType *int `pulumi:"cloudType"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Subnet region.
	Region *string `pulumi:"region"`
	// List of VPCs from the VPC tracker.
	VpcLists []GetAviatrixVpcTrackerVpcList `pulumi:"vpcLists"`
}

func GetAviatrixVpcTrackerOutput(ctx *pulumi.Context, args GetAviatrixVpcTrackerOutputArgs, opts ...pulumi.InvokeOption) GetAviatrixVpcTrackerResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAviatrixVpcTrackerResult, error) {
			args := v.(GetAviatrixVpcTrackerArgs)
			r, err := GetAviatrixVpcTracker(ctx, &args, opts...)
			var s GetAviatrixVpcTrackerResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetAviatrixVpcTrackerResultOutput)
}

// A collection of arguments for invoking getAviatrixVpcTracker.
type GetAviatrixVpcTrackerOutputArgs struct {
	// Filters VPC list by access account name.
	AccountName pulumi.StringPtrInput `pulumi:"accountName"`
	// Filters VPC list by CIDR (AWS/Azure only).
	Cidr pulumi.StringPtrInput `pulumi:"cidr"`
	// Filters VPC list by cloud provider id. For example, cloudType = 1 will give all AWS VPCs.
	CloudType pulumi.IntPtrInput `pulumi:"cloudType"`
	// Filters VPC list by region (AWS/Azure only).
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (GetAviatrixVpcTrackerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAviatrixVpcTrackerArgs)(nil)).Elem()
}

// A collection of values returned by getAviatrixVpcTracker.
type GetAviatrixVpcTrackerResultOutput struct{ *pulumi.OutputState }

func (GetAviatrixVpcTrackerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAviatrixVpcTrackerResult)(nil)).Elem()
}

func (o GetAviatrixVpcTrackerResultOutput) ToGetAviatrixVpcTrackerResultOutput() GetAviatrixVpcTrackerResultOutput {
	return o
}

func (o GetAviatrixVpcTrackerResultOutput) ToGetAviatrixVpcTrackerResultOutputWithContext(ctx context.Context) GetAviatrixVpcTrackerResultOutput {
	return o
}

// Aviatrix access account associated with the VPC.
func (o GetAviatrixVpcTrackerResultOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAviatrixVpcTrackerResult) *string { return v.AccountName }).(pulumi.StringPtrOutput)
}

// Subnet CIDR.
func (o GetAviatrixVpcTrackerResultOutput) Cidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAviatrixVpcTrackerResult) *string { return v.Cidr }).(pulumi.StringPtrOutput)
}

// Cloud provider id hosting this VPC.
func (o GetAviatrixVpcTrackerResultOutput) CloudType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetAviatrixVpcTrackerResult) *int { return v.CloudType }).(pulumi.IntPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAviatrixVpcTrackerResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAviatrixVpcTrackerResult) string { return v.Id }).(pulumi.StringOutput)
}

// Subnet region.
func (o GetAviatrixVpcTrackerResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAviatrixVpcTrackerResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// List of VPCs from the VPC tracker.
func (o GetAviatrixVpcTrackerResultOutput) VpcLists() GetAviatrixVpcTrackerVpcListArrayOutput {
	return o.ApplyT(func(v GetAviatrixVpcTrackerResult) []GetAviatrixVpcTrackerVpcList { return v.VpcLists }).(GetAviatrixVpcTrackerVpcListArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAviatrixVpcTrackerResultOutput{})
}
