// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The **aviatrix_edge_spoke** resource creates the Aviatrix Edge as a Spoke. This resource is available as of provider version R2.23+.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aviatrix from "@pulumi/aviatrix";
 *
 * // Create a DHCP Edge as a Spoke
 * const test = new aviatrix.AviatrixEdgeSpoke("test", {
 *     gwName: "edge-test",
 *     lanInterfaceIpPrefix: "10.60.0.0/24",
 *     localAsNumber: "65000",
 *     managementInterfaceConfig: "DHCP",
 *     prependAsPaths: [
 *         "65000",
 *         "65000",
 *     ],
 *     siteId: "site-123",
 *     wanDefaultGatewayIp: "10.60.0.0",
 *     wanInterfaceIpPrefix: "10.60.0.0/24",
 *     ztpFileDownloadPath: "/ztp/download/path",
 *     ztpFileType: "iso",
 * });
 * ```
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aviatrix from "@pulumi/aviatrix";
 *
 * // Create a Static Edge as a Spoke
 * const test = new aviatrix.AviatrixEdgeSpoke("test", {
 *     dnsServerIp: "10.60.0.0",
 *     gwName: "edge-test",
 *     lanInterfaceIpPrefix: "10.60.0.0/24",
 *     localAsNumber: "65000",
 *     managementDefaultGatewayIp: "10.60.0.0",
 *     managementInterfaceConfig: "Static",
 *     managementInterfaceIpPrefix: "10.60.0.0/24",
 *     prependAsPaths: [
 *         "65000",
 *         "65000",
 *     ],
 *     secondaryDnsServerIp: "10.60.0.0",
 *     siteId: "site-123",
 *     wanDefaultGatewayIp: "10.60.0.0",
 *     wanInterfaceIpPrefix: "10.60.0.0/24",
 *     ztpFileDownloadPath: "/ztp/download/path",
 *     ztpFileType: "iso",
 * });
 * ```
 *
 * ## Import
 *
 * **edge_spoke** can be imported using the `gw_name`, e.g.
 *
 * ```sh
 *  $ pulumi import aviatrix:index/aviatrixEdgeSpoke:AviatrixEdgeSpoke test gw_name
 * ```
 */
export class AviatrixEdgeSpoke extends pulumi.CustomResource {
    /**
     * Get an existing AviatrixEdgeSpoke resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AviatrixEdgeSpokeState, opts?: pulumi.CustomResourceOptions): AviatrixEdgeSpoke {
        return new AviatrixEdgeSpoke(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aviatrix:index/aviatrixEdgeSpoke:AviatrixEdgeSpoke';

    /**
     * Returns true if the given object is an instance of AviatrixEdgeSpoke.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AviatrixEdgeSpoke {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AviatrixEdgeSpoke.__pulumiType;
    }

    /**
     * Set of approved learned CIDRs. Valid only when `enableLearnedCidrsApproval` is set to true. Example: ["10.1.0.0/116", "10.2.0.0/16"].
     */
    public readonly approvedLearnedCidrs!: pulumi.Output<string[] | undefined>;
    /**
     * BGP hold time. Unit is in seconds. Valid values are between 12 and 360. Default value: 180.
     */
    public readonly bgpHoldTime!: pulumi.Output<number | undefined>;
    /**
     * BGP route polling time. Unit is in seconds. Valid values are between 10 and 50. Default value: 50.
     */
    public readonly bgpPollingTime!: pulumi.Output<number | undefined>;
    /**
     * DNS server IP. Required and valid when `managementInterfaceConfig` is "Static".
     */
    public readonly dnsServerIp!: pulumi.Output<string | undefined>;
    /**
     * Switch to enable Edge Active-Standby mode. Valid values: true, false. Default value: false.
     */
    public readonly enableEdgeActiveStandby!: pulumi.Output<boolean | undefined>;
    /**
     * Switch to enable Preemptive Mode for Edge Active-Standby. Valid values: true, false. Default value: false.
     */
    public readonly enableEdgeActiveStandbyPreemptive!: pulumi.Output<boolean | undefined>;
    /**
     * Switch to enable Edge transitive routing. Valid values: true, false. Default value: false.
     */
    public readonly enableEdgeTransitiveRouting!: pulumi.Output<boolean | undefined>;
    /**
     * Switch to enable jumbo frame. Valid values: true, false. Default value: false.
     */
    public readonly enableJumboFrame!: pulumi.Output<boolean | undefined>;
    /**
     * Switch to enable learned CIDR approval. Valid values: true, false. Default value: false.
     */
    public readonly enableLearnedCidrsApproval!: pulumi.Output<boolean | undefined>;
    /**
     * Switch to enable management over the private network. Valid values: true, false. Default value: false.
     */
    public readonly enableManagementOverPrivateNetwork!: pulumi.Output<boolean | undefined>;
    /**
     * Switch to enable preserve asPath when advertising manual summary CIDRs. Valid values: true, false. Default value: false.
     */
    public readonly enablePreserveAsPath!: pulumi.Output<boolean | undefined>;
    /**
     * Edge as a Spoke name.
     */
    public readonly gwName!: pulumi.Output<string>;
    /**
     * LAN interface IP and subnet prefix.
     */
    public readonly lanInterfaceIpPrefix!: pulumi.Output<string>;
    /**
     * Latitude of Edge as a Spoke. Valid values are between -90 and 90. Example: "47.7511".
     */
    public readonly latitude!: pulumi.Output<string>;
    /**
     * BGP AS Number to assign to Edge as a Spoke.
     */
    public readonly localAsNumber!: pulumi.Output<string>;
    /**
     * Longitude of Edge as a Spoke. Valid values are between -180 and 180. Example: "120.7401".
     */
    public readonly longitude!: pulumi.Output<string>;
    /**
     * Management default gateway IP. Required and valid when `managementInterfaceConfig` is "Static".
     */
    public readonly managementDefaultGatewayIp!: pulumi.Output<string | undefined>;
    /**
     * Management egress gateway IP and subnet prefix.
     */
    public readonly managementEgressIpPrefix!: pulumi.Output<string | undefined>;
    /**
     * Management interface configuration. Valid values: "DHCP", "Static".
     */
    public readonly managementInterfaceConfig!: pulumi.Output<string>;
    /**
     * Management interface IP and subnet prefix. Required and valid when `managementInterfaceConfig` is "Static".
     */
    public readonly managementInterfaceIpPrefix!: pulumi.Output<string | undefined>;
    /**
     * List of AS numbers to prepend gateway BGP AS_Path field. Valid only when `localAsNumber` is set. Example: ["65023", "65023"].
     */
    public readonly prependAsPaths!: pulumi.Output<string[] | undefined>;
    /**
     * Ethernet interface RX queue size. Once set, can't be deleted or disabled. Valid values: "1K", "2K", "4K".
     */
    public readonly rxQueueSize!: pulumi.Output<string | undefined>;
    /**
     * Secondary DNS server IP. Required and valid when `managementInterfaceConfig` is "Static".
     */
    public readonly secondaryDnsServerIp!: pulumi.Output<string | undefined>;
    /**
     * Site ID.
     */
    public readonly siteId!: pulumi.Output<string>;
    /**
     * Set of intended CIDRs to be advertised to external BGP router. Example: ["10.1.0.0/116", "10.2.0.0/16"].
     */
    public readonly spokeBgpManualAdvertiseCidrs!: pulumi.Output<string[] | undefined>;
    /**
     * State of Edge as a Spoke.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * WAN default gateway IP.
     */
    public readonly wanDefaultGatewayIp!: pulumi.Output<string>;
    /**
     * WAN interface IP and subnet prefix.
     */
    public readonly wanInterfaceIpPrefix!: pulumi.Output<string>;
    /**
     * WAN public IP. Required for attaching connections over the Internet.
     */
    public readonly wanPublicIp!: pulumi.Output<string>;
    /**
     * The folder path where the ZTP file will be downloaded.
     */
    public readonly ztpFileDownloadPath!: pulumi.Output<string>;
    /**
     * ZTP file type. Valid values: "iso", "cloud-init".
     */
    public readonly ztpFileType!: pulumi.Output<string>;

    /**
     * Create a AviatrixEdgeSpoke resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AviatrixEdgeSpokeArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AviatrixEdgeSpokeArgs | AviatrixEdgeSpokeState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AviatrixEdgeSpokeState | undefined;
            resourceInputs["approvedLearnedCidrs"] = state ? state.approvedLearnedCidrs : undefined;
            resourceInputs["bgpHoldTime"] = state ? state.bgpHoldTime : undefined;
            resourceInputs["bgpPollingTime"] = state ? state.bgpPollingTime : undefined;
            resourceInputs["dnsServerIp"] = state ? state.dnsServerIp : undefined;
            resourceInputs["enableEdgeActiveStandby"] = state ? state.enableEdgeActiveStandby : undefined;
            resourceInputs["enableEdgeActiveStandbyPreemptive"] = state ? state.enableEdgeActiveStandbyPreemptive : undefined;
            resourceInputs["enableEdgeTransitiveRouting"] = state ? state.enableEdgeTransitiveRouting : undefined;
            resourceInputs["enableJumboFrame"] = state ? state.enableJumboFrame : undefined;
            resourceInputs["enableLearnedCidrsApproval"] = state ? state.enableLearnedCidrsApproval : undefined;
            resourceInputs["enableManagementOverPrivateNetwork"] = state ? state.enableManagementOverPrivateNetwork : undefined;
            resourceInputs["enablePreserveAsPath"] = state ? state.enablePreserveAsPath : undefined;
            resourceInputs["gwName"] = state ? state.gwName : undefined;
            resourceInputs["lanInterfaceIpPrefix"] = state ? state.lanInterfaceIpPrefix : undefined;
            resourceInputs["latitude"] = state ? state.latitude : undefined;
            resourceInputs["localAsNumber"] = state ? state.localAsNumber : undefined;
            resourceInputs["longitude"] = state ? state.longitude : undefined;
            resourceInputs["managementDefaultGatewayIp"] = state ? state.managementDefaultGatewayIp : undefined;
            resourceInputs["managementEgressIpPrefix"] = state ? state.managementEgressIpPrefix : undefined;
            resourceInputs["managementInterfaceConfig"] = state ? state.managementInterfaceConfig : undefined;
            resourceInputs["managementInterfaceIpPrefix"] = state ? state.managementInterfaceIpPrefix : undefined;
            resourceInputs["prependAsPaths"] = state ? state.prependAsPaths : undefined;
            resourceInputs["rxQueueSize"] = state ? state.rxQueueSize : undefined;
            resourceInputs["secondaryDnsServerIp"] = state ? state.secondaryDnsServerIp : undefined;
            resourceInputs["siteId"] = state ? state.siteId : undefined;
            resourceInputs["spokeBgpManualAdvertiseCidrs"] = state ? state.spokeBgpManualAdvertiseCidrs : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["wanDefaultGatewayIp"] = state ? state.wanDefaultGatewayIp : undefined;
            resourceInputs["wanInterfaceIpPrefix"] = state ? state.wanInterfaceIpPrefix : undefined;
            resourceInputs["wanPublicIp"] = state ? state.wanPublicIp : undefined;
            resourceInputs["ztpFileDownloadPath"] = state ? state.ztpFileDownloadPath : undefined;
            resourceInputs["ztpFileType"] = state ? state.ztpFileType : undefined;
        } else {
            const args = argsOrState as AviatrixEdgeSpokeArgs | undefined;
            if ((!args || args.gwName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'gwName'");
            }
            if ((!args || args.lanInterfaceIpPrefix === undefined) && !opts.urn) {
                throw new Error("Missing required property 'lanInterfaceIpPrefix'");
            }
            if ((!args || args.managementInterfaceConfig === undefined) && !opts.urn) {
                throw new Error("Missing required property 'managementInterfaceConfig'");
            }
            if ((!args || args.siteId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'siteId'");
            }
            if ((!args || args.wanDefaultGatewayIp === undefined) && !opts.urn) {
                throw new Error("Missing required property 'wanDefaultGatewayIp'");
            }
            if ((!args || args.wanInterfaceIpPrefix === undefined) && !opts.urn) {
                throw new Error("Missing required property 'wanInterfaceIpPrefix'");
            }
            if ((!args || args.ztpFileDownloadPath === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ztpFileDownloadPath'");
            }
            if ((!args || args.ztpFileType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ztpFileType'");
            }
            resourceInputs["approvedLearnedCidrs"] = args ? args.approvedLearnedCidrs : undefined;
            resourceInputs["bgpHoldTime"] = args ? args.bgpHoldTime : undefined;
            resourceInputs["bgpPollingTime"] = args ? args.bgpPollingTime : undefined;
            resourceInputs["dnsServerIp"] = args ? args.dnsServerIp : undefined;
            resourceInputs["enableEdgeActiveStandby"] = args ? args.enableEdgeActiveStandby : undefined;
            resourceInputs["enableEdgeActiveStandbyPreemptive"] = args ? args.enableEdgeActiveStandbyPreemptive : undefined;
            resourceInputs["enableEdgeTransitiveRouting"] = args ? args.enableEdgeTransitiveRouting : undefined;
            resourceInputs["enableJumboFrame"] = args ? args.enableJumboFrame : undefined;
            resourceInputs["enableLearnedCidrsApproval"] = args ? args.enableLearnedCidrsApproval : undefined;
            resourceInputs["enableManagementOverPrivateNetwork"] = args ? args.enableManagementOverPrivateNetwork : undefined;
            resourceInputs["enablePreserveAsPath"] = args ? args.enablePreserveAsPath : undefined;
            resourceInputs["gwName"] = args ? args.gwName : undefined;
            resourceInputs["lanInterfaceIpPrefix"] = args ? args.lanInterfaceIpPrefix : undefined;
            resourceInputs["latitude"] = args ? args.latitude : undefined;
            resourceInputs["localAsNumber"] = args ? args.localAsNumber : undefined;
            resourceInputs["longitude"] = args ? args.longitude : undefined;
            resourceInputs["managementDefaultGatewayIp"] = args ? args.managementDefaultGatewayIp : undefined;
            resourceInputs["managementEgressIpPrefix"] = args ? args.managementEgressIpPrefix : undefined;
            resourceInputs["managementInterfaceConfig"] = args ? args.managementInterfaceConfig : undefined;
            resourceInputs["managementInterfaceIpPrefix"] = args ? args.managementInterfaceIpPrefix : undefined;
            resourceInputs["prependAsPaths"] = args ? args.prependAsPaths : undefined;
            resourceInputs["rxQueueSize"] = args ? args.rxQueueSize : undefined;
            resourceInputs["secondaryDnsServerIp"] = args ? args.secondaryDnsServerIp : undefined;
            resourceInputs["siteId"] = args ? args.siteId : undefined;
            resourceInputs["spokeBgpManualAdvertiseCidrs"] = args ? args.spokeBgpManualAdvertiseCidrs : undefined;
            resourceInputs["wanDefaultGatewayIp"] = args ? args.wanDefaultGatewayIp : undefined;
            resourceInputs["wanInterfaceIpPrefix"] = args ? args.wanInterfaceIpPrefix : undefined;
            resourceInputs["wanPublicIp"] = args ? args.wanPublicIp : undefined;
            resourceInputs["ztpFileDownloadPath"] = args ? args.ztpFileDownloadPath : undefined;
            resourceInputs["ztpFileType"] = args ? args.ztpFileType : undefined;
            resourceInputs["state"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AviatrixEdgeSpoke.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AviatrixEdgeSpoke resources.
 */
export interface AviatrixEdgeSpokeState {
    /**
     * Set of approved learned CIDRs. Valid only when `enableLearnedCidrsApproval` is set to true. Example: ["10.1.0.0/116", "10.2.0.0/16"].
     */
    approvedLearnedCidrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * BGP hold time. Unit is in seconds. Valid values are between 12 and 360. Default value: 180.
     */
    bgpHoldTime?: pulumi.Input<number>;
    /**
     * BGP route polling time. Unit is in seconds. Valid values are between 10 and 50. Default value: 50.
     */
    bgpPollingTime?: pulumi.Input<number>;
    /**
     * DNS server IP. Required and valid when `managementInterfaceConfig` is "Static".
     */
    dnsServerIp?: pulumi.Input<string>;
    /**
     * Switch to enable Edge Active-Standby mode. Valid values: true, false. Default value: false.
     */
    enableEdgeActiveStandby?: pulumi.Input<boolean>;
    /**
     * Switch to enable Preemptive Mode for Edge Active-Standby. Valid values: true, false. Default value: false.
     */
    enableEdgeActiveStandbyPreemptive?: pulumi.Input<boolean>;
    /**
     * Switch to enable Edge transitive routing. Valid values: true, false. Default value: false.
     */
    enableEdgeTransitiveRouting?: pulumi.Input<boolean>;
    /**
     * Switch to enable jumbo frame. Valid values: true, false. Default value: false.
     */
    enableJumboFrame?: pulumi.Input<boolean>;
    /**
     * Switch to enable learned CIDR approval. Valid values: true, false. Default value: false.
     */
    enableLearnedCidrsApproval?: pulumi.Input<boolean>;
    /**
     * Switch to enable management over the private network. Valid values: true, false. Default value: false.
     */
    enableManagementOverPrivateNetwork?: pulumi.Input<boolean>;
    /**
     * Switch to enable preserve asPath when advertising manual summary CIDRs. Valid values: true, false. Default value: false.
     */
    enablePreserveAsPath?: pulumi.Input<boolean>;
    /**
     * Edge as a Spoke name.
     */
    gwName?: pulumi.Input<string>;
    /**
     * LAN interface IP and subnet prefix.
     */
    lanInterfaceIpPrefix?: pulumi.Input<string>;
    /**
     * Latitude of Edge as a Spoke. Valid values are between -90 and 90. Example: "47.7511".
     */
    latitude?: pulumi.Input<string>;
    /**
     * BGP AS Number to assign to Edge as a Spoke.
     */
    localAsNumber?: pulumi.Input<string>;
    /**
     * Longitude of Edge as a Spoke. Valid values are between -180 and 180. Example: "120.7401".
     */
    longitude?: pulumi.Input<string>;
    /**
     * Management default gateway IP. Required and valid when `managementInterfaceConfig` is "Static".
     */
    managementDefaultGatewayIp?: pulumi.Input<string>;
    /**
     * Management egress gateway IP and subnet prefix.
     */
    managementEgressIpPrefix?: pulumi.Input<string>;
    /**
     * Management interface configuration. Valid values: "DHCP", "Static".
     */
    managementInterfaceConfig?: pulumi.Input<string>;
    /**
     * Management interface IP and subnet prefix. Required and valid when `managementInterfaceConfig` is "Static".
     */
    managementInterfaceIpPrefix?: pulumi.Input<string>;
    /**
     * List of AS numbers to prepend gateway BGP AS_Path field. Valid only when `localAsNumber` is set. Example: ["65023", "65023"].
     */
    prependAsPaths?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Ethernet interface RX queue size. Once set, can't be deleted or disabled. Valid values: "1K", "2K", "4K".
     */
    rxQueueSize?: pulumi.Input<string>;
    /**
     * Secondary DNS server IP. Required and valid when `managementInterfaceConfig` is "Static".
     */
    secondaryDnsServerIp?: pulumi.Input<string>;
    /**
     * Site ID.
     */
    siteId?: pulumi.Input<string>;
    /**
     * Set of intended CIDRs to be advertised to external BGP router. Example: ["10.1.0.0/116", "10.2.0.0/16"].
     */
    spokeBgpManualAdvertiseCidrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * State of Edge as a Spoke.
     */
    state?: pulumi.Input<string>;
    /**
     * WAN default gateway IP.
     */
    wanDefaultGatewayIp?: pulumi.Input<string>;
    /**
     * WAN interface IP and subnet prefix.
     */
    wanInterfaceIpPrefix?: pulumi.Input<string>;
    /**
     * WAN public IP. Required for attaching connections over the Internet.
     */
    wanPublicIp?: pulumi.Input<string>;
    /**
     * The folder path where the ZTP file will be downloaded.
     */
    ztpFileDownloadPath?: pulumi.Input<string>;
    /**
     * ZTP file type. Valid values: "iso", "cloud-init".
     */
    ztpFileType?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AviatrixEdgeSpoke resource.
 */
export interface AviatrixEdgeSpokeArgs {
    /**
     * Set of approved learned CIDRs. Valid only when `enableLearnedCidrsApproval` is set to true. Example: ["10.1.0.0/116", "10.2.0.0/16"].
     */
    approvedLearnedCidrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * BGP hold time. Unit is in seconds. Valid values are between 12 and 360. Default value: 180.
     */
    bgpHoldTime?: pulumi.Input<number>;
    /**
     * BGP route polling time. Unit is in seconds. Valid values are between 10 and 50. Default value: 50.
     */
    bgpPollingTime?: pulumi.Input<number>;
    /**
     * DNS server IP. Required and valid when `managementInterfaceConfig` is "Static".
     */
    dnsServerIp?: pulumi.Input<string>;
    /**
     * Switch to enable Edge Active-Standby mode. Valid values: true, false. Default value: false.
     */
    enableEdgeActiveStandby?: pulumi.Input<boolean>;
    /**
     * Switch to enable Preemptive Mode for Edge Active-Standby. Valid values: true, false. Default value: false.
     */
    enableEdgeActiveStandbyPreemptive?: pulumi.Input<boolean>;
    /**
     * Switch to enable Edge transitive routing. Valid values: true, false. Default value: false.
     */
    enableEdgeTransitiveRouting?: pulumi.Input<boolean>;
    /**
     * Switch to enable jumbo frame. Valid values: true, false. Default value: false.
     */
    enableJumboFrame?: pulumi.Input<boolean>;
    /**
     * Switch to enable learned CIDR approval. Valid values: true, false. Default value: false.
     */
    enableLearnedCidrsApproval?: pulumi.Input<boolean>;
    /**
     * Switch to enable management over the private network. Valid values: true, false. Default value: false.
     */
    enableManagementOverPrivateNetwork?: pulumi.Input<boolean>;
    /**
     * Switch to enable preserve asPath when advertising manual summary CIDRs. Valid values: true, false. Default value: false.
     */
    enablePreserveAsPath?: pulumi.Input<boolean>;
    /**
     * Edge as a Spoke name.
     */
    gwName: pulumi.Input<string>;
    /**
     * LAN interface IP and subnet prefix.
     */
    lanInterfaceIpPrefix: pulumi.Input<string>;
    /**
     * Latitude of Edge as a Spoke. Valid values are between -90 and 90. Example: "47.7511".
     */
    latitude?: pulumi.Input<string>;
    /**
     * BGP AS Number to assign to Edge as a Spoke.
     */
    localAsNumber?: pulumi.Input<string>;
    /**
     * Longitude of Edge as a Spoke. Valid values are between -180 and 180. Example: "120.7401".
     */
    longitude?: pulumi.Input<string>;
    /**
     * Management default gateway IP. Required and valid when `managementInterfaceConfig` is "Static".
     */
    managementDefaultGatewayIp?: pulumi.Input<string>;
    /**
     * Management egress gateway IP and subnet prefix.
     */
    managementEgressIpPrefix?: pulumi.Input<string>;
    /**
     * Management interface configuration. Valid values: "DHCP", "Static".
     */
    managementInterfaceConfig: pulumi.Input<string>;
    /**
     * Management interface IP and subnet prefix. Required and valid when `managementInterfaceConfig` is "Static".
     */
    managementInterfaceIpPrefix?: pulumi.Input<string>;
    /**
     * List of AS numbers to prepend gateway BGP AS_Path field. Valid only when `localAsNumber` is set. Example: ["65023", "65023"].
     */
    prependAsPaths?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Ethernet interface RX queue size. Once set, can't be deleted or disabled. Valid values: "1K", "2K", "4K".
     */
    rxQueueSize?: pulumi.Input<string>;
    /**
     * Secondary DNS server IP. Required and valid when `managementInterfaceConfig` is "Static".
     */
    secondaryDnsServerIp?: pulumi.Input<string>;
    /**
     * Site ID.
     */
    siteId: pulumi.Input<string>;
    /**
     * Set of intended CIDRs to be advertised to external BGP router. Example: ["10.1.0.0/116", "10.2.0.0/16"].
     */
    spokeBgpManualAdvertiseCidrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * WAN default gateway IP.
     */
    wanDefaultGatewayIp: pulumi.Input<string>;
    /**
     * WAN interface IP and subnet prefix.
     */
    wanInterfaceIpPrefix: pulumi.Input<string>;
    /**
     * WAN public IP. Required for attaching connections over the Internet.
     */
    wanPublicIp?: pulumi.Input<string>;
    /**
     * The folder path where the ZTP file will be downloaded.
     */
    ztpFileDownloadPath: pulumi.Input<string>;
    /**
     * ZTP file type. Valid values: "iso", "cloud-init".
     */
    ztpFileType: pulumi.Input<string>;
}
