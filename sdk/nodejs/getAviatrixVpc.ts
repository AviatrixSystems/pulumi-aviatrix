// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

export function getAviatrixVpc(args: GetAviatrixVpcArgs, opts?: pulumi.InvokeOptions): Promise<GetAviatrixVpcResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aviatrix:index/getAviatrixVpc:getAviatrixVpc", {
        "name": args.name,
        "routeTablesFilter": args.routeTablesFilter,
    }, opts);
}

/**
 * A collection of arguments for invoking getAviatrixVpc.
 */
export interface GetAviatrixVpcArgs {
    name: string;
    routeTablesFilter?: string;
}

/**
 * A collection of values returned by getAviatrixVpc.
 */
export interface GetAviatrixVpcResult {
    readonly accountName: string;
    readonly availabilityDomains: string[];
    readonly aviatrixFirenetVpc: boolean;
    readonly aviatrixTransitVpc: boolean;
    readonly azureVnetResourceId: string;
    readonly cidr: string;
    readonly cloudType: number;
    readonly faultDomains: string[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    readonly numOfSubnetPairs: number;
    readonly privateSubnets: outputs.GetAviatrixVpcPrivateSubnet[];
    readonly publicSubnets: outputs.GetAviatrixVpcPublicSubnet[];
    readonly region: string;
    readonly resourceGroup: string;
    readonly routeTables: string[];
    readonly routeTablesFilter?: string;
    readonly subnetSize: number;
    readonly subnets: outputs.GetAviatrixVpcSubnet[];
    readonly vpcId: string;
}

export function getAviatrixVpcOutput(args: GetAviatrixVpcOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAviatrixVpcResult> {
    return pulumi.output(args).apply(a => getAviatrixVpc(a, opts))
}

/**
 * A collection of arguments for invoking getAviatrixVpc.
 */
export interface GetAviatrixVpcOutputArgs {
    name: pulumi.Input<string>;
    routeTablesFilter?: pulumi.Input<string>;
}
