// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aviatrix
{
    [AviatrixResourceType("aviatrix:index/aviatrixControllerEmailConfig:AviatrixControllerEmailConfig")]
    public partial class AviatrixControllerEmailConfig : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Email to receive important account and certification information.
        /// </summary>
        [Output("adminAlertEmail")]
        public Output<string> AdminAlertEmail { get; private set; } = null!;

        /// <summary>
        /// Whether admin alert notification email is verified.
        /// </summary>
        [Output("adminAlertEmailVerified")]
        public Output<bool> AdminAlertEmailVerified { get; private set; } = null!;

        /// <summary>
        /// Email to receive field notices and critical notices.
        /// </summary>
        [Output("criticalAlertEmail")]
        public Output<string> CriticalAlertEmail { get; private set; } = null!;

        /// <summary>
        /// Whether critical alert notification email is verified.
        /// </summary>
        [Output("criticalAlertEmailVerified")]
        public Output<bool> CriticalAlertEmailVerified { get; private set; } = null!;

        /// <summary>
        /// Email to receive security and CVE (Common Vulnerabilities and Exposures) notification emails.
        /// </summary>
        [Output("securityEventEmail")]
        public Output<string> SecurityEventEmail { get; private set; } = null!;

        /// <summary>
        /// Whether security event notification email is verified.
        /// </summary>
        [Output("securityEventEmailVerified")]
        public Output<bool> SecurityEventEmailVerified { get; private set; } = null!;

        /// <summary>
        /// Email to receive system/tunnel status notification emails.
        /// </summary>
        [Output("statusChangeEmail")]
        public Output<string> StatusChangeEmail { get; private set; } = null!;

        /// <summary>
        /// Whether status change notification email is verified.
        /// </summary>
        [Output("statusChangeEmailVerified")]
        public Output<bool> StatusChangeEmailVerified { get; private set; } = null!;

        /// <summary>
        /// Status change notification interval in seconds.
        /// </summary>
        [Output("statusChangeNotificationInterval")]
        public Output<int?> StatusChangeNotificationInterval { get; private set; } = null!;


        /// <summary>
        /// Create a AviatrixControllerEmailConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AviatrixControllerEmailConfig(string name, AviatrixControllerEmailConfigArgs args, CustomResourceOptions? options = null)
            : base("aviatrix:index/aviatrixControllerEmailConfig:AviatrixControllerEmailConfig", name, args ?? new AviatrixControllerEmailConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AviatrixControllerEmailConfig(string name, Input<string> id, AviatrixControllerEmailConfigState? state = null, CustomResourceOptions? options = null)
            : base("aviatrix:index/aviatrixControllerEmailConfig:AviatrixControllerEmailConfig", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/astipkovits/pulumi-aviatrix/raw/main/releases/",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AviatrixControllerEmailConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AviatrixControllerEmailConfig Get(string name, Input<string> id, AviatrixControllerEmailConfigState? state = null, CustomResourceOptions? options = null)
        {
            return new AviatrixControllerEmailConfig(name, id, state, options);
        }
    }

    public sealed class AviatrixControllerEmailConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Email to receive important account and certification information.
        /// </summary>
        [Input("adminAlertEmail", required: true)]
        public Input<string> AdminAlertEmail { get; set; } = null!;

        /// <summary>
        /// Email to receive field notices and critical notices.
        /// </summary>
        [Input("criticalAlertEmail", required: true)]
        public Input<string> CriticalAlertEmail { get; set; } = null!;

        /// <summary>
        /// Email to receive security and CVE (Common Vulnerabilities and Exposures) notification emails.
        /// </summary>
        [Input("securityEventEmail", required: true)]
        public Input<string> SecurityEventEmail { get; set; } = null!;

        /// <summary>
        /// Email to receive system/tunnel status notification emails.
        /// </summary>
        [Input("statusChangeEmail", required: true)]
        public Input<string> StatusChangeEmail { get; set; } = null!;

        /// <summary>
        /// Status change notification interval in seconds.
        /// </summary>
        [Input("statusChangeNotificationInterval")]
        public Input<int>? StatusChangeNotificationInterval { get; set; }

        public AviatrixControllerEmailConfigArgs()
        {
        }
        public static new AviatrixControllerEmailConfigArgs Empty => new AviatrixControllerEmailConfigArgs();
    }

    public sealed class AviatrixControllerEmailConfigState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Email to receive important account and certification information.
        /// </summary>
        [Input("adminAlertEmail")]
        public Input<string>? AdminAlertEmail { get; set; }

        /// <summary>
        /// Whether admin alert notification email is verified.
        /// </summary>
        [Input("adminAlertEmailVerified")]
        public Input<bool>? AdminAlertEmailVerified { get; set; }

        /// <summary>
        /// Email to receive field notices and critical notices.
        /// </summary>
        [Input("criticalAlertEmail")]
        public Input<string>? CriticalAlertEmail { get; set; }

        /// <summary>
        /// Whether critical alert notification email is verified.
        /// </summary>
        [Input("criticalAlertEmailVerified")]
        public Input<bool>? CriticalAlertEmailVerified { get; set; }

        /// <summary>
        /// Email to receive security and CVE (Common Vulnerabilities and Exposures) notification emails.
        /// </summary>
        [Input("securityEventEmail")]
        public Input<string>? SecurityEventEmail { get; set; }

        /// <summary>
        /// Whether security event notification email is verified.
        /// </summary>
        [Input("securityEventEmailVerified")]
        public Input<bool>? SecurityEventEmailVerified { get; set; }

        /// <summary>
        /// Email to receive system/tunnel status notification emails.
        /// </summary>
        [Input("statusChangeEmail")]
        public Input<string>? StatusChangeEmail { get; set; }

        /// <summary>
        /// Whether status change notification email is verified.
        /// </summary>
        [Input("statusChangeEmailVerified")]
        public Input<bool>? StatusChangeEmailVerified { get; set; }

        /// <summary>
        /// Status change notification interval in seconds.
        /// </summary>
        [Input("statusChangeNotificationInterval")]
        public Input<int>? StatusChangeNotificationInterval { get; set; }

        public AviatrixControllerEmailConfigState()
        {
        }
        public static new AviatrixControllerEmailConfigState Empty => new AviatrixControllerEmailConfigState();
    }
}
