// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aviatrix

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AviatrixSumologicForwarder struct {
	pulumi.CustomResourceState

	// Access ID.
	AccessId pulumi.StringOutput `pulumi:"accessId"`
	// Access key.
	AccessKey pulumi.StringOutput `pulumi:"accessKey"`
	// Custom configuration.
	CustomConfiguration pulumi.StringPtrOutput `pulumi:"customConfiguration"`
	// List of excluded gateways.
	ExcludedGateways pulumi.StringArrayOutput `pulumi:"excludedGateways"`
	// Source category.
	SourceCategory pulumi.StringPtrOutput `pulumi:"sourceCategory"`
	// Enabled or not.
	Status pulumi.StringOutput `pulumi:"status"`
}

// NewAviatrixSumologicForwarder registers a new resource with the given unique name, arguments, and options.
func NewAviatrixSumologicForwarder(ctx *pulumi.Context,
	name string, args *AviatrixSumologicForwarderArgs, opts ...pulumi.ResourceOption) (*AviatrixSumologicForwarder, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccessId == nil {
		return nil, errors.New("invalid value for required argument 'AccessId'")
	}
	if args.AccessKey == nil {
		return nil, errors.New("invalid value for required argument 'AccessKey'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource AviatrixSumologicForwarder
	err := ctx.RegisterResource("aviatrix:index/aviatrixSumologicForwarder:AviatrixSumologicForwarder", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAviatrixSumologicForwarder gets an existing AviatrixSumologicForwarder resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAviatrixSumologicForwarder(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AviatrixSumologicForwarderState, opts ...pulumi.ResourceOption) (*AviatrixSumologicForwarder, error) {
	var resource AviatrixSumologicForwarder
	err := ctx.ReadResource("aviatrix:index/aviatrixSumologicForwarder:AviatrixSumologicForwarder", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AviatrixSumologicForwarder resources.
type aviatrixSumologicForwarderState struct {
	// Access ID.
	AccessId *string `pulumi:"accessId"`
	// Access key.
	AccessKey *string `pulumi:"accessKey"`
	// Custom configuration.
	CustomConfiguration *string `pulumi:"customConfiguration"`
	// List of excluded gateways.
	ExcludedGateways []string `pulumi:"excludedGateways"`
	// Source category.
	SourceCategory *string `pulumi:"sourceCategory"`
	// Enabled or not.
	Status *string `pulumi:"status"`
}

type AviatrixSumologicForwarderState struct {
	// Access ID.
	AccessId pulumi.StringPtrInput
	// Access key.
	AccessKey pulumi.StringPtrInput
	// Custom configuration.
	CustomConfiguration pulumi.StringPtrInput
	// List of excluded gateways.
	ExcludedGateways pulumi.StringArrayInput
	// Source category.
	SourceCategory pulumi.StringPtrInput
	// Enabled or not.
	Status pulumi.StringPtrInput
}

func (AviatrixSumologicForwarderState) ElementType() reflect.Type {
	return reflect.TypeOf((*aviatrixSumologicForwarderState)(nil)).Elem()
}

type aviatrixSumologicForwarderArgs struct {
	// Access ID.
	AccessId string `pulumi:"accessId"`
	// Access key.
	AccessKey string `pulumi:"accessKey"`
	// Custom configuration.
	CustomConfiguration *string `pulumi:"customConfiguration"`
	// List of excluded gateways.
	ExcludedGateways []string `pulumi:"excludedGateways"`
	// Source category.
	SourceCategory *string `pulumi:"sourceCategory"`
}

// The set of arguments for constructing a AviatrixSumologicForwarder resource.
type AviatrixSumologicForwarderArgs struct {
	// Access ID.
	AccessId pulumi.StringInput
	// Access key.
	AccessKey pulumi.StringInput
	// Custom configuration.
	CustomConfiguration pulumi.StringPtrInput
	// List of excluded gateways.
	ExcludedGateways pulumi.StringArrayInput
	// Source category.
	SourceCategory pulumi.StringPtrInput
}

func (AviatrixSumologicForwarderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*aviatrixSumologicForwarderArgs)(nil)).Elem()
}

type AviatrixSumologicForwarderInput interface {
	pulumi.Input

	ToAviatrixSumologicForwarderOutput() AviatrixSumologicForwarderOutput
	ToAviatrixSumologicForwarderOutputWithContext(ctx context.Context) AviatrixSumologicForwarderOutput
}

func (*AviatrixSumologicForwarder) ElementType() reflect.Type {
	return reflect.TypeOf((**AviatrixSumologicForwarder)(nil)).Elem()
}

func (i *AviatrixSumologicForwarder) ToAviatrixSumologicForwarderOutput() AviatrixSumologicForwarderOutput {
	return i.ToAviatrixSumologicForwarderOutputWithContext(context.Background())
}

func (i *AviatrixSumologicForwarder) ToAviatrixSumologicForwarderOutputWithContext(ctx context.Context) AviatrixSumologicForwarderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixSumologicForwarderOutput)
}

// AviatrixSumologicForwarderArrayInput is an input type that accepts AviatrixSumologicForwarderArray and AviatrixSumologicForwarderArrayOutput values.
// You can construct a concrete instance of `AviatrixSumologicForwarderArrayInput` via:
//
//	AviatrixSumologicForwarderArray{ AviatrixSumologicForwarderArgs{...} }
type AviatrixSumologicForwarderArrayInput interface {
	pulumi.Input

	ToAviatrixSumologicForwarderArrayOutput() AviatrixSumologicForwarderArrayOutput
	ToAviatrixSumologicForwarderArrayOutputWithContext(context.Context) AviatrixSumologicForwarderArrayOutput
}

type AviatrixSumologicForwarderArray []AviatrixSumologicForwarderInput

func (AviatrixSumologicForwarderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AviatrixSumologicForwarder)(nil)).Elem()
}

func (i AviatrixSumologicForwarderArray) ToAviatrixSumologicForwarderArrayOutput() AviatrixSumologicForwarderArrayOutput {
	return i.ToAviatrixSumologicForwarderArrayOutputWithContext(context.Background())
}

func (i AviatrixSumologicForwarderArray) ToAviatrixSumologicForwarderArrayOutputWithContext(ctx context.Context) AviatrixSumologicForwarderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixSumologicForwarderArrayOutput)
}

// AviatrixSumologicForwarderMapInput is an input type that accepts AviatrixSumologicForwarderMap and AviatrixSumologicForwarderMapOutput values.
// You can construct a concrete instance of `AviatrixSumologicForwarderMapInput` via:
//
//	AviatrixSumologicForwarderMap{ "key": AviatrixSumologicForwarderArgs{...} }
type AviatrixSumologicForwarderMapInput interface {
	pulumi.Input

	ToAviatrixSumologicForwarderMapOutput() AviatrixSumologicForwarderMapOutput
	ToAviatrixSumologicForwarderMapOutputWithContext(context.Context) AviatrixSumologicForwarderMapOutput
}

type AviatrixSumologicForwarderMap map[string]AviatrixSumologicForwarderInput

func (AviatrixSumologicForwarderMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AviatrixSumologicForwarder)(nil)).Elem()
}

func (i AviatrixSumologicForwarderMap) ToAviatrixSumologicForwarderMapOutput() AviatrixSumologicForwarderMapOutput {
	return i.ToAviatrixSumologicForwarderMapOutputWithContext(context.Background())
}

func (i AviatrixSumologicForwarderMap) ToAviatrixSumologicForwarderMapOutputWithContext(ctx context.Context) AviatrixSumologicForwarderMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixSumologicForwarderMapOutput)
}

type AviatrixSumologicForwarderOutput struct{ *pulumi.OutputState }

func (AviatrixSumologicForwarderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AviatrixSumologicForwarder)(nil)).Elem()
}

func (o AviatrixSumologicForwarderOutput) ToAviatrixSumologicForwarderOutput() AviatrixSumologicForwarderOutput {
	return o
}

func (o AviatrixSumologicForwarderOutput) ToAviatrixSumologicForwarderOutputWithContext(ctx context.Context) AviatrixSumologicForwarderOutput {
	return o
}

// Access ID.
func (o AviatrixSumologicForwarderOutput) AccessId() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixSumologicForwarder) pulumi.StringOutput { return v.AccessId }).(pulumi.StringOutput)
}

// Access key.
func (o AviatrixSumologicForwarderOutput) AccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixSumologicForwarder) pulumi.StringOutput { return v.AccessKey }).(pulumi.StringOutput)
}

// Custom configuration.
func (o AviatrixSumologicForwarderOutput) CustomConfiguration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixSumologicForwarder) pulumi.StringPtrOutput { return v.CustomConfiguration }).(pulumi.StringPtrOutput)
}

// List of excluded gateways.
func (o AviatrixSumologicForwarderOutput) ExcludedGateways() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AviatrixSumologicForwarder) pulumi.StringArrayOutput { return v.ExcludedGateways }).(pulumi.StringArrayOutput)
}

// Source category.
func (o AviatrixSumologicForwarderOutput) SourceCategory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixSumologicForwarder) pulumi.StringPtrOutput { return v.SourceCategory }).(pulumi.StringPtrOutput)
}

// Enabled or not.
func (o AviatrixSumologicForwarderOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixSumologicForwarder) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

type AviatrixSumologicForwarderArrayOutput struct{ *pulumi.OutputState }

func (AviatrixSumologicForwarderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AviatrixSumologicForwarder)(nil)).Elem()
}

func (o AviatrixSumologicForwarderArrayOutput) ToAviatrixSumologicForwarderArrayOutput() AviatrixSumologicForwarderArrayOutput {
	return o
}

func (o AviatrixSumologicForwarderArrayOutput) ToAviatrixSumologicForwarderArrayOutputWithContext(ctx context.Context) AviatrixSumologicForwarderArrayOutput {
	return o
}

func (o AviatrixSumologicForwarderArrayOutput) Index(i pulumi.IntInput) AviatrixSumologicForwarderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AviatrixSumologicForwarder {
		return vs[0].([]*AviatrixSumologicForwarder)[vs[1].(int)]
	}).(AviatrixSumologicForwarderOutput)
}

type AviatrixSumologicForwarderMapOutput struct{ *pulumi.OutputState }

func (AviatrixSumologicForwarderMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AviatrixSumologicForwarder)(nil)).Elem()
}

func (o AviatrixSumologicForwarderMapOutput) ToAviatrixSumologicForwarderMapOutput() AviatrixSumologicForwarderMapOutput {
	return o
}

func (o AviatrixSumologicForwarderMapOutput) ToAviatrixSumologicForwarderMapOutputWithContext(ctx context.Context) AviatrixSumologicForwarderMapOutput {
	return o
}

func (o AviatrixSumologicForwarderMapOutput) MapIndex(k pulumi.StringInput) AviatrixSumologicForwarderOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AviatrixSumologicForwarder {
		return vs[0].(map[string]*AviatrixSumologicForwarder)[vs[1].(string)]
	}).(AviatrixSumologicForwarderOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixSumologicForwarderInput)(nil)).Elem(), &AviatrixSumologicForwarder{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixSumologicForwarderArrayInput)(nil)).Elem(), AviatrixSumologicForwarderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixSumologicForwarderMapInput)(nil)).Elem(), AviatrixSumologicForwarderMap{})
	pulumi.RegisterOutputType(AviatrixSumologicForwarderOutput{})
	pulumi.RegisterOutputType(AviatrixSumologicForwarderArrayOutput{})
	pulumi.RegisterOutputType(AviatrixSumologicForwarderMapOutput{})
}
