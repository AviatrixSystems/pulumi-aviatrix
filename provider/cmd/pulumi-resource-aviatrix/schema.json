{
    "name": "aviatrix",
    "displayName": "Aviatrix",
    "description": "A Pulumi package for creating and managing aviatrix cloud resources.",
    "keywords": [
        "pulumi",
        "aviatrix",
        "category/cloud"
    ],
    "homepage": "https://www.pulumi.com",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`aviatrix` Terraform Provider](https://github.com/AviatrixSystems/terraform-provider-aviatrix).",
    "repository": "https://github.com/astipkovits/pulumi-aviatrix",
    "publisher": "Aviatrix",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": null,
            "packageReferences": {
                "Pulumi": "3.*"
            }
        },
        "go": {
            "generateExtraInputTypes": true,
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/pulumi/pulumi-aviatrix/sdk/go/aviatrix"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing aviatrix cloud resources.",
            "packageName": "",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/AviatrixSystems/terraform-provider-aviatrix)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-aviatrix` repo](https://github.com/astipkovits/pulumi-aviatrix/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-aviatrix` repo](https://github.com/AviatrixSystems/terraform-provider-aviatrix/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/AviatrixSystems/terraform-provider-aviatrix)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-aviatrix` repo](https://github.com/astipkovits/pulumi-aviatrix/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-aviatrix` repo](https://github.com/AviatrixSystems/terraform-provider-aviatrix/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    },
    "config": {
        "variables": {
            "controllerIp": {
                "type": "string"
            },
            "ignoreTags": {
                "$ref": "#/types/aviatrix:config/ignoreTags:ignoreTags",
                "description": "Configuration block with settings to ignore tags across all resources.\n"
            },
            "password": {
                "type": "string"
            },
            "pathToCaCertificate": {
                "type": "string"
            },
            "skipVersionValidation": {
                "type": "boolean"
            },
            "username": {
                "type": "string"
            },
            "verifySslCertificate": {
                "type": "boolean"
            }
        },
        "defaults": [
            "controllerIp",
            "password",
            "username"
        ]
    },
    "types": {
        "aviatrix:config/ignoreTags:ignoreTags": {
            "properties": {
                "keyPrefixes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "keys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "aviatrix:index/AviatrixVpcPrivateSubnet:AviatrixVpcPrivateSubnet": {
            "properties": {
                "cidr": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "subnetId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cidr",
                        "name",
                        "subnetId"
                    ]
                }
            }
        },
        "aviatrix:index/AviatrixVpcPublicSubnet:AviatrixVpcPublicSubnet": {
            "properties": {
                "cidr": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "subnetId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cidr",
                        "name",
                        "subnetId"
                    ]
                }
            }
        },
        "aviatrix:index/AviatrixVpcSubnet:AviatrixVpcSubnet": {
            "properties": {
                "cidr": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "willReplaceOnChanges": true
                },
                "subnetId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "subnetId"
                    ]
                }
            }
        },
        "aviatrix:index/ProviderIgnoreTags:ProviderIgnoreTags": {
            "properties": {
                "keyPrefixes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "keys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        }
    },
    "provider": {
        "description": "The provider type for the aviatrix package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "controllerIp": {
                "type": "string"
            },
            "ignoreTags": {
                "$ref": "#/types/aviatrix:index/ProviderIgnoreTags:ProviderIgnoreTags",
                "description": "Configuration block with settings to ignore tags across all resources.\n"
            },
            "password": {
                "type": "string"
            },
            "pathToCaCertificate": {
                "type": "string"
            },
            "skipVersionValidation": {
                "type": "boolean"
            },
            "username": {
                "type": "string"
            },
            "verifySslCertificate": {
                "type": "boolean"
            }
        },
        "required": [
            "controllerIp",
            "password",
            "username"
        ],
        "inputProperties": {
            "controllerIp": {
                "type": "string"
            },
            "ignoreTags": {
                "$ref": "#/types/aviatrix:index/ProviderIgnoreTags:ProviderIgnoreTags",
                "description": "Configuration block with settings to ignore tags across all resources.\n"
            },
            "password": {
                "type": "string"
            },
            "pathToCaCertificate": {
                "type": "string"
            },
            "skipVersionValidation": {
                "type": "boolean"
            },
            "username": {
                "type": "string"
            },
            "verifySslCertificate": {
                "type": "boolean"
            }
        },
        "requiredInputs": [
            "controllerIp",
            "password",
            "username"
        ]
    },
    "resources": {
        "aviatrix:index/aviatrixVpc:AviatrixVpc": {
            "properties": {
                "accountName": {
                    "type": "string",
                    "description": "Account name. This account will be used to create an Aviatrix VPC.\n"
                },
                "availabilityDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of OCI availability domains.\n"
                },
                "aviatrixFirenetVpc": {
                    "type": "boolean",
                    "description": "Specify the VPC as Aviatrix FireNet VPC or not. Required to be false for GCP provider.\n"
                },
                "aviatrixTransitVpc": {
                    "type": "boolean",
                    "description": "Specify the VPC as Aviatrix Transit VPC or not. Required to be false for GCP provider.\n"
                },
                "azureVnetResourceId": {
                    "type": "string",
                    "description": "Azure vnet resource ID.\n"
                },
                "cidr": {
                    "type": "string",
                    "description": "Subnet of the VPC to be created. Required to be empty for GCP provider, and non-empty for other providers.\n"
                },
                "cloudType": {
                    "type": "integer",
                    "description": "Type of cloud service provider.\n"
                },
                "enableNativeGwlb": {
                    "type": "boolean",
                    "description": "Enable Native AWS GWLB for FireNet Function. Only valid with cloud_type = 1 (AWS). Valid values: true or false. Default\nvalue: false. Available as of provider version R2.18+.\n"
                },
                "enablePrivateOobSubnet": {
                    "type": "boolean",
                    "description": "Switch to enable private oob subnet. Only supported for AWS/AWSGov provider. Valid values: true, false. Default value:\nfalse.\n"
                },
                "faultDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of OCI fault domains.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the VPC to be created.\n"
                },
                "numOfSubnetPairs": {
                    "type": "integer",
                    "description": "Number of public subnet and private subnet pair to be created.\n"
                },
                "privateModeSubnets": {
                    "type": "boolean",
                    "description": "Switch to only launch private subnets. Only available when Private Mode is enabled on the Controller.\n"
                },
                "privateSubnets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aviatrix:index/AviatrixVpcPrivateSubnet:AviatrixVpcPrivateSubnet"
                    },
                    "description": "List of private subnet of the VPC to be created.\n"
                },
                "publicSubnets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aviatrix:index/AviatrixVpcPublicSubnet:AviatrixVpcPublicSubnet"
                    },
                    "description": "List of public subnet of the VPC to be created.\n"
                },
                "region": {
                    "type": "string",
                    "description": "Region of cloud provider. Required to be empty for GCP provider, and non-empty for other providers.\n"
                },
                "resourceGroup": {
                    "type": "string",
                    "description": "Resource group of the Azure VPC created.\n"
                },
                "routeTables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of route table ids associated with this VPC.\n"
                },
                "subnetSize": {
                    "type": "integer",
                    "description": "Subnet size.\n"
                },
                "subnets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aviatrix:index/AviatrixVpcSubnet:AviatrixVpcSubnet"
                    },
                    "description": "List of subnet of the VPC to be created. Required to be non-empty for GCP provider, and empty for other providers.\n"
                },
                "vpcId": {
                    "type": "string",
                    "description": "ID of the VPC created.\n"
                }
            },
            "required": [
                "accountName",
                "availabilityDomains",
                "azureVnetResourceId",
                "cloudType",
                "faultDomains",
                "name",
                "privateSubnets",
                "publicSubnets",
                "resourceGroup",
                "routeTables",
                "subnets",
                "vpcId"
            ],
            "inputProperties": {
                "accountName": {
                    "type": "string",
                    "description": "Account name. This account will be used to create an Aviatrix VPC.\n",
                    "willReplaceOnChanges": true
                },
                "aviatrixFirenetVpc": {
                    "type": "boolean",
                    "description": "Specify the VPC as Aviatrix FireNet VPC or not. Required to be false for GCP provider.\n",
                    "willReplaceOnChanges": true
                },
                "aviatrixTransitVpc": {
                    "type": "boolean",
                    "description": "Specify the VPC as Aviatrix Transit VPC or not. Required to be false for GCP provider.\n",
                    "willReplaceOnChanges": true
                },
                "cidr": {
                    "type": "string",
                    "description": "Subnet of the VPC to be created. Required to be empty for GCP provider, and non-empty for other providers.\n",
                    "willReplaceOnChanges": true
                },
                "cloudType": {
                    "type": "integer",
                    "description": "Type of cloud service provider.\n",
                    "willReplaceOnChanges": true
                },
                "enableNativeGwlb": {
                    "type": "boolean",
                    "description": "Enable Native AWS GWLB for FireNet Function. Only valid with cloud_type = 1 (AWS). Valid values: true or false. Default\nvalue: false. Available as of provider version R2.18+.\n"
                },
                "enablePrivateOobSubnet": {
                    "type": "boolean",
                    "description": "Switch to enable private oob subnet. Only supported for AWS/AWSGov provider. Valid values: true, false. Default value:\nfalse.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Name of the VPC to be created.\n",
                    "willReplaceOnChanges": true
                },
                "numOfSubnetPairs": {
                    "type": "integer",
                    "description": "Number of public subnet and private subnet pair to be created.\n",
                    "willReplaceOnChanges": true
                },
                "privateModeSubnets": {
                    "type": "boolean",
                    "description": "Switch to only launch private subnets. Only available when Private Mode is enabled on the Controller.\n",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "description": "Region of cloud provider. Required to be empty for GCP provider, and non-empty for other providers.\n",
                    "willReplaceOnChanges": true
                },
                "resourceGroup": {
                    "type": "string",
                    "description": "Resource group of the Azure VPC created.\n",
                    "willReplaceOnChanges": true
                },
                "subnetSize": {
                    "type": "integer",
                    "description": "Subnet size.\n",
                    "willReplaceOnChanges": true
                },
                "subnets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aviatrix:index/AviatrixVpcSubnet:AviatrixVpcSubnet"
                    },
                    "description": "List of subnet of the VPC to be created. Required to be non-empty for GCP provider, and empty for other providers.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "accountName",
                "cloudType"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AviatrixVpc resources.\n",
                "properties": {
                    "accountName": {
                        "type": "string",
                        "description": "Account name. This account will be used to create an Aviatrix VPC.\n",
                        "willReplaceOnChanges": true
                    },
                    "availabilityDomains": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of OCI availability domains.\n"
                    },
                    "aviatrixFirenetVpc": {
                        "type": "boolean",
                        "description": "Specify the VPC as Aviatrix FireNet VPC or not. Required to be false for GCP provider.\n",
                        "willReplaceOnChanges": true
                    },
                    "aviatrixTransitVpc": {
                        "type": "boolean",
                        "description": "Specify the VPC as Aviatrix Transit VPC or not. Required to be false for GCP provider.\n",
                        "willReplaceOnChanges": true
                    },
                    "azureVnetResourceId": {
                        "type": "string",
                        "description": "Azure vnet resource ID.\n"
                    },
                    "cidr": {
                        "type": "string",
                        "description": "Subnet of the VPC to be created. Required to be empty for GCP provider, and non-empty for other providers.\n",
                        "willReplaceOnChanges": true
                    },
                    "cloudType": {
                        "type": "integer",
                        "description": "Type of cloud service provider.\n",
                        "willReplaceOnChanges": true
                    },
                    "enableNativeGwlb": {
                        "type": "boolean",
                        "description": "Enable Native AWS GWLB for FireNet Function. Only valid with cloud_type = 1 (AWS). Valid values: true or false. Default\nvalue: false. Available as of provider version R2.18+.\n"
                    },
                    "enablePrivateOobSubnet": {
                        "type": "boolean",
                        "description": "Switch to enable private oob subnet. Only supported for AWS/AWSGov provider. Valid values: true, false. Default value:\nfalse.\n",
                        "willReplaceOnChanges": true
                    },
                    "faultDomains": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of OCI fault domains.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the VPC to be created.\n",
                        "willReplaceOnChanges": true
                    },
                    "numOfSubnetPairs": {
                        "type": "integer",
                        "description": "Number of public subnet and private subnet pair to be created.\n",
                        "willReplaceOnChanges": true
                    },
                    "privateModeSubnets": {
                        "type": "boolean",
                        "description": "Switch to only launch private subnets. Only available when Private Mode is enabled on the Controller.\n",
                        "willReplaceOnChanges": true
                    },
                    "privateSubnets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aviatrix:index/AviatrixVpcPrivateSubnet:AviatrixVpcPrivateSubnet"
                        },
                        "description": "List of private subnet of the VPC to be created.\n"
                    },
                    "publicSubnets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aviatrix:index/AviatrixVpcPublicSubnet:AviatrixVpcPublicSubnet"
                        },
                        "description": "List of public subnet of the VPC to be created.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "Region of cloud provider. Required to be empty for GCP provider, and non-empty for other providers.\n",
                        "willReplaceOnChanges": true
                    },
                    "resourceGroup": {
                        "type": "string",
                        "description": "Resource group of the Azure VPC created.\n",
                        "willReplaceOnChanges": true
                    },
                    "routeTables": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of route table ids associated with this VPC.\n"
                    },
                    "subnetSize": {
                        "type": "integer",
                        "description": "Subnet size.\n",
                        "willReplaceOnChanges": true
                    },
                    "subnets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aviatrix:index/AviatrixVpcSubnet:AviatrixVpcSubnet"
                        },
                        "description": "List of subnet of the VPC to be created. Required to be non-empty for GCP provider, and empty for other providers.\n",
                        "willReplaceOnChanges": true
                    },
                    "vpcId": {
                        "type": "string",
                        "description": "ID of the VPC created.\n"
                    }
                },
                "type": "object"
            }
        }
    }
}