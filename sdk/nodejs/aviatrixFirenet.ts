// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * The **aviatrix_firenet** resource allows the creation and management of [Aviatrix Firewall Networks](https://docs.aviatrix.com/HowTos/firewall_network_faq.html).
 *
 * > **NOTE:** This resource is used in conjunction with multiple other resources that may include, and are not limited to: **firewall_instance**, **firewall_instance_association**, **aws_tgw**, and **transit_gateway** resources or even **aviatrix_fqdn**, under the Aviatrix FireNet solution. Explicit dependencies may be set using `dependsOn`. For more information on proper FireNet configuration, please see the workflow [here](https://docs.aviatrix.com/HowTos/firewall_network_workflow.html).
 *
 * ## Import
 *
 * **firenet** can be imported using the `vpc_id`, e.g.
 *
 * ```sh
 *  $ pulumi import aviatrix:index/aviatrixFirenet:AviatrixFirenet test vpc_id
 * ```
 */
export class AviatrixFirenet extends pulumi.CustomResource {
    /**
     * Get an existing AviatrixFirenet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AviatrixFirenetState, opts?: pulumi.CustomResourceOptions): AviatrixFirenet {
        return new AviatrixFirenet(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aviatrix:index/aviatrixFirenet:AviatrixFirenet';

    /**
     * Returns true if the given object is an instance of AviatrixFirenet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AviatrixFirenet {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AviatrixFirenet.__pulumiType;
    }

    /**
     * Network List Excluded From East-West Inspection. CIDRs to be excluded from inspection. Type: Set(String). Available as of provider version R2.19.5+.
     */
    public readonly eastWestInspectionExcludedCidrs!: pulumi.Output<string[] | undefined>;
    /**
     * Enable/disable egress through firewall. Valid values: true, false. Default value: false.
     */
    public readonly egressEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * List of egress static CIDRs. Egress is required to be enabled. Example: ["1.171.15.184/32", "1.171.15.185/32"]. Available as of provider version R2.19+.
     */
    public readonly egressStaticCidrs!: pulumi.Output<string[] | undefined>;
    /**
     * Dynamic block of firewall instance(s) to be associated with the FireNet.
     *
     * @deprecated Please set `manage_firewall_instance_association` to false, and use the standalone aviatrix_firewall_instance_association resource instead.
     */
    public readonly firewallInstanceAssociations!: pulumi.Output<outputs.AviatrixFirenetFirewallInstanceAssociation[] | undefined>;
    /**
     * Hashing algorithm to load balance traffic across the firewall. Valid values: "2-Tuple", "5-Tuple". Default value: "5-Tuple".
     */
    public readonly hashingAlgorithm!: pulumi.Output<string | undefined>;
    /**
     * Enable/disable traffic inspection. Valid values: true, false. Default value: true.
     */
    public readonly inspectionEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Enable Keep Alive via Firewall LAN Interface. Valid values: true or false. Default value: false. Available as of provider version R2.18.1+.
     */
    public readonly keepAliveViaLanInterfaceEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Enable this attribute to manage firewall associations in-line. If set to true, in-line `firewallInstanceAssociation` blocks can be used. If set to false, all firewall associations must be managed via standalone `aviatrix.AviatrixFirewallInstanceAssociation` resources. Default value: true. Valid values: true or false. Available in provider version R2.17.1+.
     */
    public readonly manageFirewallInstanceAssociation!: pulumi.Output<boolean | undefined>;
    /**
     * Enable TGW segmentation for egress. Valid values: true or false. Default value: false. Available as of provider version R2.19+.
     */
    public readonly tgwSegmentationForEgressEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * VPC ID of the Security VPC.
     */
    public readonly vpcId!: pulumi.Output<string>;

    /**
     * Create a AviatrixFirenet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AviatrixFirenetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AviatrixFirenetArgs | AviatrixFirenetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AviatrixFirenetState | undefined;
            resourceInputs["eastWestInspectionExcludedCidrs"] = state ? state.eastWestInspectionExcludedCidrs : undefined;
            resourceInputs["egressEnabled"] = state ? state.egressEnabled : undefined;
            resourceInputs["egressStaticCidrs"] = state ? state.egressStaticCidrs : undefined;
            resourceInputs["firewallInstanceAssociations"] = state ? state.firewallInstanceAssociations : undefined;
            resourceInputs["hashingAlgorithm"] = state ? state.hashingAlgorithm : undefined;
            resourceInputs["inspectionEnabled"] = state ? state.inspectionEnabled : undefined;
            resourceInputs["keepAliveViaLanInterfaceEnabled"] = state ? state.keepAliveViaLanInterfaceEnabled : undefined;
            resourceInputs["manageFirewallInstanceAssociation"] = state ? state.manageFirewallInstanceAssociation : undefined;
            resourceInputs["tgwSegmentationForEgressEnabled"] = state ? state.tgwSegmentationForEgressEnabled : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
        } else {
            const args = argsOrState as AviatrixFirenetArgs | undefined;
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["eastWestInspectionExcludedCidrs"] = args ? args.eastWestInspectionExcludedCidrs : undefined;
            resourceInputs["egressEnabled"] = args ? args.egressEnabled : undefined;
            resourceInputs["egressStaticCidrs"] = args ? args.egressStaticCidrs : undefined;
            resourceInputs["firewallInstanceAssociations"] = args ? args.firewallInstanceAssociations : undefined;
            resourceInputs["hashingAlgorithm"] = args ? args.hashingAlgorithm : undefined;
            resourceInputs["inspectionEnabled"] = args ? args.inspectionEnabled : undefined;
            resourceInputs["keepAliveViaLanInterfaceEnabled"] = args ? args.keepAliveViaLanInterfaceEnabled : undefined;
            resourceInputs["manageFirewallInstanceAssociation"] = args ? args.manageFirewallInstanceAssociation : undefined;
            resourceInputs["tgwSegmentationForEgressEnabled"] = args ? args.tgwSegmentationForEgressEnabled : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AviatrixFirenet.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AviatrixFirenet resources.
 */
export interface AviatrixFirenetState {
    /**
     * Network List Excluded From East-West Inspection. CIDRs to be excluded from inspection. Type: Set(String). Available as of provider version R2.19.5+.
     */
    eastWestInspectionExcludedCidrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Enable/disable egress through firewall. Valid values: true, false. Default value: false.
     */
    egressEnabled?: pulumi.Input<boolean>;
    /**
     * List of egress static CIDRs. Egress is required to be enabled. Example: ["1.171.15.184/32", "1.171.15.185/32"]. Available as of provider version R2.19+.
     */
    egressStaticCidrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Dynamic block of firewall instance(s) to be associated with the FireNet.
     *
     * @deprecated Please set `manage_firewall_instance_association` to false, and use the standalone aviatrix_firewall_instance_association resource instead.
     */
    firewallInstanceAssociations?: pulumi.Input<pulumi.Input<inputs.AviatrixFirenetFirewallInstanceAssociation>[]>;
    /**
     * Hashing algorithm to load balance traffic across the firewall. Valid values: "2-Tuple", "5-Tuple". Default value: "5-Tuple".
     */
    hashingAlgorithm?: pulumi.Input<string>;
    /**
     * Enable/disable traffic inspection. Valid values: true, false. Default value: true.
     */
    inspectionEnabled?: pulumi.Input<boolean>;
    /**
     * Enable Keep Alive via Firewall LAN Interface. Valid values: true or false. Default value: false. Available as of provider version R2.18.1+.
     */
    keepAliveViaLanInterfaceEnabled?: pulumi.Input<boolean>;
    /**
     * Enable this attribute to manage firewall associations in-line. If set to true, in-line `firewallInstanceAssociation` blocks can be used. If set to false, all firewall associations must be managed via standalone `aviatrix.AviatrixFirewallInstanceAssociation` resources. Default value: true. Valid values: true or false. Available in provider version R2.17.1+.
     */
    manageFirewallInstanceAssociation?: pulumi.Input<boolean>;
    /**
     * Enable TGW segmentation for egress. Valid values: true or false. Default value: false. Available as of provider version R2.19+.
     */
    tgwSegmentationForEgressEnabled?: pulumi.Input<boolean>;
    /**
     * VPC ID of the Security VPC.
     */
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AviatrixFirenet resource.
 */
export interface AviatrixFirenetArgs {
    /**
     * Network List Excluded From East-West Inspection. CIDRs to be excluded from inspection. Type: Set(String). Available as of provider version R2.19.5+.
     */
    eastWestInspectionExcludedCidrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Enable/disable egress through firewall. Valid values: true, false. Default value: false.
     */
    egressEnabled?: pulumi.Input<boolean>;
    /**
     * List of egress static CIDRs. Egress is required to be enabled. Example: ["1.171.15.184/32", "1.171.15.185/32"]. Available as of provider version R2.19+.
     */
    egressStaticCidrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Dynamic block of firewall instance(s) to be associated with the FireNet.
     *
     * @deprecated Please set `manage_firewall_instance_association` to false, and use the standalone aviatrix_firewall_instance_association resource instead.
     */
    firewallInstanceAssociations?: pulumi.Input<pulumi.Input<inputs.AviatrixFirenetFirewallInstanceAssociation>[]>;
    /**
     * Hashing algorithm to load balance traffic across the firewall. Valid values: "2-Tuple", "5-Tuple". Default value: "5-Tuple".
     */
    hashingAlgorithm?: pulumi.Input<string>;
    /**
     * Enable/disable traffic inspection. Valid values: true, false. Default value: true.
     */
    inspectionEnabled?: pulumi.Input<boolean>;
    /**
     * Enable Keep Alive via Firewall LAN Interface. Valid values: true or false. Default value: false. Available as of provider version R2.18.1+.
     */
    keepAliveViaLanInterfaceEnabled?: pulumi.Input<boolean>;
    /**
     * Enable this attribute to manage firewall associations in-line. If set to true, in-line `firewallInstanceAssociation` blocks can be used. If set to false, all firewall associations must be managed via standalone `aviatrix.AviatrixFirewallInstanceAssociation` resources. Default value: true. Valid values: true or false. Available in provider version R2.17.1+.
     */
    manageFirewallInstanceAssociation?: pulumi.Input<boolean>;
    /**
     * Enable TGW segmentation for egress. Valid values: true or false. Default value: false. Available as of provider version R2.19+.
     */
    tgwSegmentationForEgressEnabled?: pulumi.Input<boolean>;
    /**
     * VPC ID of the Security VPC.
     */
    vpcId: pulumi.Input<string>;
}
