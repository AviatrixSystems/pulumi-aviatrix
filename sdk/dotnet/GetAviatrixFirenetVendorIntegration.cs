// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aviatrix
{
    public static class GetAviatrixFirenetVendorIntegration
    {
        public static Task<GetAviatrixFirenetVendorIntegrationResult> InvokeAsync(GetAviatrixFirenetVendorIntegrationArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAviatrixFirenetVendorIntegrationResult>("aviatrix:index/getAviatrixFirenetVendorIntegration:getAviatrixFirenetVendorIntegration", args ?? new GetAviatrixFirenetVendorIntegrationArgs(), options.WithDefaults());

        public static Output<GetAviatrixFirenetVendorIntegrationResult> Invoke(GetAviatrixFirenetVendorIntegrationInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetAviatrixFirenetVendorIntegrationResult>("aviatrix:index/getAviatrixFirenetVendorIntegration:getAviatrixFirenetVendorIntegration", args ?? new GetAviatrixFirenetVendorIntegrationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAviatrixFirenetVendorIntegrationArgs : global::Pulumi.InvokeArgs
    {
        [Input("apiToken")]
        public string? ApiToken { get; set; }

        [Input("firewallName")]
        public string? FirewallName { get; set; }

        [Input("instanceId", required: true)]
        public string InstanceId { get; set; } = null!;

        [Input("numberOfRetries")]
        public int? NumberOfRetries { get; set; }

        [Input("password")]
        public string? Password { get; set; }

        [Input("privateKeyFile")]
        public string? PrivateKeyFile { get; set; }

        [Input("publicIp")]
        public string? PublicIp { get; set; }

        [Input("retryInterval")]
        public int? RetryInterval { get; set; }

        [Input("routeTable")]
        public string? RouteTable { get; set; }

        [Input("save")]
        public bool? Save { get; set; }

        [Input("synchronize")]
        public bool? Synchronize { get; set; }

        [Input("username")]
        public string? Username { get; set; }

        [Input("vendorType", required: true)]
        public string VendorType { get; set; } = null!;

        [Input("vpcId", required: true)]
        public string VpcId { get; set; } = null!;

        public GetAviatrixFirenetVendorIntegrationArgs()
        {
        }
        public static new GetAviatrixFirenetVendorIntegrationArgs Empty => new GetAviatrixFirenetVendorIntegrationArgs();
    }

    public sealed class GetAviatrixFirenetVendorIntegrationInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("apiToken")]
        public Input<string>? ApiToken { get; set; }

        [Input("firewallName")]
        public Input<string>? FirewallName { get; set; }

        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        [Input("numberOfRetries")]
        public Input<int>? NumberOfRetries { get; set; }

        [Input("password")]
        public Input<string>? Password { get; set; }

        [Input("privateKeyFile")]
        public Input<string>? PrivateKeyFile { get; set; }

        [Input("publicIp")]
        public Input<string>? PublicIp { get; set; }

        [Input("retryInterval")]
        public Input<int>? RetryInterval { get; set; }

        [Input("routeTable")]
        public Input<string>? RouteTable { get; set; }

        [Input("save")]
        public Input<bool>? Save { get; set; }

        [Input("synchronize")]
        public Input<bool>? Synchronize { get; set; }

        [Input("username")]
        public Input<string>? Username { get; set; }

        [Input("vendorType", required: true)]
        public Input<string> VendorType { get; set; } = null!;

        [Input("vpcId", required: true)]
        public Input<string> VpcId { get; set; } = null!;

        public GetAviatrixFirenetVendorIntegrationInvokeArgs()
        {
        }
        public static new GetAviatrixFirenetVendorIntegrationInvokeArgs Empty => new GetAviatrixFirenetVendorIntegrationInvokeArgs();
    }


    [OutputType]
    public sealed class GetAviatrixFirenetVendorIntegrationResult
    {
        public readonly string? ApiToken;
        public readonly string? FirewallName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string InstanceId;
        public readonly int? NumberOfRetries;
        public readonly string? Password;
        public readonly string? PrivateKeyFile;
        public readonly string? PublicIp;
        public readonly int? RetryInterval;
        public readonly string? RouteTable;
        public readonly bool? Save;
        public readonly bool? Synchronize;
        public readonly string? Username;
        public readonly string VendorType;
        public readonly string VpcId;

        [OutputConstructor]
        private GetAviatrixFirenetVendorIntegrationResult(
            string? apiToken,

            string? firewallName,

            string id,

            string instanceId,

            int? numberOfRetries,

            string? password,

            string? privateKeyFile,

            string? publicIp,

            int? retryInterval,

            string? routeTable,

            bool? save,

            bool? synchronize,

            string? username,

            string vendorType,

            string vpcId)
        {
            ApiToken = apiToken;
            FirewallName = firewallName;
            Id = id;
            InstanceId = instanceId;
            NumberOfRetries = numberOfRetries;
            Password = password;
            PrivateKeyFile = privateKeyFile;
            PublicIp = publicIp;
            RetryInterval = retryInterval;
            RouteTable = routeTable;
            Save = save;
            Synchronize = synchronize;
            Username = username;
            VendorType = vendorType;
            VpcId = vpcId;
        }
    }
}
