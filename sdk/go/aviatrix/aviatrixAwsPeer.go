// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aviatrix

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The **aviatrix_aws_peer** resource allows the creation and management of Aviatrix-created native AWS intra and inter-region VPC peerings.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/astipkovits/pulumi-aviatrix/sdk/go/aviatrix"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := aviatrix.NewAviatrixAwsPeer(ctx, "testAwspeer", &aviatrix.AviatrixAwsPeerArgs{
//				AccountName1: pulumi.String("test1-account"),
//				AccountName2: pulumi.String("test2-account"),
//				RtbList1s: pulumi.StringArray{
//					pulumi.String("rtb-abcd1234"),
//				},
//				RtbList2s: pulumi.StringArray{
//					pulumi.String("rtb-wxyz5678"),
//				},
//				VpcId1:  pulumi.String("vpc-abcd1234"),
//				VpcId2:  pulumi.String("vpc-rdef3333"),
//				VpcReg1: pulumi.String("us-east-1"),
//				VpcReg2: pulumi.String("us-west-1"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// **aws_peer** can be imported using the `vpc_id1` and `vpc_id2`, e.g.
//
// ```sh
//
//	$ pulumi import aviatrix:index/aviatrixAwsPeer:AviatrixAwsPeer test vpc_id1~vpc_id2
//
// ```
type AviatrixAwsPeer struct {
	pulumi.CustomResourceState

	// This parameter represents the name of an AWS Cloud-Account in Aviatrix controller.
	AccountName1 pulumi.StringOutput `pulumi:"accountName1"`
	// This parameter represents the name of an AWS Cloud-Account in Aviatrix controller.
	AccountName2 pulumi.StringOutput `pulumi:"accountName2"`
	// List of route table ID of vpc_id1.
	RtbList1Outputs pulumi.StringArrayOutput `pulumi:"rtbList1Outputs"`
	// List of Route table ID. Valid Values: ["all"], ["rtb-abcd1234"] OR ["rtb-abcd1234,rtb-wxyz5678"].
	RtbList1s pulumi.StringArrayOutput `pulumi:"rtbList1s"`
	// List of route table ID of vpc_id2.
	RtbList2Outputs pulumi.StringArrayOutput `pulumi:"rtbList2Outputs"`
	// List of Route table ID. Valid Values: ["all"], ["rtb-abcd1234"] OR ["rtb-abcd1234,rtb-wxyz5678"].
	RtbList2s pulumi.StringArrayOutput `pulumi:"rtbList2s"`
	// VPC ID of AWS cloud. Example: AWS: "vpc-abcd1234".
	VpcId1 pulumi.StringOutput `pulumi:"vpcId1"`
	// VPC ID of AWS cloud. Example: AWS: "vpc-abcd1234".
	VpcId2 pulumi.StringOutput `pulumi:"vpcId2"`
	// Region of AWS cloud. Example: AWS: "us-east-1".
	VpcReg1 pulumi.StringOutput `pulumi:"vpcReg1"`
	// Region of AWS cloud. Example: AWS: "us-east-1".
	VpcReg2 pulumi.StringOutput `pulumi:"vpcReg2"`
}

// NewAviatrixAwsPeer registers a new resource with the given unique name, arguments, and options.
func NewAviatrixAwsPeer(ctx *pulumi.Context,
	name string, args *AviatrixAwsPeerArgs, opts ...pulumi.ResourceOption) (*AviatrixAwsPeer, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountName1 == nil {
		return nil, errors.New("invalid value for required argument 'AccountName1'")
	}
	if args.AccountName2 == nil {
		return nil, errors.New("invalid value for required argument 'AccountName2'")
	}
	if args.VpcId1 == nil {
		return nil, errors.New("invalid value for required argument 'VpcId1'")
	}
	if args.VpcId2 == nil {
		return nil, errors.New("invalid value for required argument 'VpcId2'")
	}
	if args.VpcReg1 == nil {
		return nil, errors.New("invalid value for required argument 'VpcReg1'")
	}
	if args.VpcReg2 == nil {
		return nil, errors.New("invalid value for required argument 'VpcReg2'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource AviatrixAwsPeer
	err := ctx.RegisterResource("aviatrix:index/aviatrixAwsPeer:AviatrixAwsPeer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAviatrixAwsPeer gets an existing AviatrixAwsPeer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAviatrixAwsPeer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AviatrixAwsPeerState, opts ...pulumi.ResourceOption) (*AviatrixAwsPeer, error) {
	var resource AviatrixAwsPeer
	err := ctx.ReadResource("aviatrix:index/aviatrixAwsPeer:AviatrixAwsPeer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AviatrixAwsPeer resources.
type aviatrixAwsPeerState struct {
	// This parameter represents the name of an AWS Cloud-Account in Aviatrix controller.
	AccountName1 *string `pulumi:"accountName1"`
	// This parameter represents the name of an AWS Cloud-Account in Aviatrix controller.
	AccountName2 *string `pulumi:"accountName2"`
	// List of route table ID of vpc_id1.
	RtbList1Outputs []string `pulumi:"rtbList1Outputs"`
	// List of Route table ID. Valid Values: ["all"], ["rtb-abcd1234"] OR ["rtb-abcd1234,rtb-wxyz5678"].
	RtbList1s []string `pulumi:"rtbList1s"`
	// List of route table ID of vpc_id2.
	RtbList2Outputs []string `pulumi:"rtbList2Outputs"`
	// List of Route table ID. Valid Values: ["all"], ["rtb-abcd1234"] OR ["rtb-abcd1234,rtb-wxyz5678"].
	RtbList2s []string `pulumi:"rtbList2s"`
	// VPC ID of AWS cloud. Example: AWS: "vpc-abcd1234".
	VpcId1 *string `pulumi:"vpcId1"`
	// VPC ID of AWS cloud. Example: AWS: "vpc-abcd1234".
	VpcId2 *string `pulumi:"vpcId2"`
	// Region of AWS cloud. Example: AWS: "us-east-1".
	VpcReg1 *string `pulumi:"vpcReg1"`
	// Region of AWS cloud. Example: AWS: "us-east-1".
	VpcReg2 *string `pulumi:"vpcReg2"`
}

type AviatrixAwsPeerState struct {
	// This parameter represents the name of an AWS Cloud-Account in Aviatrix controller.
	AccountName1 pulumi.StringPtrInput
	// This parameter represents the name of an AWS Cloud-Account in Aviatrix controller.
	AccountName2 pulumi.StringPtrInput
	// List of route table ID of vpc_id1.
	RtbList1Outputs pulumi.StringArrayInput
	// List of Route table ID. Valid Values: ["all"], ["rtb-abcd1234"] OR ["rtb-abcd1234,rtb-wxyz5678"].
	RtbList1s pulumi.StringArrayInput
	// List of route table ID of vpc_id2.
	RtbList2Outputs pulumi.StringArrayInput
	// List of Route table ID. Valid Values: ["all"], ["rtb-abcd1234"] OR ["rtb-abcd1234,rtb-wxyz5678"].
	RtbList2s pulumi.StringArrayInput
	// VPC ID of AWS cloud. Example: AWS: "vpc-abcd1234".
	VpcId1 pulumi.StringPtrInput
	// VPC ID of AWS cloud. Example: AWS: "vpc-abcd1234".
	VpcId2 pulumi.StringPtrInput
	// Region of AWS cloud. Example: AWS: "us-east-1".
	VpcReg1 pulumi.StringPtrInput
	// Region of AWS cloud. Example: AWS: "us-east-1".
	VpcReg2 pulumi.StringPtrInput
}

func (AviatrixAwsPeerState) ElementType() reflect.Type {
	return reflect.TypeOf((*aviatrixAwsPeerState)(nil)).Elem()
}

type aviatrixAwsPeerArgs struct {
	// This parameter represents the name of an AWS Cloud-Account in Aviatrix controller.
	AccountName1 string `pulumi:"accountName1"`
	// This parameter represents the name of an AWS Cloud-Account in Aviatrix controller.
	AccountName2 string `pulumi:"accountName2"`
	// List of Route table ID. Valid Values: ["all"], ["rtb-abcd1234"] OR ["rtb-abcd1234,rtb-wxyz5678"].
	RtbList1s []string `pulumi:"rtbList1s"`
	// List of Route table ID. Valid Values: ["all"], ["rtb-abcd1234"] OR ["rtb-abcd1234,rtb-wxyz5678"].
	RtbList2s []string `pulumi:"rtbList2s"`
	// VPC ID of AWS cloud. Example: AWS: "vpc-abcd1234".
	VpcId1 string `pulumi:"vpcId1"`
	// VPC ID of AWS cloud. Example: AWS: "vpc-abcd1234".
	VpcId2 string `pulumi:"vpcId2"`
	// Region of AWS cloud. Example: AWS: "us-east-1".
	VpcReg1 string `pulumi:"vpcReg1"`
	// Region of AWS cloud. Example: AWS: "us-east-1".
	VpcReg2 string `pulumi:"vpcReg2"`
}

// The set of arguments for constructing a AviatrixAwsPeer resource.
type AviatrixAwsPeerArgs struct {
	// This parameter represents the name of an AWS Cloud-Account in Aviatrix controller.
	AccountName1 pulumi.StringInput
	// This parameter represents the name of an AWS Cloud-Account in Aviatrix controller.
	AccountName2 pulumi.StringInput
	// List of Route table ID. Valid Values: ["all"], ["rtb-abcd1234"] OR ["rtb-abcd1234,rtb-wxyz5678"].
	RtbList1s pulumi.StringArrayInput
	// List of Route table ID. Valid Values: ["all"], ["rtb-abcd1234"] OR ["rtb-abcd1234,rtb-wxyz5678"].
	RtbList2s pulumi.StringArrayInput
	// VPC ID of AWS cloud. Example: AWS: "vpc-abcd1234".
	VpcId1 pulumi.StringInput
	// VPC ID of AWS cloud. Example: AWS: "vpc-abcd1234".
	VpcId2 pulumi.StringInput
	// Region of AWS cloud. Example: AWS: "us-east-1".
	VpcReg1 pulumi.StringInput
	// Region of AWS cloud. Example: AWS: "us-east-1".
	VpcReg2 pulumi.StringInput
}

func (AviatrixAwsPeerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*aviatrixAwsPeerArgs)(nil)).Elem()
}

type AviatrixAwsPeerInput interface {
	pulumi.Input

	ToAviatrixAwsPeerOutput() AviatrixAwsPeerOutput
	ToAviatrixAwsPeerOutputWithContext(ctx context.Context) AviatrixAwsPeerOutput
}

func (*AviatrixAwsPeer) ElementType() reflect.Type {
	return reflect.TypeOf((**AviatrixAwsPeer)(nil)).Elem()
}

func (i *AviatrixAwsPeer) ToAviatrixAwsPeerOutput() AviatrixAwsPeerOutput {
	return i.ToAviatrixAwsPeerOutputWithContext(context.Background())
}

func (i *AviatrixAwsPeer) ToAviatrixAwsPeerOutputWithContext(ctx context.Context) AviatrixAwsPeerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixAwsPeerOutput)
}

// AviatrixAwsPeerArrayInput is an input type that accepts AviatrixAwsPeerArray and AviatrixAwsPeerArrayOutput values.
// You can construct a concrete instance of `AviatrixAwsPeerArrayInput` via:
//
//	AviatrixAwsPeerArray{ AviatrixAwsPeerArgs{...} }
type AviatrixAwsPeerArrayInput interface {
	pulumi.Input

	ToAviatrixAwsPeerArrayOutput() AviatrixAwsPeerArrayOutput
	ToAviatrixAwsPeerArrayOutputWithContext(context.Context) AviatrixAwsPeerArrayOutput
}

type AviatrixAwsPeerArray []AviatrixAwsPeerInput

func (AviatrixAwsPeerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AviatrixAwsPeer)(nil)).Elem()
}

func (i AviatrixAwsPeerArray) ToAviatrixAwsPeerArrayOutput() AviatrixAwsPeerArrayOutput {
	return i.ToAviatrixAwsPeerArrayOutputWithContext(context.Background())
}

func (i AviatrixAwsPeerArray) ToAviatrixAwsPeerArrayOutputWithContext(ctx context.Context) AviatrixAwsPeerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixAwsPeerArrayOutput)
}

// AviatrixAwsPeerMapInput is an input type that accepts AviatrixAwsPeerMap and AviatrixAwsPeerMapOutput values.
// You can construct a concrete instance of `AviatrixAwsPeerMapInput` via:
//
//	AviatrixAwsPeerMap{ "key": AviatrixAwsPeerArgs{...} }
type AviatrixAwsPeerMapInput interface {
	pulumi.Input

	ToAviatrixAwsPeerMapOutput() AviatrixAwsPeerMapOutput
	ToAviatrixAwsPeerMapOutputWithContext(context.Context) AviatrixAwsPeerMapOutput
}

type AviatrixAwsPeerMap map[string]AviatrixAwsPeerInput

func (AviatrixAwsPeerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AviatrixAwsPeer)(nil)).Elem()
}

func (i AviatrixAwsPeerMap) ToAviatrixAwsPeerMapOutput() AviatrixAwsPeerMapOutput {
	return i.ToAviatrixAwsPeerMapOutputWithContext(context.Background())
}

func (i AviatrixAwsPeerMap) ToAviatrixAwsPeerMapOutputWithContext(ctx context.Context) AviatrixAwsPeerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixAwsPeerMapOutput)
}

type AviatrixAwsPeerOutput struct{ *pulumi.OutputState }

func (AviatrixAwsPeerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AviatrixAwsPeer)(nil)).Elem()
}

func (o AviatrixAwsPeerOutput) ToAviatrixAwsPeerOutput() AviatrixAwsPeerOutput {
	return o
}

func (o AviatrixAwsPeerOutput) ToAviatrixAwsPeerOutputWithContext(ctx context.Context) AviatrixAwsPeerOutput {
	return o
}

// This parameter represents the name of an AWS Cloud-Account in Aviatrix controller.
func (o AviatrixAwsPeerOutput) AccountName1() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixAwsPeer) pulumi.StringOutput { return v.AccountName1 }).(pulumi.StringOutput)
}

// This parameter represents the name of an AWS Cloud-Account in Aviatrix controller.
func (o AviatrixAwsPeerOutput) AccountName2() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixAwsPeer) pulumi.StringOutput { return v.AccountName2 }).(pulumi.StringOutput)
}

// List of route table ID of vpc_id1.
func (o AviatrixAwsPeerOutput) RtbList1Outputs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AviatrixAwsPeer) pulumi.StringArrayOutput { return v.RtbList1Outputs }).(pulumi.StringArrayOutput)
}

// List of Route table ID. Valid Values: ["all"], ["rtb-abcd1234"] OR ["rtb-abcd1234,rtb-wxyz5678"].
func (o AviatrixAwsPeerOutput) RtbList1s() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AviatrixAwsPeer) pulumi.StringArrayOutput { return v.RtbList1s }).(pulumi.StringArrayOutput)
}

// List of route table ID of vpc_id2.
func (o AviatrixAwsPeerOutput) RtbList2Outputs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AviatrixAwsPeer) pulumi.StringArrayOutput { return v.RtbList2Outputs }).(pulumi.StringArrayOutput)
}

// List of Route table ID. Valid Values: ["all"], ["rtb-abcd1234"] OR ["rtb-abcd1234,rtb-wxyz5678"].
func (o AviatrixAwsPeerOutput) RtbList2s() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AviatrixAwsPeer) pulumi.StringArrayOutput { return v.RtbList2s }).(pulumi.StringArrayOutput)
}

// VPC ID of AWS cloud. Example: AWS: "vpc-abcd1234".
func (o AviatrixAwsPeerOutput) VpcId1() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixAwsPeer) pulumi.StringOutput { return v.VpcId1 }).(pulumi.StringOutput)
}

// VPC ID of AWS cloud. Example: AWS: "vpc-abcd1234".
func (o AviatrixAwsPeerOutput) VpcId2() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixAwsPeer) pulumi.StringOutput { return v.VpcId2 }).(pulumi.StringOutput)
}

// Region of AWS cloud. Example: AWS: "us-east-1".
func (o AviatrixAwsPeerOutput) VpcReg1() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixAwsPeer) pulumi.StringOutput { return v.VpcReg1 }).(pulumi.StringOutput)
}

// Region of AWS cloud. Example: AWS: "us-east-1".
func (o AviatrixAwsPeerOutput) VpcReg2() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixAwsPeer) pulumi.StringOutput { return v.VpcReg2 }).(pulumi.StringOutput)
}

type AviatrixAwsPeerArrayOutput struct{ *pulumi.OutputState }

func (AviatrixAwsPeerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AviatrixAwsPeer)(nil)).Elem()
}

func (o AviatrixAwsPeerArrayOutput) ToAviatrixAwsPeerArrayOutput() AviatrixAwsPeerArrayOutput {
	return o
}

func (o AviatrixAwsPeerArrayOutput) ToAviatrixAwsPeerArrayOutputWithContext(ctx context.Context) AviatrixAwsPeerArrayOutput {
	return o
}

func (o AviatrixAwsPeerArrayOutput) Index(i pulumi.IntInput) AviatrixAwsPeerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AviatrixAwsPeer {
		return vs[0].([]*AviatrixAwsPeer)[vs[1].(int)]
	}).(AviatrixAwsPeerOutput)
}

type AviatrixAwsPeerMapOutput struct{ *pulumi.OutputState }

func (AviatrixAwsPeerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AviatrixAwsPeer)(nil)).Elem()
}

func (o AviatrixAwsPeerMapOutput) ToAviatrixAwsPeerMapOutput() AviatrixAwsPeerMapOutput {
	return o
}

func (o AviatrixAwsPeerMapOutput) ToAviatrixAwsPeerMapOutputWithContext(ctx context.Context) AviatrixAwsPeerMapOutput {
	return o
}

func (o AviatrixAwsPeerMapOutput) MapIndex(k pulumi.StringInput) AviatrixAwsPeerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AviatrixAwsPeer {
		return vs[0].(map[string]*AviatrixAwsPeer)[vs[1].(string)]
	}).(AviatrixAwsPeerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixAwsPeerInput)(nil)).Elem(), &AviatrixAwsPeer{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixAwsPeerArrayInput)(nil)).Elem(), AviatrixAwsPeerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixAwsPeerMapInput)(nil)).Elem(), AviatrixAwsPeerMap{})
	pulumi.RegisterOutputType(AviatrixAwsPeerOutput{})
	pulumi.RegisterOutputType(AviatrixAwsPeerArrayOutput{})
	pulumi.RegisterOutputType(AviatrixAwsPeerMapOutput{})
}
