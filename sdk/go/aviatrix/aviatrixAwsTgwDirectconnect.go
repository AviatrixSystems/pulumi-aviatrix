// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aviatrix

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AviatrixAwsTgwDirectconnect struct {
	pulumi.CustomResourceState

	// Public IP address. Example: '40.0.0.0'.
	AllowedPrefix pulumi.StringOutput `pulumi:"allowedPrefix"`
	// This parameter represents the name of an Account in Aviatrix controller.
	DirectconnectAccountName pulumi.StringOutput `pulumi:"directconnectAccountName"`
	// This parameter represents the name of a Direct Connect Gateway ID.
	DxGatewayId pulumi.StringOutput `pulumi:"dxGatewayId"`
	// Switch to enable/disable encrypted transit approval for direct connection. Valid values: true, false.
	EnableLearnedCidrsApproval pulumi.BoolPtrOutput `pulumi:"enableLearnedCidrsApproval"`
	// The name of an Aviatrix network domain, to which the direct connect gateway will be attached.
	NetworkDomainName pulumi.StringPtrOutput `pulumi:"networkDomainName"`
	// The name of an Aviatrix security domain, to which the direct connect gateway will be attached.
	//
	// Deprecated: Please use network_domain_name instead.
	SecurityDomainName pulumi.StringPtrOutput `pulumi:"securityDomainName"`
	// This parameter represents the name of an AWS TGW.
	TgwName pulumi.StringOutput `pulumi:"tgwName"`
}

// NewAviatrixAwsTgwDirectconnect registers a new resource with the given unique name, arguments, and options.
func NewAviatrixAwsTgwDirectconnect(ctx *pulumi.Context,
	name string, args *AviatrixAwsTgwDirectconnectArgs, opts ...pulumi.ResourceOption) (*AviatrixAwsTgwDirectconnect, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AllowedPrefix == nil {
		return nil, errors.New("invalid value for required argument 'AllowedPrefix'")
	}
	if args.DirectconnectAccountName == nil {
		return nil, errors.New("invalid value for required argument 'DirectconnectAccountName'")
	}
	if args.DxGatewayId == nil {
		return nil, errors.New("invalid value for required argument 'DxGatewayId'")
	}
	if args.TgwName == nil {
		return nil, errors.New("invalid value for required argument 'TgwName'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource AviatrixAwsTgwDirectconnect
	err := ctx.RegisterResource("aviatrix:index/aviatrixAwsTgwDirectconnect:AviatrixAwsTgwDirectconnect", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAviatrixAwsTgwDirectconnect gets an existing AviatrixAwsTgwDirectconnect resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAviatrixAwsTgwDirectconnect(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AviatrixAwsTgwDirectconnectState, opts ...pulumi.ResourceOption) (*AviatrixAwsTgwDirectconnect, error) {
	var resource AviatrixAwsTgwDirectconnect
	err := ctx.ReadResource("aviatrix:index/aviatrixAwsTgwDirectconnect:AviatrixAwsTgwDirectconnect", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AviatrixAwsTgwDirectconnect resources.
type aviatrixAwsTgwDirectconnectState struct {
	// Public IP address. Example: '40.0.0.0'.
	AllowedPrefix *string `pulumi:"allowedPrefix"`
	// This parameter represents the name of an Account in Aviatrix controller.
	DirectconnectAccountName *string `pulumi:"directconnectAccountName"`
	// This parameter represents the name of a Direct Connect Gateway ID.
	DxGatewayId *string `pulumi:"dxGatewayId"`
	// Switch to enable/disable encrypted transit approval for direct connection. Valid values: true, false.
	EnableLearnedCidrsApproval *bool `pulumi:"enableLearnedCidrsApproval"`
	// The name of an Aviatrix network domain, to which the direct connect gateway will be attached.
	NetworkDomainName *string `pulumi:"networkDomainName"`
	// The name of an Aviatrix security domain, to which the direct connect gateway will be attached.
	//
	// Deprecated: Please use network_domain_name instead.
	SecurityDomainName *string `pulumi:"securityDomainName"`
	// This parameter represents the name of an AWS TGW.
	TgwName *string `pulumi:"tgwName"`
}

type AviatrixAwsTgwDirectconnectState struct {
	// Public IP address. Example: '40.0.0.0'.
	AllowedPrefix pulumi.StringPtrInput
	// This parameter represents the name of an Account in Aviatrix controller.
	DirectconnectAccountName pulumi.StringPtrInput
	// This parameter represents the name of a Direct Connect Gateway ID.
	DxGatewayId pulumi.StringPtrInput
	// Switch to enable/disable encrypted transit approval for direct connection. Valid values: true, false.
	EnableLearnedCidrsApproval pulumi.BoolPtrInput
	// The name of an Aviatrix network domain, to which the direct connect gateway will be attached.
	NetworkDomainName pulumi.StringPtrInput
	// The name of an Aviatrix security domain, to which the direct connect gateway will be attached.
	//
	// Deprecated: Please use network_domain_name instead.
	SecurityDomainName pulumi.StringPtrInput
	// This parameter represents the name of an AWS TGW.
	TgwName pulumi.StringPtrInput
}

func (AviatrixAwsTgwDirectconnectState) ElementType() reflect.Type {
	return reflect.TypeOf((*aviatrixAwsTgwDirectconnectState)(nil)).Elem()
}

type aviatrixAwsTgwDirectconnectArgs struct {
	// Public IP address. Example: '40.0.0.0'.
	AllowedPrefix string `pulumi:"allowedPrefix"`
	// This parameter represents the name of an Account in Aviatrix controller.
	DirectconnectAccountName string `pulumi:"directconnectAccountName"`
	// This parameter represents the name of a Direct Connect Gateway ID.
	DxGatewayId string `pulumi:"dxGatewayId"`
	// Switch to enable/disable encrypted transit approval for direct connection. Valid values: true, false.
	EnableLearnedCidrsApproval *bool `pulumi:"enableLearnedCidrsApproval"`
	// The name of an Aviatrix network domain, to which the direct connect gateway will be attached.
	NetworkDomainName *string `pulumi:"networkDomainName"`
	// The name of an Aviatrix security domain, to which the direct connect gateway will be attached.
	//
	// Deprecated: Please use network_domain_name instead.
	SecurityDomainName *string `pulumi:"securityDomainName"`
	// This parameter represents the name of an AWS TGW.
	TgwName string `pulumi:"tgwName"`
}

// The set of arguments for constructing a AviatrixAwsTgwDirectconnect resource.
type AviatrixAwsTgwDirectconnectArgs struct {
	// Public IP address. Example: '40.0.0.0'.
	AllowedPrefix pulumi.StringInput
	// This parameter represents the name of an Account in Aviatrix controller.
	DirectconnectAccountName pulumi.StringInput
	// This parameter represents the name of a Direct Connect Gateway ID.
	DxGatewayId pulumi.StringInput
	// Switch to enable/disable encrypted transit approval for direct connection. Valid values: true, false.
	EnableLearnedCidrsApproval pulumi.BoolPtrInput
	// The name of an Aviatrix network domain, to which the direct connect gateway will be attached.
	NetworkDomainName pulumi.StringPtrInput
	// The name of an Aviatrix security domain, to which the direct connect gateway will be attached.
	//
	// Deprecated: Please use network_domain_name instead.
	SecurityDomainName pulumi.StringPtrInput
	// This parameter represents the name of an AWS TGW.
	TgwName pulumi.StringInput
}

func (AviatrixAwsTgwDirectconnectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*aviatrixAwsTgwDirectconnectArgs)(nil)).Elem()
}

type AviatrixAwsTgwDirectconnectInput interface {
	pulumi.Input

	ToAviatrixAwsTgwDirectconnectOutput() AviatrixAwsTgwDirectconnectOutput
	ToAviatrixAwsTgwDirectconnectOutputWithContext(ctx context.Context) AviatrixAwsTgwDirectconnectOutput
}

func (*AviatrixAwsTgwDirectconnect) ElementType() reflect.Type {
	return reflect.TypeOf((**AviatrixAwsTgwDirectconnect)(nil)).Elem()
}

func (i *AviatrixAwsTgwDirectconnect) ToAviatrixAwsTgwDirectconnectOutput() AviatrixAwsTgwDirectconnectOutput {
	return i.ToAviatrixAwsTgwDirectconnectOutputWithContext(context.Background())
}

func (i *AviatrixAwsTgwDirectconnect) ToAviatrixAwsTgwDirectconnectOutputWithContext(ctx context.Context) AviatrixAwsTgwDirectconnectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixAwsTgwDirectconnectOutput)
}

// AviatrixAwsTgwDirectconnectArrayInput is an input type that accepts AviatrixAwsTgwDirectconnectArray and AviatrixAwsTgwDirectconnectArrayOutput values.
// You can construct a concrete instance of `AviatrixAwsTgwDirectconnectArrayInput` via:
//
//	AviatrixAwsTgwDirectconnectArray{ AviatrixAwsTgwDirectconnectArgs{...} }
type AviatrixAwsTgwDirectconnectArrayInput interface {
	pulumi.Input

	ToAviatrixAwsTgwDirectconnectArrayOutput() AviatrixAwsTgwDirectconnectArrayOutput
	ToAviatrixAwsTgwDirectconnectArrayOutputWithContext(context.Context) AviatrixAwsTgwDirectconnectArrayOutput
}

type AviatrixAwsTgwDirectconnectArray []AviatrixAwsTgwDirectconnectInput

func (AviatrixAwsTgwDirectconnectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AviatrixAwsTgwDirectconnect)(nil)).Elem()
}

func (i AviatrixAwsTgwDirectconnectArray) ToAviatrixAwsTgwDirectconnectArrayOutput() AviatrixAwsTgwDirectconnectArrayOutput {
	return i.ToAviatrixAwsTgwDirectconnectArrayOutputWithContext(context.Background())
}

func (i AviatrixAwsTgwDirectconnectArray) ToAviatrixAwsTgwDirectconnectArrayOutputWithContext(ctx context.Context) AviatrixAwsTgwDirectconnectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixAwsTgwDirectconnectArrayOutput)
}

// AviatrixAwsTgwDirectconnectMapInput is an input type that accepts AviatrixAwsTgwDirectconnectMap and AviatrixAwsTgwDirectconnectMapOutput values.
// You can construct a concrete instance of `AviatrixAwsTgwDirectconnectMapInput` via:
//
//	AviatrixAwsTgwDirectconnectMap{ "key": AviatrixAwsTgwDirectconnectArgs{...} }
type AviatrixAwsTgwDirectconnectMapInput interface {
	pulumi.Input

	ToAviatrixAwsTgwDirectconnectMapOutput() AviatrixAwsTgwDirectconnectMapOutput
	ToAviatrixAwsTgwDirectconnectMapOutputWithContext(context.Context) AviatrixAwsTgwDirectconnectMapOutput
}

type AviatrixAwsTgwDirectconnectMap map[string]AviatrixAwsTgwDirectconnectInput

func (AviatrixAwsTgwDirectconnectMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AviatrixAwsTgwDirectconnect)(nil)).Elem()
}

func (i AviatrixAwsTgwDirectconnectMap) ToAviatrixAwsTgwDirectconnectMapOutput() AviatrixAwsTgwDirectconnectMapOutput {
	return i.ToAviatrixAwsTgwDirectconnectMapOutputWithContext(context.Background())
}

func (i AviatrixAwsTgwDirectconnectMap) ToAviatrixAwsTgwDirectconnectMapOutputWithContext(ctx context.Context) AviatrixAwsTgwDirectconnectMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixAwsTgwDirectconnectMapOutput)
}

type AviatrixAwsTgwDirectconnectOutput struct{ *pulumi.OutputState }

func (AviatrixAwsTgwDirectconnectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AviatrixAwsTgwDirectconnect)(nil)).Elem()
}

func (o AviatrixAwsTgwDirectconnectOutput) ToAviatrixAwsTgwDirectconnectOutput() AviatrixAwsTgwDirectconnectOutput {
	return o
}

func (o AviatrixAwsTgwDirectconnectOutput) ToAviatrixAwsTgwDirectconnectOutputWithContext(ctx context.Context) AviatrixAwsTgwDirectconnectOutput {
	return o
}

// Public IP address. Example: '40.0.0.0'.
func (o AviatrixAwsTgwDirectconnectOutput) AllowedPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixAwsTgwDirectconnect) pulumi.StringOutput { return v.AllowedPrefix }).(pulumi.StringOutput)
}

// This parameter represents the name of an Account in Aviatrix controller.
func (o AviatrixAwsTgwDirectconnectOutput) DirectconnectAccountName() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixAwsTgwDirectconnect) pulumi.StringOutput { return v.DirectconnectAccountName }).(pulumi.StringOutput)
}

// This parameter represents the name of a Direct Connect Gateway ID.
func (o AviatrixAwsTgwDirectconnectOutput) DxGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixAwsTgwDirectconnect) pulumi.StringOutput { return v.DxGatewayId }).(pulumi.StringOutput)
}

// Switch to enable/disable encrypted transit approval for direct connection. Valid values: true, false.
func (o AviatrixAwsTgwDirectconnectOutput) EnableLearnedCidrsApproval() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AviatrixAwsTgwDirectconnect) pulumi.BoolPtrOutput { return v.EnableLearnedCidrsApproval }).(pulumi.BoolPtrOutput)
}

// The name of an Aviatrix network domain, to which the direct connect gateway will be attached.
func (o AviatrixAwsTgwDirectconnectOutput) NetworkDomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixAwsTgwDirectconnect) pulumi.StringPtrOutput { return v.NetworkDomainName }).(pulumi.StringPtrOutput)
}

// The name of an Aviatrix security domain, to which the direct connect gateway will be attached.
//
// Deprecated: Please use network_domain_name instead.
func (o AviatrixAwsTgwDirectconnectOutput) SecurityDomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixAwsTgwDirectconnect) pulumi.StringPtrOutput { return v.SecurityDomainName }).(pulumi.StringPtrOutput)
}

// This parameter represents the name of an AWS TGW.
func (o AviatrixAwsTgwDirectconnectOutput) TgwName() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixAwsTgwDirectconnect) pulumi.StringOutput { return v.TgwName }).(pulumi.StringOutput)
}

type AviatrixAwsTgwDirectconnectArrayOutput struct{ *pulumi.OutputState }

func (AviatrixAwsTgwDirectconnectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AviatrixAwsTgwDirectconnect)(nil)).Elem()
}

func (o AviatrixAwsTgwDirectconnectArrayOutput) ToAviatrixAwsTgwDirectconnectArrayOutput() AviatrixAwsTgwDirectconnectArrayOutput {
	return o
}

func (o AviatrixAwsTgwDirectconnectArrayOutput) ToAviatrixAwsTgwDirectconnectArrayOutputWithContext(ctx context.Context) AviatrixAwsTgwDirectconnectArrayOutput {
	return o
}

func (o AviatrixAwsTgwDirectconnectArrayOutput) Index(i pulumi.IntInput) AviatrixAwsTgwDirectconnectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AviatrixAwsTgwDirectconnect {
		return vs[0].([]*AviatrixAwsTgwDirectconnect)[vs[1].(int)]
	}).(AviatrixAwsTgwDirectconnectOutput)
}

type AviatrixAwsTgwDirectconnectMapOutput struct{ *pulumi.OutputState }

func (AviatrixAwsTgwDirectconnectMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AviatrixAwsTgwDirectconnect)(nil)).Elem()
}

func (o AviatrixAwsTgwDirectconnectMapOutput) ToAviatrixAwsTgwDirectconnectMapOutput() AviatrixAwsTgwDirectconnectMapOutput {
	return o
}

func (o AviatrixAwsTgwDirectconnectMapOutput) ToAviatrixAwsTgwDirectconnectMapOutputWithContext(ctx context.Context) AviatrixAwsTgwDirectconnectMapOutput {
	return o
}

func (o AviatrixAwsTgwDirectconnectMapOutput) MapIndex(k pulumi.StringInput) AviatrixAwsTgwDirectconnectOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AviatrixAwsTgwDirectconnect {
		return vs[0].(map[string]*AviatrixAwsTgwDirectconnect)[vs[1].(string)]
	}).(AviatrixAwsTgwDirectconnectOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixAwsTgwDirectconnectInput)(nil)).Elem(), &AviatrixAwsTgwDirectconnect{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixAwsTgwDirectconnectArrayInput)(nil)).Elem(), AviatrixAwsTgwDirectconnectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixAwsTgwDirectconnectMapInput)(nil)).Elem(), AviatrixAwsTgwDirectconnectMap{})
	pulumi.RegisterOutputType(AviatrixAwsTgwDirectconnectOutput{})
	pulumi.RegisterOutputType(AviatrixAwsTgwDirectconnectArrayOutput{})
	pulumi.RegisterOutputType(AviatrixAwsTgwDirectconnectMapOutput{})
}
