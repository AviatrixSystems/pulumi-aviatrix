// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aviatrix

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AviatrixSegmentationNetworkDomainAssociation struct {
	pulumi.CustomResourceState

	// Attachment name, either Spoke or Edge.
	AttachmentName pulumi.StringOutput `pulumi:"attachmentName"`
	// Network Domain name.
	NetworkDomainName pulumi.StringOutput `pulumi:"networkDomainName"`
	// Transit Gateway name.
	TransitGatewayName pulumi.StringOutput `pulumi:"transitGatewayName"`
}

// NewAviatrixSegmentationNetworkDomainAssociation registers a new resource with the given unique name, arguments, and options.
func NewAviatrixSegmentationNetworkDomainAssociation(ctx *pulumi.Context,
	name string, args *AviatrixSegmentationNetworkDomainAssociationArgs, opts ...pulumi.ResourceOption) (*AviatrixSegmentationNetworkDomainAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AttachmentName == nil {
		return nil, errors.New("invalid value for required argument 'AttachmentName'")
	}
	if args.NetworkDomainName == nil {
		return nil, errors.New("invalid value for required argument 'NetworkDomainName'")
	}
	if args.TransitGatewayName == nil {
		return nil, errors.New("invalid value for required argument 'TransitGatewayName'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource AviatrixSegmentationNetworkDomainAssociation
	err := ctx.RegisterResource("aviatrix:index/aviatrixSegmentationNetworkDomainAssociation:AviatrixSegmentationNetworkDomainAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAviatrixSegmentationNetworkDomainAssociation gets an existing AviatrixSegmentationNetworkDomainAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAviatrixSegmentationNetworkDomainAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AviatrixSegmentationNetworkDomainAssociationState, opts ...pulumi.ResourceOption) (*AviatrixSegmentationNetworkDomainAssociation, error) {
	var resource AviatrixSegmentationNetworkDomainAssociation
	err := ctx.ReadResource("aviatrix:index/aviatrixSegmentationNetworkDomainAssociation:AviatrixSegmentationNetworkDomainAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AviatrixSegmentationNetworkDomainAssociation resources.
type aviatrixSegmentationNetworkDomainAssociationState struct {
	// Attachment name, either Spoke or Edge.
	AttachmentName *string `pulumi:"attachmentName"`
	// Network Domain name.
	NetworkDomainName *string `pulumi:"networkDomainName"`
	// Transit Gateway name.
	TransitGatewayName *string `pulumi:"transitGatewayName"`
}

type AviatrixSegmentationNetworkDomainAssociationState struct {
	// Attachment name, either Spoke or Edge.
	AttachmentName pulumi.StringPtrInput
	// Network Domain name.
	NetworkDomainName pulumi.StringPtrInput
	// Transit Gateway name.
	TransitGatewayName pulumi.StringPtrInput
}

func (AviatrixSegmentationNetworkDomainAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*aviatrixSegmentationNetworkDomainAssociationState)(nil)).Elem()
}

type aviatrixSegmentationNetworkDomainAssociationArgs struct {
	// Attachment name, either Spoke or Edge.
	AttachmentName string `pulumi:"attachmentName"`
	// Network Domain name.
	NetworkDomainName string `pulumi:"networkDomainName"`
	// Transit Gateway name.
	TransitGatewayName string `pulumi:"transitGatewayName"`
}

// The set of arguments for constructing a AviatrixSegmentationNetworkDomainAssociation resource.
type AviatrixSegmentationNetworkDomainAssociationArgs struct {
	// Attachment name, either Spoke or Edge.
	AttachmentName pulumi.StringInput
	// Network Domain name.
	NetworkDomainName pulumi.StringInput
	// Transit Gateway name.
	TransitGatewayName pulumi.StringInput
}

func (AviatrixSegmentationNetworkDomainAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*aviatrixSegmentationNetworkDomainAssociationArgs)(nil)).Elem()
}

type AviatrixSegmentationNetworkDomainAssociationInput interface {
	pulumi.Input

	ToAviatrixSegmentationNetworkDomainAssociationOutput() AviatrixSegmentationNetworkDomainAssociationOutput
	ToAviatrixSegmentationNetworkDomainAssociationOutputWithContext(ctx context.Context) AviatrixSegmentationNetworkDomainAssociationOutput
}

func (*AviatrixSegmentationNetworkDomainAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((**AviatrixSegmentationNetworkDomainAssociation)(nil)).Elem()
}

func (i *AviatrixSegmentationNetworkDomainAssociation) ToAviatrixSegmentationNetworkDomainAssociationOutput() AviatrixSegmentationNetworkDomainAssociationOutput {
	return i.ToAviatrixSegmentationNetworkDomainAssociationOutputWithContext(context.Background())
}

func (i *AviatrixSegmentationNetworkDomainAssociation) ToAviatrixSegmentationNetworkDomainAssociationOutputWithContext(ctx context.Context) AviatrixSegmentationNetworkDomainAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixSegmentationNetworkDomainAssociationOutput)
}

// AviatrixSegmentationNetworkDomainAssociationArrayInput is an input type that accepts AviatrixSegmentationNetworkDomainAssociationArray and AviatrixSegmentationNetworkDomainAssociationArrayOutput values.
// You can construct a concrete instance of `AviatrixSegmentationNetworkDomainAssociationArrayInput` via:
//
//	AviatrixSegmentationNetworkDomainAssociationArray{ AviatrixSegmentationNetworkDomainAssociationArgs{...} }
type AviatrixSegmentationNetworkDomainAssociationArrayInput interface {
	pulumi.Input

	ToAviatrixSegmentationNetworkDomainAssociationArrayOutput() AviatrixSegmentationNetworkDomainAssociationArrayOutput
	ToAviatrixSegmentationNetworkDomainAssociationArrayOutputWithContext(context.Context) AviatrixSegmentationNetworkDomainAssociationArrayOutput
}

type AviatrixSegmentationNetworkDomainAssociationArray []AviatrixSegmentationNetworkDomainAssociationInput

func (AviatrixSegmentationNetworkDomainAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AviatrixSegmentationNetworkDomainAssociation)(nil)).Elem()
}

func (i AviatrixSegmentationNetworkDomainAssociationArray) ToAviatrixSegmentationNetworkDomainAssociationArrayOutput() AviatrixSegmentationNetworkDomainAssociationArrayOutput {
	return i.ToAviatrixSegmentationNetworkDomainAssociationArrayOutputWithContext(context.Background())
}

func (i AviatrixSegmentationNetworkDomainAssociationArray) ToAviatrixSegmentationNetworkDomainAssociationArrayOutputWithContext(ctx context.Context) AviatrixSegmentationNetworkDomainAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixSegmentationNetworkDomainAssociationArrayOutput)
}

// AviatrixSegmentationNetworkDomainAssociationMapInput is an input type that accepts AviatrixSegmentationNetworkDomainAssociationMap and AviatrixSegmentationNetworkDomainAssociationMapOutput values.
// You can construct a concrete instance of `AviatrixSegmentationNetworkDomainAssociationMapInput` via:
//
//	AviatrixSegmentationNetworkDomainAssociationMap{ "key": AviatrixSegmentationNetworkDomainAssociationArgs{...} }
type AviatrixSegmentationNetworkDomainAssociationMapInput interface {
	pulumi.Input

	ToAviatrixSegmentationNetworkDomainAssociationMapOutput() AviatrixSegmentationNetworkDomainAssociationMapOutput
	ToAviatrixSegmentationNetworkDomainAssociationMapOutputWithContext(context.Context) AviatrixSegmentationNetworkDomainAssociationMapOutput
}

type AviatrixSegmentationNetworkDomainAssociationMap map[string]AviatrixSegmentationNetworkDomainAssociationInput

func (AviatrixSegmentationNetworkDomainAssociationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AviatrixSegmentationNetworkDomainAssociation)(nil)).Elem()
}

func (i AviatrixSegmentationNetworkDomainAssociationMap) ToAviatrixSegmentationNetworkDomainAssociationMapOutput() AviatrixSegmentationNetworkDomainAssociationMapOutput {
	return i.ToAviatrixSegmentationNetworkDomainAssociationMapOutputWithContext(context.Background())
}

func (i AviatrixSegmentationNetworkDomainAssociationMap) ToAviatrixSegmentationNetworkDomainAssociationMapOutputWithContext(ctx context.Context) AviatrixSegmentationNetworkDomainAssociationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixSegmentationNetworkDomainAssociationMapOutput)
}

type AviatrixSegmentationNetworkDomainAssociationOutput struct{ *pulumi.OutputState }

func (AviatrixSegmentationNetworkDomainAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AviatrixSegmentationNetworkDomainAssociation)(nil)).Elem()
}

func (o AviatrixSegmentationNetworkDomainAssociationOutput) ToAviatrixSegmentationNetworkDomainAssociationOutput() AviatrixSegmentationNetworkDomainAssociationOutput {
	return o
}

func (o AviatrixSegmentationNetworkDomainAssociationOutput) ToAviatrixSegmentationNetworkDomainAssociationOutputWithContext(ctx context.Context) AviatrixSegmentationNetworkDomainAssociationOutput {
	return o
}

// Attachment name, either Spoke or Edge.
func (o AviatrixSegmentationNetworkDomainAssociationOutput) AttachmentName() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixSegmentationNetworkDomainAssociation) pulumi.StringOutput { return v.AttachmentName }).(pulumi.StringOutput)
}

// Network Domain name.
func (o AviatrixSegmentationNetworkDomainAssociationOutput) NetworkDomainName() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixSegmentationNetworkDomainAssociation) pulumi.StringOutput { return v.NetworkDomainName }).(pulumi.StringOutput)
}

// Transit Gateway name.
func (o AviatrixSegmentationNetworkDomainAssociationOutput) TransitGatewayName() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixSegmentationNetworkDomainAssociation) pulumi.StringOutput { return v.TransitGatewayName }).(pulumi.StringOutput)
}

type AviatrixSegmentationNetworkDomainAssociationArrayOutput struct{ *pulumi.OutputState }

func (AviatrixSegmentationNetworkDomainAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AviatrixSegmentationNetworkDomainAssociation)(nil)).Elem()
}

func (o AviatrixSegmentationNetworkDomainAssociationArrayOutput) ToAviatrixSegmentationNetworkDomainAssociationArrayOutput() AviatrixSegmentationNetworkDomainAssociationArrayOutput {
	return o
}

func (o AviatrixSegmentationNetworkDomainAssociationArrayOutput) ToAviatrixSegmentationNetworkDomainAssociationArrayOutputWithContext(ctx context.Context) AviatrixSegmentationNetworkDomainAssociationArrayOutput {
	return o
}

func (o AviatrixSegmentationNetworkDomainAssociationArrayOutput) Index(i pulumi.IntInput) AviatrixSegmentationNetworkDomainAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AviatrixSegmentationNetworkDomainAssociation {
		return vs[0].([]*AviatrixSegmentationNetworkDomainAssociation)[vs[1].(int)]
	}).(AviatrixSegmentationNetworkDomainAssociationOutput)
}

type AviatrixSegmentationNetworkDomainAssociationMapOutput struct{ *pulumi.OutputState }

func (AviatrixSegmentationNetworkDomainAssociationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AviatrixSegmentationNetworkDomainAssociation)(nil)).Elem()
}

func (o AviatrixSegmentationNetworkDomainAssociationMapOutput) ToAviatrixSegmentationNetworkDomainAssociationMapOutput() AviatrixSegmentationNetworkDomainAssociationMapOutput {
	return o
}

func (o AviatrixSegmentationNetworkDomainAssociationMapOutput) ToAviatrixSegmentationNetworkDomainAssociationMapOutputWithContext(ctx context.Context) AviatrixSegmentationNetworkDomainAssociationMapOutput {
	return o
}

func (o AviatrixSegmentationNetworkDomainAssociationMapOutput) MapIndex(k pulumi.StringInput) AviatrixSegmentationNetworkDomainAssociationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AviatrixSegmentationNetworkDomainAssociation {
		return vs[0].(map[string]*AviatrixSegmentationNetworkDomainAssociation)[vs[1].(string)]
	}).(AviatrixSegmentationNetworkDomainAssociationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixSegmentationNetworkDomainAssociationInput)(nil)).Elem(), &AviatrixSegmentationNetworkDomainAssociation{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixSegmentationNetworkDomainAssociationArrayInput)(nil)).Elem(), AviatrixSegmentationNetworkDomainAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixSegmentationNetworkDomainAssociationMapInput)(nil)).Elem(), AviatrixSegmentationNetworkDomainAssociationMap{})
	pulumi.RegisterOutputType(AviatrixSegmentationNetworkDomainAssociationOutput{})
	pulumi.RegisterOutputType(AviatrixSegmentationNetworkDomainAssociationArrayOutput{})
	pulumi.RegisterOutputType(AviatrixSegmentationNetworkDomainAssociationMapOutput{})
}
