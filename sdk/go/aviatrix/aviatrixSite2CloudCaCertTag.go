// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aviatrix

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The **aviatrix_site2cloud_ca_cert_tag** resource creates and manages Aviatrix-created Site2Cloud CA Cert Tags.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"io/ioutil"
//
//	"github.com/astipkovits/pulumi-aviatrix/sdk/go/aviatrix"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func readFileOrPanic(path string) pulumi.StringPtrInput {
//		data, err := ioutil.ReadFile(path)
//		if err != nil {
//			panic(err.Error())
//		}
//		return pulumi.String(string(data))
//	}
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := aviatrix.NewAviatrixSite2CloudCaCertTag(ctx, "test", &aviatrix.AviatrixSite2CloudCaCertTagArgs{
//				TagName: pulumi.String("test"),
//				CaCertificates: AviatrixSite2CloudCaCertTagCaCertificateArray{
//					&AviatrixSite2CloudCaCertTagCaCertificateArgs{
//						CertContent: readFileOrPanic("/home/ubuntu/avx_gw_ca_cert_in_ui_root_only.crt"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ```go
// package main
//
// import (
//
//	"io/ioutil"
//
//	"github.com/astipkovits/pulumi-aviatrix/sdk/go/aviatrix"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func readFileOrPanic(path string) pulumi.StringPtrInput {
//		data, err := ioutil.ReadFile(path)
//		if err != nil {
//			panic(err.Error())
//		}
//		return pulumi.String(string(data))
//	}
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := aviatrix.NewAviatrixSite2CloudCaCertTag(ctx, "test", &aviatrix.AviatrixSite2CloudCaCertTagArgs{
//				TagName: pulumi.String("test"),
//				CaCertificates: AviatrixSite2CloudCaCertTagCaCertificateArray{
//					&AviatrixSite2CloudCaCertTagCaCertificateArgs{
//						CertContent: readFileOrPanic("/home/ubuntu/avx_gw_ca_cert_root.crt"),
//					},
//					&AviatrixSite2CloudCaCertTagCaCertificateArgs{
//						CertContent: readFileOrPanic("/home/ubuntu/avx_gw_ca_cert_intermediate.crt"),
//					},
//					&AviatrixSite2CloudCaCertTagCaCertificateArgs{
//						CertContent: readFileOrPanic("/home/ubuntu/avx_gw_ca_cert_intermediate2.crt"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// **site2cloud_ca_cert_tag** can be imported using the `tag_name` and, e.g.
//
// ```sh
//
//	$ pulumi import aviatrix:index/aviatrixSite2CloudCaCertTag:AviatrixSite2CloudCaCertTag test tag_name
//
// ```
type AviatrixSite2CloudCaCertTag struct {
	pulumi.CustomResourceState

	// A set of CA certificates.
	CaCertificates AviatrixSite2CloudCaCertTagCaCertificateArrayOutput `pulumi:"caCertificates"`
	// Site2Cloud ca cert tag name.
	TagName pulumi.StringOutput `pulumi:"tagName"`
}

// NewAviatrixSite2CloudCaCertTag registers a new resource with the given unique name, arguments, and options.
func NewAviatrixSite2CloudCaCertTag(ctx *pulumi.Context,
	name string, args *AviatrixSite2CloudCaCertTagArgs, opts ...pulumi.ResourceOption) (*AviatrixSite2CloudCaCertTag, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CaCertificates == nil {
		return nil, errors.New("invalid value for required argument 'CaCertificates'")
	}
	if args.TagName == nil {
		return nil, errors.New("invalid value for required argument 'TagName'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource AviatrixSite2CloudCaCertTag
	err := ctx.RegisterResource("aviatrix:index/aviatrixSite2CloudCaCertTag:AviatrixSite2CloudCaCertTag", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAviatrixSite2CloudCaCertTag gets an existing AviatrixSite2CloudCaCertTag resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAviatrixSite2CloudCaCertTag(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AviatrixSite2CloudCaCertTagState, opts ...pulumi.ResourceOption) (*AviatrixSite2CloudCaCertTag, error) {
	var resource AviatrixSite2CloudCaCertTag
	err := ctx.ReadResource("aviatrix:index/aviatrixSite2CloudCaCertTag:AviatrixSite2CloudCaCertTag", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AviatrixSite2CloudCaCertTag resources.
type aviatrixSite2CloudCaCertTagState struct {
	// A set of CA certificates.
	CaCertificates []AviatrixSite2CloudCaCertTagCaCertificate `pulumi:"caCertificates"`
	// Site2Cloud ca cert tag name.
	TagName *string `pulumi:"tagName"`
}

type AviatrixSite2CloudCaCertTagState struct {
	// A set of CA certificates.
	CaCertificates AviatrixSite2CloudCaCertTagCaCertificateArrayInput
	// Site2Cloud ca cert tag name.
	TagName pulumi.StringPtrInput
}

func (AviatrixSite2CloudCaCertTagState) ElementType() reflect.Type {
	return reflect.TypeOf((*aviatrixSite2CloudCaCertTagState)(nil)).Elem()
}

type aviatrixSite2CloudCaCertTagArgs struct {
	// A set of CA certificates.
	CaCertificates []AviatrixSite2CloudCaCertTagCaCertificate `pulumi:"caCertificates"`
	// Site2Cloud ca cert tag name.
	TagName string `pulumi:"tagName"`
}

// The set of arguments for constructing a AviatrixSite2CloudCaCertTag resource.
type AviatrixSite2CloudCaCertTagArgs struct {
	// A set of CA certificates.
	CaCertificates AviatrixSite2CloudCaCertTagCaCertificateArrayInput
	// Site2Cloud ca cert tag name.
	TagName pulumi.StringInput
}

func (AviatrixSite2CloudCaCertTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*aviatrixSite2CloudCaCertTagArgs)(nil)).Elem()
}

type AviatrixSite2CloudCaCertTagInput interface {
	pulumi.Input

	ToAviatrixSite2CloudCaCertTagOutput() AviatrixSite2CloudCaCertTagOutput
	ToAviatrixSite2CloudCaCertTagOutputWithContext(ctx context.Context) AviatrixSite2CloudCaCertTagOutput
}

func (*AviatrixSite2CloudCaCertTag) ElementType() reflect.Type {
	return reflect.TypeOf((**AviatrixSite2CloudCaCertTag)(nil)).Elem()
}

func (i *AviatrixSite2CloudCaCertTag) ToAviatrixSite2CloudCaCertTagOutput() AviatrixSite2CloudCaCertTagOutput {
	return i.ToAviatrixSite2CloudCaCertTagOutputWithContext(context.Background())
}

func (i *AviatrixSite2CloudCaCertTag) ToAviatrixSite2CloudCaCertTagOutputWithContext(ctx context.Context) AviatrixSite2CloudCaCertTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixSite2CloudCaCertTagOutput)
}

// AviatrixSite2CloudCaCertTagArrayInput is an input type that accepts AviatrixSite2CloudCaCertTagArray and AviatrixSite2CloudCaCertTagArrayOutput values.
// You can construct a concrete instance of `AviatrixSite2CloudCaCertTagArrayInput` via:
//
//	AviatrixSite2CloudCaCertTagArray{ AviatrixSite2CloudCaCertTagArgs{...} }
type AviatrixSite2CloudCaCertTagArrayInput interface {
	pulumi.Input

	ToAviatrixSite2CloudCaCertTagArrayOutput() AviatrixSite2CloudCaCertTagArrayOutput
	ToAviatrixSite2CloudCaCertTagArrayOutputWithContext(context.Context) AviatrixSite2CloudCaCertTagArrayOutput
}

type AviatrixSite2CloudCaCertTagArray []AviatrixSite2CloudCaCertTagInput

func (AviatrixSite2CloudCaCertTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AviatrixSite2CloudCaCertTag)(nil)).Elem()
}

func (i AviatrixSite2CloudCaCertTagArray) ToAviatrixSite2CloudCaCertTagArrayOutput() AviatrixSite2CloudCaCertTagArrayOutput {
	return i.ToAviatrixSite2CloudCaCertTagArrayOutputWithContext(context.Background())
}

func (i AviatrixSite2CloudCaCertTagArray) ToAviatrixSite2CloudCaCertTagArrayOutputWithContext(ctx context.Context) AviatrixSite2CloudCaCertTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixSite2CloudCaCertTagArrayOutput)
}

// AviatrixSite2CloudCaCertTagMapInput is an input type that accepts AviatrixSite2CloudCaCertTagMap and AviatrixSite2CloudCaCertTagMapOutput values.
// You can construct a concrete instance of `AviatrixSite2CloudCaCertTagMapInput` via:
//
//	AviatrixSite2CloudCaCertTagMap{ "key": AviatrixSite2CloudCaCertTagArgs{...} }
type AviatrixSite2CloudCaCertTagMapInput interface {
	pulumi.Input

	ToAviatrixSite2CloudCaCertTagMapOutput() AviatrixSite2CloudCaCertTagMapOutput
	ToAviatrixSite2CloudCaCertTagMapOutputWithContext(context.Context) AviatrixSite2CloudCaCertTagMapOutput
}

type AviatrixSite2CloudCaCertTagMap map[string]AviatrixSite2CloudCaCertTagInput

func (AviatrixSite2CloudCaCertTagMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AviatrixSite2CloudCaCertTag)(nil)).Elem()
}

func (i AviatrixSite2CloudCaCertTagMap) ToAviatrixSite2CloudCaCertTagMapOutput() AviatrixSite2CloudCaCertTagMapOutput {
	return i.ToAviatrixSite2CloudCaCertTagMapOutputWithContext(context.Background())
}

func (i AviatrixSite2CloudCaCertTagMap) ToAviatrixSite2CloudCaCertTagMapOutputWithContext(ctx context.Context) AviatrixSite2CloudCaCertTagMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixSite2CloudCaCertTagMapOutput)
}

type AviatrixSite2CloudCaCertTagOutput struct{ *pulumi.OutputState }

func (AviatrixSite2CloudCaCertTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AviatrixSite2CloudCaCertTag)(nil)).Elem()
}

func (o AviatrixSite2CloudCaCertTagOutput) ToAviatrixSite2CloudCaCertTagOutput() AviatrixSite2CloudCaCertTagOutput {
	return o
}

func (o AviatrixSite2CloudCaCertTagOutput) ToAviatrixSite2CloudCaCertTagOutputWithContext(ctx context.Context) AviatrixSite2CloudCaCertTagOutput {
	return o
}

// A set of CA certificates.
func (o AviatrixSite2CloudCaCertTagOutput) CaCertificates() AviatrixSite2CloudCaCertTagCaCertificateArrayOutput {
	return o.ApplyT(func(v *AviatrixSite2CloudCaCertTag) AviatrixSite2CloudCaCertTagCaCertificateArrayOutput {
		return v.CaCertificates
	}).(AviatrixSite2CloudCaCertTagCaCertificateArrayOutput)
}

// Site2Cloud ca cert tag name.
func (o AviatrixSite2CloudCaCertTagOutput) TagName() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixSite2CloudCaCertTag) pulumi.StringOutput { return v.TagName }).(pulumi.StringOutput)
}

type AviatrixSite2CloudCaCertTagArrayOutput struct{ *pulumi.OutputState }

func (AviatrixSite2CloudCaCertTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AviatrixSite2CloudCaCertTag)(nil)).Elem()
}

func (o AviatrixSite2CloudCaCertTagArrayOutput) ToAviatrixSite2CloudCaCertTagArrayOutput() AviatrixSite2CloudCaCertTagArrayOutput {
	return o
}

func (o AviatrixSite2CloudCaCertTagArrayOutput) ToAviatrixSite2CloudCaCertTagArrayOutputWithContext(ctx context.Context) AviatrixSite2CloudCaCertTagArrayOutput {
	return o
}

func (o AviatrixSite2CloudCaCertTagArrayOutput) Index(i pulumi.IntInput) AviatrixSite2CloudCaCertTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AviatrixSite2CloudCaCertTag {
		return vs[0].([]*AviatrixSite2CloudCaCertTag)[vs[1].(int)]
	}).(AviatrixSite2CloudCaCertTagOutput)
}

type AviatrixSite2CloudCaCertTagMapOutput struct{ *pulumi.OutputState }

func (AviatrixSite2CloudCaCertTagMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AviatrixSite2CloudCaCertTag)(nil)).Elem()
}

func (o AviatrixSite2CloudCaCertTagMapOutput) ToAviatrixSite2CloudCaCertTagMapOutput() AviatrixSite2CloudCaCertTagMapOutput {
	return o
}

func (o AviatrixSite2CloudCaCertTagMapOutput) ToAviatrixSite2CloudCaCertTagMapOutputWithContext(ctx context.Context) AviatrixSite2CloudCaCertTagMapOutput {
	return o
}

func (o AviatrixSite2CloudCaCertTagMapOutput) MapIndex(k pulumi.StringInput) AviatrixSite2CloudCaCertTagOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AviatrixSite2CloudCaCertTag {
		return vs[0].(map[string]*AviatrixSite2CloudCaCertTag)[vs[1].(string)]
	}).(AviatrixSite2CloudCaCertTagOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixSite2CloudCaCertTagInput)(nil)).Elem(), &AviatrixSite2CloudCaCertTag{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixSite2CloudCaCertTagArrayInput)(nil)).Elem(), AviatrixSite2CloudCaCertTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixSite2CloudCaCertTagMapInput)(nil)).Elem(), AviatrixSite2CloudCaCertTagMap{})
	pulumi.RegisterOutputType(AviatrixSite2CloudCaCertTagOutput{})
	pulumi.RegisterOutputType(AviatrixSite2CloudCaCertTagArrayOutput{})
	pulumi.RegisterOutputType(AviatrixSite2CloudCaCertTagMapOutput{})
}
