// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";

export interface AviatrixAppDomainSelector {
    matchExpressions: pulumi.Input<pulumi.Input<inputs.AviatrixAppDomainSelectorMatchExpression>[]>;
}

export interface AviatrixAppDomainSelectorMatchExpression {
    accountId?: pulumi.Input<string>;
    accountName?: pulumi.Input<string>;
    cidr?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    resId?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    type?: pulumi.Input<string>;
    zone?: pulumi.Input<string>;
}

export interface AviatrixAwsTgwSecurityDomain {
    /**
     * @deprecated Please set `manage_vpc_attachment` to false, and use the standalone aviatrix_aws_tgw_vpc_attachment resource instead.
     */
    attachedVpcs?: pulumi.Input<pulumi.Input<inputs.AviatrixAwsTgwSecurityDomainAttachedVpc>[]>;
    aviatrixFirewall?: pulumi.Input<boolean>;
    connectedDomains?: pulumi.Input<pulumi.Input<string>[]>;
    nativeEgress?: pulumi.Input<boolean>;
    nativeFirewall?: pulumi.Input<boolean>;
    securityDomainName: pulumi.Input<string>;
}

export interface AviatrixAwsTgwSecurityDomainAttachedVpc {
    customizedRouteAdvertisement?: pulumi.Input<string>;
    customizedRoutes?: pulumi.Input<string>;
    disableLocalRoutePropagation?: pulumi.Input<boolean>;
    routeTables?: pulumi.Input<string>;
    subnets?: pulumi.Input<string>;
    vpcAccountName: pulumi.Input<string>;
    vpcId: pulumi.Input<string>;
    vpcRegion: pulumi.Input<string>;
}

export interface AviatrixAwsTgwVpnConnVpnTunnelData {
    lastStatusChangeTime?: pulumi.Input<string>;
    routeCount?: pulumi.Input<number>;
    status?: pulumi.Input<string>;
    statusMessage?: pulumi.Input<string>;
    tgwAsn?: pulumi.Input<string>;
    tunnelName?: pulumi.Input<string>;
    vpnInsideAddress?: pulumi.Input<string>;
    vpnOutsideAddress?: pulumi.Input<string>;
}

export interface AviatrixVpcPrivateSubnet {
    cidr?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    subnetId?: pulumi.Input<string>;
}

export interface AviatrixVpcPublicSubnet {
    cidr?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    subnetId?: pulumi.Input<string>;
}

export interface AviatrixVpcSubnet {
    cidr?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    subnetId?: pulumi.Input<string>;
}

export interface ProviderIgnoreTags {
    keyPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
    keys?: pulumi.Input<pulumi.Input<string>[]>;
}
export namespace config {
}
