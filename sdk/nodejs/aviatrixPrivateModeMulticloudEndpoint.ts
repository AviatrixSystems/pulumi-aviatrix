// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The **aviatrix_private_mode_multicloud_endpoint** resource allows management of a Private Mode multicloud endpoint. This resource is available as of provider version R2.23+.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aviatrix from "@pulumi/aviatrix";
 *
 * // Create an Aviatrix Controller Private Mode config
 * const test = new aviatrix.AviatrixPrivateModeMulticloudEndpoint("test", {
 *     accountName: "devops",
 *     controllerLbVpcId: "vpc-abcdefg",
 *     region: "us-east-1",
 *     vpcId: "vpc-abcdef",
 * });
 * ```
 *
 * ## Import
 *
 * **aviatrix_private_mode_multicloud_endpoint** can be imported using the `vpc_id`, e.g.
 *
 * ```sh
 *  $ pulumi import aviatrix:index/aviatrixPrivateModeMulticloudEndpoint:AviatrixPrivateModeMulticloudEndpoint test vpc-1234567
 * ```
 */
export class AviatrixPrivateModeMulticloudEndpoint extends pulumi.CustomResource {
    /**
     * Get an existing AviatrixPrivateModeMulticloudEndpoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AviatrixPrivateModeMulticloudEndpointState, opts?: pulumi.CustomResourceOptions): AviatrixPrivateModeMulticloudEndpoint {
        return new AviatrixPrivateModeMulticloudEndpoint(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aviatrix:index/aviatrixPrivateModeMulticloudEndpoint:AviatrixPrivateModeMulticloudEndpoint';

    /**
     * Returns true if the given object is an instance of AviatrixPrivateModeMulticloudEndpoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AviatrixPrivateModeMulticloudEndpoint {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AviatrixPrivateModeMulticloudEndpoint.__pulumiType;
    }

    /**
     * Name of the access account.
     */
    public readonly accountName!: pulumi.Output<string>;
    /**
     * ID of the VPC containing a Private Mode controller load balancer.
     */
    public readonly controllerLbVpcId!: pulumi.Output<string>;
    /**
     * DNS entry of the endpoint.
     */
    public /*out*/ readonly dnsEntry!: pulumi.Output<string>;
    /**
     * Region of the VPC.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * ID of the VPC to create the endpoint in.
     */
    public readonly vpcId!: pulumi.Output<string>;

    /**
     * Create a AviatrixPrivateModeMulticloudEndpoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AviatrixPrivateModeMulticloudEndpointArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AviatrixPrivateModeMulticloudEndpointArgs | AviatrixPrivateModeMulticloudEndpointState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AviatrixPrivateModeMulticloudEndpointState | undefined;
            resourceInputs["accountName"] = state ? state.accountName : undefined;
            resourceInputs["controllerLbVpcId"] = state ? state.controllerLbVpcId : undefined;
            resourceInputs["dnsEntry"] = state ? state.dnsEntry : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
        } else {
            const args = argsOrState as AviatrixPrivateModeMulticloudEndpointArgs | undefined;
            if ((!args || args.accountName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountName'");
            }
            if ((!args || args.controllerLbVpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'controllerLbVpcId'");
            }
            if ((!args || args.region === undefined) && !opts.urn) {
                throw new Error("Missing required property 'region'");
            }
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["accountName"] = args ? args.accountName : undefined;
            resourceInputs["controllerLbVpcId"] = args ? args.controllerLbVpcId : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["dnsEntry"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AviatrixPrivateModeMulticloudEndpoint.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AviatrixPrivateModeMulticloudEndpoint resources.
 */
export interface AviatrixPrivateModeMulticloudEndpointState {
    /**
     * Name of the access account.
     */
    accountName?: pulumi.Input<string>;
    /**
     * ID of the VPC containing a Private Mode controller load balancer.
     */
    controllerLbVpcId?: pulumi.Input<string>;
    /**
     * DNS entry of the endpoint.
     */
    dnsEntry?: pulumi.Input<string>;
    /**
     * Region of the VPC.
     */
    region?: pulumi.Input<string>;
    /**
     * ID of the VPC to create the endpoint in.
     */
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AviatrixPrivateModeMulticloudEndpoint resource.
 */
export interface AviatrixPrivateModeMulticloudEndpointArgs {
    /**
     * Name of the access account.
     */
    accountName: pulumi.Input<string>;
    /**
     * ID of the VPC containing a Private Mode controller load balancer.
     */
    controllerLbVpcId: pulumi.Input<string>;
    /**
     * Region of the VPC.
     */
    region: pulumi.Input<string>;
    /**
     * ID of the VPC to create the endpoint in.
     */
    vpcId: pulumi.Input<string>;
}
