// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aviatrix

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The **aviatrix_segmentation_security_domain_connection_policy** resource handles creation of [Transit Segmentation](https://docs.aviatrix.com/HowTos/transit_segmentation_faq.html) Security Domain Connection Policies.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/astipkovits/pulumi-aviatrix/sdk/go/aviatrix"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := aviatrix.NewAviatrixSegmentationSecurityDomainConnectionPolicy(ctx, "testSegmentationSecurityDomainConnectionPolicy", &aviatrix.AviatrixSegmentationSecurityDomainConnectionPolicyArgs{
//				DomainName1: pulumi.String("domain-a"),
//				DomainName2: pulumi.String("domain-b"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// **aviatrix_segmentation_security_domain_connection_policy** can be imported using `domain_name_1` and `domain_name_2` separated by a `~`, e.g.
//
// ```sh
//
//	$ pulumi import aviatrix:index/aviatrixSegmentationSecurityDomainConnectionPolicy:AviatrixSegmentationSecurityDomainConnectionPolicy test domain_name_1~domain_name_2
//
// ```
type AviatrixSegmentationSecurityDomainConnectionPolicy struct {
	pulumi.CustomResourceState

	// Name of the Security Domain to connect to Domain 2.
	DomainName1 pulumi.StringOutput `pulumi:"domainName1"`
	// Name of the Security Domain to connect to Domain 1.
	DomainName2 pulumi.StringOutput `pulumi:"domainName2"`
}

// NewAviatrixSegmentationSecurityDomainConnectionPolicy registers a new resource with the given unique name, arguments, and options.
func NewAviatrixSegmentationSecurityDomainConnectionPolicy(ctx *pulumi.Context,
	name string, args *AviatrixSegmentationSecurityDomainConnectionPolicyArgs, opts ...pulumi.ResourceOption) (*AviatrixSegmentationSecurityDomainConnectionPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DomainName1 == nil {
		return nil, errors.New("invalid value for required argument 'DomainName1'")
	}
	if args.DomainName2 == nil {
		return nil, errors.New("invalid value for required argument 'DomainName2'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource AviatrixSegmentationSecurityDomainConnectionPolicy
	err := ctx.RegisterResource("aviatrix:index/aviatrixSegmentationSecurityDomainConnectionPolicy:AviatrixSegmentationSecurityDomainConnectionPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAviatrixSegmentationSecurityDomainConnectionPolicy gets an existing AviatrixSegmentationSecurityDomainConnectionPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAviatrixSegmentationSecurityDomainConnectionPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AviatrixSegmentationSecurityDomainConnectionPolicyState, opts ...pulumi.ResourceOption) (*AviatrixSegmentationSecurityDomainConnectionPolicy, error) {
	var resource AviatrixSegmentationSecurityDomainConnectionPolicy
	err := ctx.ReadResource("aviatrix:index/aviatrixSegmentationSecurityDomainConnectionPolicy:AviatrixSegmentationSecurityDomainConnectionPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AviatrixSegmentationSecurityDomainConnectionPolicy resources.
type aviatrixSegmentationSecurityDomainConnectionPolicyState struct {
	// Name of the Security Domain to connect to Domain 2.
	DomainName1 *string `pulumi:"domainName1"`
	// Name of the Security Domain to connect to Domain 1.
	DomainName2 *string `pulumi:"domainName2"`
}

type AviatrixSegmentationSecurityDomainConnectionPolicyState struct {
	// Name of the Security Domain to connect to Domain 2.
	DomainName1 pulumi.StringPtrInput
	// Name of the Security Domain to connect to Domain 1.
	DomainName2 pulumi.StringPtrInput
}

func (AviatrixSegmentationSecurityDomainConnectionPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*aviatrixSegmentationSecurityDomainConnectionPolicyState)(nil)).Elem()
}

type aviatrixSegmentationSecurityDomainConnectionPolicyArgs struct {
	// Name of the Security Domain to connect to Domain 2.
	DomainName1 string `pulumi:"domainName1"`
	// Name of the Security Domain to connect to Domain 1.
	DomainName2 string `pulumi:"domainName2"`
}

// The set of arguments for constructing a AviatrixSegmentationSecurityDomainConnectionPolicy resource.
type AviatrixSegmentationSecurityDomainConnectionPolicyArgs struct {
	// Name of the Security Domain to connect to Domain 2.
	DomainName1 pulumi.StringInput
	// Name of the Security Domain to connect to Domain 1.
	DomainName2 pulumi.StringInput
}

func (AviatrixSegmentationSecurityDomainConnectionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*aviatrixSegmentationSecurityDomainConnectionPolicyArgs)(nil)).Elem()
}

type AviatrixSegmentationSecurityDomainConnectionPolicyInput interface {
	pulumi.Input

	ToAviatrixSegmentationSecurityDomainConnectionPolicyOutput() AviatrixSegmentationSecurityDomainConnectionPolicyOutput
	ToAviatrixSegmentationSecurityDomainConnectionPolicyOutputWithContext(ctx context.Context) AviatrixSegmentationSecurityDomainConnectionPolicyOutput
}

func (*AviatrixSegmentationSecurityDomainConnectionPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**AviatrixSegmentationSecurityDomainConnectionPolicy)(nil)).Elem()
}

func (i *AviatrixSegmentationSecurityDomainConnectionPolicy) ToAviatrixSegmentationSecurityDomainConnectionPolicyOutput() AviatrixSegmentationSecurityDomainConnectionPolicyOutput {
	return i.ToAviatrixSegmentationSecurityDomainConnectionPolicyOutputWithContext(context.Background())
}

func (i *AviatrixSegmentationSecurityDomainConnectionPolicy) ToAviatrixSegmentationSecurityDomainConnectionPolicyOutputWithContext(ctx context.Context) AviatrixSegmentationSecurityDomainConnectionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixSegmentationSecurityDomainConnectionPolicyOutput)
}

// AviatrixSegmentationSecurityDomainConnectionPolicyArrayInput is an input type that accepts AviatrixSegmentationSecurityDomainConnectionPolicyArray and AviatrixSegmentationSecurityDomainConnectionPolicyArrayOutput values.
// You can construct a concrete instance of `AviatrixSegmentationSecurityDomainConnectionPolicyArrayInput` via:
//
//	AviatrixSegmentationSecurityDomainConnectionPolicyArray{ AviatrixSegmentationSecurityDomainConnectionPolicyArgs{...} }
type AviatrixSegmentationSecurityDomainConnectionPolicyArrayInput interface {
	pulumi.Input

	ToAviatrixSegmentationSecurityDomainConnectionPolicyArrayOutput() AviatrixSegmentationSecurityDomainConnectionPolicyArrayOutput
	ToAviatrixSegmentationSecurityDomainConnectionPolicyArrayOutputWithContext(context.Context) AviatrixSegmentationSecurityDomainConnectionPolicyArrayOutput
}

type AviatrixSegmentationSecurityDomainConnectionPolicyArray []AviatrixSegmentationSecurityDomainConnectionPolicyInput

func (AviatrixSegmentationSecurityDomainConnectionPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AviatrixSegmentationSecurityDomainConnectionPolicy)(nil)).Elem()
}

func (i AviatrixSegmentationSecurityDomainConnectionPolicyArray) ToAviatrixSegmentationSecurityDomainConnectionPolicyArrayOutput() AviatrixSegmentationSecurityDomainConnectionPolicyArrayOutput {
	return i.ToAviatrixSegmentationSecurityDomainConnectionPolicyArrayOutputWithContext(context.Background())
}

func (i AviatrixSegmentationSecurityDomainConnectionPolicyArray) ToAviatrixSegmentationSecurityDomainConnectionPolicyArrayOutputWithContext(ctx context.Context) AviatrixSegmentationSecurityDomainConnectionPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixSegmentationSecurityDomainConnectionPolicyArrayOutput)
}

// AviatrixSegmentationSecurityDomainConnectionPolicyMapInput is an input type that accepts AviatrixSegmentationSecurityDomainConnectionPolicyMap and AviatrixSegmentationSecurityDomainConnectionPolicyMapOutput values.
// You can construct a concrete instance of `AviatrixSegmentationSecurityDomainConnectionPolicyMapInput` via:
//
//	AviatrixSegmentationSecurityDomainConnectionPolicyMap{ "key": AviatrixSegmentationSecurityDomainConnectionPolicyArgs{...} }
type AviatrixSegmentationSecurityDomainConnectionPolicyMapInput interface {
	pulumi.Input

	ToAviatrixSegmentationSecurityDomainConnectionPolicyMapOutput() AviatrixSegmentationSecurityDomainConnectionPolicyMapOutput
	ToAviatrixSegmentationSecurityDomainConnectionPolicyMapOutputWithContext(context.Context) AviatrixSegmentationSecurityDomainConnectionPolicyMapOutput
}

type AviatrixSegmentationSecurityDomainConnectionPolicyMap map[string]AviatrixSegmentationSecurityDomainConnectionPolicyInput

func (AviatrixSegmentationSecurityDomainConnectionPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AviatrixSegmentationSecurityDomainConnectionPolicy)(nil)).Elem()
}

func (i AviatrixSegmentationSecurityDomainConnectionPolicyMap) ToAviatrixSegmentationSecurityDomainConnectionPolicyMapOutput() AviatrixSegmentationSecurityDomainConnectionPolicyMapOutput {
	return i.ToAviatrixSegmentationSecurityDomainConnectionPolicyMapOutputWithContext(context.Background())
}

func (i AviatrixSegmentationSecurityDomainConnectionPolicyMap) ToAviatrixSegmentationSecurityDomainConnectionPolicyMapOutputWithContext(ctx context.Context) AviatrixSegmentationSecurityDomainConnectionPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixSegmentationSecurityDomainConnectionPolicyMapOutput)
}

type AviatrixSegmentationSecurityDomainConnectionPolicyOutput struct{ *pulumi.OutputState }

func (AviatrixSegmentationSecurityDomainConnectionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AviatrixSegmentationSecurityDomainConnectionPolicy)(nil)).Elem()
}

func (o AviatrixSegmentationSecurityDomainConnectionPolicyOutput) ToAviatrixSegmentationSecurityDomainConnectionPolicyOutput() AviatrixSegmentationSecurityDomainConnectionPolicyOutput {
	return o
}

func (o AviatrixSegmentationSecurityDomainConnectionPolicyOutput) ToAviatrixSegmentationSecurityDomainConnectionPolicyOutputWithContext(ctx context.Context) AviatrixSegmentationSecurityDomainConnectionPolicyOutput {
	return o
}

// Name of the Security Domain to connect to Domain 2.
func (o AviatrixSegmentationSecurityDomainConnectionPolicyOutput) DomainName1() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixSegmentationSecurityDomainConnectionPolicy) pulumi.StringOutput { return v.DomainName1 }).(pulumi.StringOutput)
}

// Name of the Security Domain to connect to Domain 1.
func (o AviatrixSegmentationSecurityDomainConnectionPolicyOutput) DomainName2() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixSegmentationSecurityDomainConnectionPolicy) pulumi.StringOutput { return v.DomainName2 }).(pulumi.StringOutput)
}

type AviatrixSegmentationSecurityDomainConnectionPolicyArrayOutput struct{ *pulumi.OutputState }

func (AviatrixSegmentationSecurityDomainConnectionPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AviatrixSegmentationSecurityDomainConnectionPolicy)(nil)).Elem()
}

func (o AviatrixSegmentationSecurityDomainConnectionPolicyArrayOutput) ToAviatrixSegmentationSecurityDomainConnectionPolicyArrayOutput() AviatrixSegmentationSecurityDomainConnectionPolicyArrayOutput {
	return o
}

func (o AviatrixSegmentationSecurityDomainConnectionPolicyArrayOutput) ToAviatrixSegmentationSecurityDomainConnectionPolicyArrayOutputWithContext(ctx context.Context) AviatrixSegmentationSecurityDomainConnectionPolicyArrayOutput {
	return o
}

func (o AviatrixSegmentationSecurityDomainConnectionPolicyArrayOutput) Index(i pulumi.IntInput) AviatrixSegmentationSecurityDomainConnectionPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AviatrixSegmentationSecurityDomainConnectionPolicy {
		return vs[0].([]*AviatrixSegmentationSecurityDomainConnectionPolicy)[vs[1].(int)]
	}).(AviatrixSegmentationSecurityDomainConnectionPolicyOutput)
}

type AviatrixSegmentationSecurityDomainConnectionPolicyMapOutput struct{ *pulumi.OutputState }

func (AviatrixSegmentationSecurityDomainConnectionPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AviatrixSegmentationSecurityDomainConnectionPolicy)(nil)).Elem()
}

func (o AviatrixSegmentationSecurityDomainConnectionPolicyMapOutput) ToAviatrixSegmentationSecurityDomainConnectionPolicyMapOutput() AviatrixSegmentationSecurityDomainConnectionPolicyMapOutput {
	return o
}

func (o AviatrixSegmentationSecurityDomainConnectionPolicyMapOutput) ToAviatrixSegmentationSecurityDomainConnectionPolicyMapOutputWithContext(ctx context.Context) AviatrixSegmentationSecurityDomainConnectionPolicyMapOutput {
	return o
}

func (o AviatrixSegmentationSecurityDomainConnectionPolicyMapOutput) MapIndex(k pulumi.StringInput) AviatrixSegmentationSecurityDomainConnectionPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AviatrixSegmentationSecurityDomainConnectionPolicy {
		return vs[0].(map[string]*AviatrixSegmentationSecurityDomainConnectionPolicy)[vs[1].(string)]
	}).(AviatrixSegmentationSecurityDomainConnectionPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixSegmentationSecurityDomainConnectionPolicyInput)(nil)).Elem(), &AviatrixSegmentationSecurityDomainConnectionPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixSegmentationSecurityDomainConnectionPolicyArrayInput)(nil)).Elem(), AviatrixSegmentationSecurityDomainConnectionPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixSegmentationSecurityDomainConnectionPolicyMapInput)(nil)).Elem(), AviatrixSegmentationSecurityDomainConnectionPolicyMap{})
	pulumi.RegisterOutputType(AviatrixSegmentationSecurityDomainConnectionPolicyOutput{})
	pulumi.RegisterOutputType(AviatrixSegmentationSecurityDomainConnectionPolicyArrayOutput{})
	pulumi.RegisterOutputType(AviatrixSegmentationSecurityDomainConnectionPolicyMapOutput{})
}
