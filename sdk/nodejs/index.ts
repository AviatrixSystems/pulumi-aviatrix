// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

// Export members:
export * from "./aviatrixAccount";
export * from "./aviatrixAccountUser";
export * from "./aviatrixAppDomain";
export * from "./aviatrixArmPeer";
export * from "./aviatrixAwsGuardDuty";
export * from "./aviatrixAwsPeer";
export * from "./aviatrixAwsTgw";
export * from "./aviatrixAwsTgwConnect";
export * from "./aviatrixAwsTgwConnectPeer";
export * from "./aviatrixAwsTgwDirectconnect";
export * from "./aviatrixAwsTgwIntraDomainInspection";
export * from "./aviatrixAwsTgwNetworkDomain";
export * from "./aviatrixAwsTgwPeering";
export * from "./aviatrixAwsTgwPeeringDomainConn";
export * from "./aviatrixAwsTgwSecurityDomain";
export * from "./aviatrixAwsTgwSecurityDomainConn";
export * from "./aviatrixAwsTgwTransitGatewayAttachment";
export * from "./aviatrixAwsTgwVpcAttachment";
export * from "./aviatrixAwsTgwVpnConn";
export * from "./aviatrixAzurePeer";
export * from "./aviatrixVpc";
export * from "./provider";

// Export sub-modules:
import * as config from "./config";
import * as types from "./types";

export {
    config,
    types,
};

// Import resources to register:
import { AviatrixAccount } from "./aviatrixAccount";
import { AviatrixAccountUser } from "./aviatrixAccountUser";
import { AviatrixAppDomain } from "./aviatrixAppDomain";
import { AviatrixArmPeer } from "./aviatrixArmPeer";
import { AviatrixAwsGuardDuty } from "./aviatrixAwsGuardDuty";
import { AviatrixAwsPeer } from "./aviatrixAwsPeer";
import { AviatrixAwsTgw } from "./aviatrixAwsTgw";
import { AviatrixAwsTgwConnect } from "./aviatrixAwsTgwConnect";
import { AviatrixAwsTgwConnectPeer } from "./aviatrixAwsTgwConnectPeer";
import { AviatrixAwsTgwDirectconnect } from "./aviatrixAwsTgwDirectconnect";
import { AviatrixAwsTgwIntraDomainInspection } from "./aviatrixAwsTgwIntraDomainInspection";
import { AviatrixAwsTgwNetworkDomain } from "./aviatrixAwsTgwNetworkDomain";
import { AviatrixAwsTgwPeering } from "./aviatrixAwsTgwPeering";
import { AviatrixAwsTgwPeeringDomainConn } from "./aviatrixAwsTgwPeeringDomainConn";
import { AviatrixAwsTgwSecurityDomain } from "./aviatrixAwsTgwSecurityDomain";
import { AviatrixAwsTgwSecurityDomainConn } from "./aviatrixAwsTgwSecurityDomainConn";
import { AviatrixAwsTgwTransitGatewayAttachment } from "./aviatrixAwsTgwTransitGatewayAttachment";
import { AviatrixAwsTgwVpcAttachment } from "./aviatrixAwsTgwVpcAttachment";
import { AviatrixAwsTgwVpnConn } from "./aviatrixAwsTgwVpnConn";
import { AviatrixAzurePeer } from "./aviatrixAzurePeer";
import { AviatrixVpc } from "./aviatrixVpc";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "aviatrix:index/aviatrixAccount:AviatrixAccount":
                return new AviatrixAccount(name, <any>undefined, { urn })
            case "aviatrix:index/aviatrixAccountUser:AviatrixAccountUser":
                return new AviatrixAccountUser(name, <any>undefined, { urn })
            case "aviatrix:index/aviatrixAppDomain:AviatrixAppDomain":
                return new AviatrixAppDomain(name, <any>undefined, { urn })
            case "aviatrix:index/aviatrixArmPeer:AviatrixArmPeer":
                return new AviatrixArmPeer(name, <any>undefined, { urn })
            case "aviatrix:index/aviatrixAwsGuardDuty:AviatrixAwsGuardDuty":
                return new AviatrixAwsGuardDuty(name, <any>undefined, { urn })
            case "aviatrix:index/aviatrixAwsPeer:AviatrixAwsPeer":
                return new AviatrixAwsPeer(name, <any>undefined, { urn })
            case "aviatrix:index/aviatrixAwsTgw:AviatrixAwsTgw":
                return new AviatrixAwsTgw(name, <any>undefined, { urn })
            case "aviatrix:index/aviatrixAwsTgwConnect:AviatrixAwsTgwConnect":
                return new AviatrixAwsTgwConnect(name, <any>undefined, { urn })
            case "aviatrix:index/aviatrixAwsTgwConnectPeer:AviatrixAwsTgwConnectPeer":
                return new AviatrixAwsTgwConnectPeer(name, <any>undefined, { urn })
            case "aviatrix:index/aviatrixAwsTgwDirectconnect:AviatrixAwsTgwDirectconnect":
                return new AviatrixAwsTgwDirectconnect(name, <any>undefined, { urn })
            case "aviatrix:index/aviatrixAwsTgwIntraDomainInspection:AviatrixAwsTgwIntraDomainInspection":
                return new AviatrixAwsTgwIntraDomainInspection(name, <any>undefined, { urn })
            case "aviatrix:index/aviatrixAwsTgwNetworkDomain:AviatrixAwsTgwNetworkDomain":
                return new AviatrixAwsTgwNetworkDomain(name, <any>undefined, { urn })
            case "aviatrix:index/aviatrixAwsTgwPeering:AviatrixAwsTgwPeering":
                return new AviatrixAwsTgwPeering(name, <any>undefined, { urn })
            case "aviatrix:index/aviatrixAwsTgwPeeringDomainConn:AviatrixAwsTgwPeeringDomainConn":
                return new AviatrixAwsTgwPeeringDomainConn(name, <any>undefined, { urn })
            case "aviatrix:index/aviatrixAwsTgwSecurityDomain:AviatrixAwsTgwSecurityDomain":
                return new AviatrixAwsTgwSecurityDomain(name, <any>undefined, { urn })
            case "aviatrix:index/aviatrixAwsTgwSecurityDomainConn:AviatrixAwsTgwSecurityDomainConn":
                return new AviatrixAwsTgwSecurityDomainConn(name, <any>undefined, { urn })
            case "aviatrix:index/aviatrixAwsTgwTransitGatewayAttachment:AviatrixAwsTgwTransitGatewayAttachment":
                return new AviatrixAwsTgwTransitGatewayAttachment(name, <any>undefined, { urn })
            case "aviatrix:index/aviatrixAwsTgwVpcAttachment:AviatrixAwsTgwVpcAttachment":
                return new AviatrixAwsTgwVpcAttachment(name, <any>undefined, { urn })
            case "aviatrix:index/aviatrixAwsTgwVpnConn:AviatrixAwsTgwVpnConn":
                return new AviatrixAwsTgwVpnConn(name, <any>undefined, { urn })
            case "aviatrix:index/aviatrixAzurePeer:AviatrixAzurePeer":
                return new AviatrixAzurePeer(name, <any>undefined, { urn })
            case "aviatrix:index/aviatrixVpc:AviatrixVpc":
                return new AviatrixVpc(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aviatrix", "index/aviatrixAccount", _module)
pulumi.runtime.registerResourceModule("aviatrix", "index/aviatrixAccountUser", _module)
pulumi.runtime.registerResourceModule("aviatrix", "index/aviatrixAppDomain", _module)
pulumi.runtime.registerResourceModule("aviatrix", "index/aviatrixArmPeer", _module)
pulumi.runtime.registerResourceModule("aviatrix", "index/aviatrixAwsGuardDuty", _module)
pulumi.runtime.registerResourceModule("aviatrix", "index/aviatrixAwsPeer", _module)
pulumi.runtime.registerResourceModule("aviatrix", "index/aviatrixAwsTgw", _module)
pulumi.runtime.registerResourceModule("aviatrix", "index/aviatrixAwsTgwConnect", _module)
pulumi.runtime.registerResourceModule("aviatrix", "index/aviatrixAwsTgwConnectPeer", _module)
pulumi.runtime.registerResourceModule("aviatrix", "index/aviatrixAwsTgwDirectconnect", _module)
pulumi.runtime.registerResourceModule("aviatrix", "index/aviatrixAwsTgwIntraDomainInspection", _module)
pulumi.runtime.registerResourceModule("aviatrix", "index/aviatrixAwsTgwNetworkDomain", _module)
pulumi.runtime.registerResourceModule("aviatrix", "index/aviatrixAwsTgwPeering", _module)
pulumi.runtime.registerResourceModule("aviatrix", "index/aviatrixAwsTgwPeeringDomainConn", _module)
pulumi.runtime.registerResourceModule("aviatrix", "index/aviatrixAwsTgwSecurityDomain", _module)
pulumi.runtime.registerResourceModule("aviatrix", "index/aviatrixAwsTgwSecurityDomainConn", _module)
pulumi.runtime.registerResourceModule("aviatrix", "index/aviatrixAwsTgwTransitGatewayAttachment", _module)
pulumi.runtime.registerResourceModule("aviatrix", "index/aviatrixAwsTgwVpcAttachment", _module)
pulumi.runtime.registerResourceModule("aviatrix", "index/aviatrixAwsTgwVpnConn", _module)
pulumi.runtime.registerResourceModule("aviatrix", "index/aviatrixAzurePeer", _module)
pulumi.runtime.registerResourceModule("aviatrix", "index/aviatrixVpc", _module)

import { Provider } from "./provider";

pulumi.runtime.registerResourcePackage("aviatrix", {
    version: utilities.getVersion(),
    constructProvider: (name: string, type: string, urn: string): pulumi.ProviderResource => {
        if (type !== "pulumi:providers:aviatrix") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new Provider(name, <any>undefined, { urn });
    },
});
