// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aviatrix

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AviatrixCopilotSecurityGroupManagementConfig struct {
	pulumi.CustomResourceState

	// Access account name.
	AccountName pulumi.StringPtrOutput `pulumi:"accountName"`
	// Cloud type.
	CloudType pulumi.IntPtrOutput `pulumi:"cloudType"`
	// Switch to enable copilot security group management.
	EnableCopilotSecurityGroupManagement pulumi.BoolOutput `pulumi:"enableCopilotSecurityGroupManagement"`
	// Copilot instance ID.
	InstanceId pulumi.StringPtrOutput `pulumi:"instanceId"`
	// Copilot region. Valid for AWS and Azure.
	Region pulumi.StringPtrOutput `pulumi:"region"`
	// VPC ID.
	VpcId pulumi.StringPtrOutput `pulumi:"vpcId"`
	// Copilot zone. Valid for GCP.
	Zone pulumi.StringPtrOutput `pulumi:"zone"`
}

// NewAviatrixCopilotSecurityGroupManagementConfig registers a new resource with the given unique name, arguments, and options.
func NewAviatrixCopilotSecurityGroupManagementConfig(ctx *pulumi.Context,
	name string, args *AviatrixCopilotSecurityGroupManagementConfigArgs, opts ...pulumi.ResourceOption) (*AviatrixCopilotSecurityGroupManagementConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EnableCopilotSecurityGroupManagement == nil {
		return nil, errors.New("invalid value for required argument 'EnableCopilotSecurityGroupManagement'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource AviatrixCopilotSecurityGroupManagementConfig
	err := ctx.RegisterResource("aviatrix:index/aviatrixCopilotSecurityGroupManagementConfig:AviatrixCopilotSecurityGroupManagementConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAviatrixCopilotSecurityGroupManagementConfig gets an existing AviatrixCopilotSecurityGroupManagementConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAviatrixCopilotSecurityGroupManagementConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AviatrixCopilotSecurityGroupManagementConfigState, opts ...pulumi.ResourceOption) (*AviatrixCopilotSecurityGroupManagementConfig, error) {
	var resource AviatrixCopilotSecurityGroupManagementConfig
	err := ctx.ReadResource("aviatrix:index/aviatrixCopilotSecurityGroupManagementConfig:AviatrixCopilotSecurityGroupManagementConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AviatrixCopilotSecurityGroupManagementConfig resources.
type aviatrixCopilotSecurityGroupManagementConfigState struct {
	// Access account name.
	AccountName *string `pulumi:"accountName"`
	// Cloud type.
	CloudType *int `pulumi:"cloudType"`
	// Switch to enable copilot security group management.
	EnableCopilotSecurityGroupManagement *bool `pulumi:"enableCopilotSecurityGroupManagement"`
	// Copilot instance ID.
	InstanceId *string `pulumi:"instanceId"`
	// Copilot region. Valid for AWS and Azure.
	Region *string `pulumi:"region"`
	// VPC ID.
	VpcId *string `pulumi:"vpcId"`
	// Copilot zone. Valid for GCP.
	Zone *string `pulumi:"zone"`
}

type AviatrixCopilotSecurityGroupManagementConfigState struct {
	// Access account name.
	AccountName pulumi.StringPtrInput
	// Cloud type.
	CloudType pulumi.IntPtrInput
	// Switch to enable copilot security group management.
	EnableCopilotSecurityGroupManagement pulumi.BoolPtrInput
	// Copilot instance ID.
	InstanceId pulumi.StringPtrInput
	// Copilot region. Valid for AWS and Azure.
	Region pulumi.StringPtrInput
	// VPC ID.
	VpcId pulumi.StringPtrInput
	// Copilot zone. Valid for GCP.
	Zone pulumi.StringPtrInput
}

func (AviatrixCopilotSecurityGroupManagementConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*aviatrixCopilotSecurityGroupManagementConfigState)(nil)).Elem()
}

type aviatrixCopilotSecurityGroupManagementConfigArgs struct {
	// Access account name.
	AccountName *string `pulumi:"accountName"`
	// Cloud type.
	CloudType *int `pulumi:"cloudType"`
	// Switch to enable copilot security group management.
	EnableCopilotSecurityGroupManagement bool `pulumi:"enableCopilotSecurityGroupManagement"`
	// Copilot instance ID.
	InstanceId *string `pulumi:"instanceId"`
	// Copilot region. Valid for AWS and Azure.
	Region *string `pulumi:"region"`
	// VPC ID.
	VpcId *string `pulumi:"vpcId"`
	// Copilot zone. Valid for GCP.
	Zone *string `pulumi:"zone"`
}

// The set of arguments for constructing a AviatrixCopilotSecurityGroupManagementConfig resource.
type AviatrixCopilotSecurityGroupManagementConfigArgs struct {
	// Access account name.
	AccountName pulumi.StringPtrInput
	// Cloud type.
	CloudType pulumi.IntPtrInput
	// Switch to enable copilot security group management.
	EnableCopilotSecurityGroupManagement pulumi.BoolInput
	// Copilot instance ID.
	InstanceId pulumi.StringPtrInput
	// Copilot region. Valid for AWS and Azure.
	Region pulumi.StringPtrInput
	// VPC ID.
	VpcId pulumi.StringPtrInput
	// Copilot zone. Valid for GCP.
	Zone pulumi.StringPtrInput
}

func (AviatrixCopilotSecurityGroupManagementConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*aviatrixCopilotSecurityGroupManagementConfigArgs)(nil)).Elem()
}

type AviatrixCopilotSecurityGroupManagementConfigInput interface {
	pulumi.Input

	ToAviatrixCopilotSecurityGroupManagementConfigOutput() AviatrixCopilotSecurityGroupManagementConfigOutput
	ToAviatrixCopilotSecurityGroupManagementConfigOutputWithContext(ctx context.Context) AviatrixCopilotSecurityGroupManagementConfigOutput
}

func (*AviatrixCopilotSecurityGroupManagementConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**AviatrixCopilotSecurityGroupManagementConfig)(nil)).Elem()
}

func (i *AviatrixCopilotSecurityGroupManagementConfig) ToAviatrixCopilotSecurityGroupManagementConfigOutput() AviatrixCopilotSecurityGroupManagementConfigOutput {
	return i.ToAviatrixCopilotSecurityGroupManagementConfigOutputWithContext(context.Background())
}

func (i *AviatrixCopilotSecurityGroupManagementConfig) ToAviatrixCopilotSecurityGroupManagementConfigOutputWithContext(ctx context.Context) AviatrixCopilotSecurityGroupManagementConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixCopilotSecurityGroupManagementConfigOutput)
}

// AviatrixCopilotSecurityGroupManagementConfigArrayInput is an input type that accepts AviatrixCopilotSecurityGroupManagementConfigArray and AviatrixCopilotSecurityGroupManagementConfigArrayOutput values.
// You can construct a concrete instance of `AviatrixCopilotSecurityGroupManagementConfigArrayInput` via:
//
//	AviatrixCopilotSecurityGroupManagementConfigArray{ AviatrixCopilotSecurityGroupManagementConfigArgs{...} }
type AviatrixCopilotSecurityGroupManagementConfigArrayInput interface {
	pulumi.Input

	ToAviatrixCopilotSecurityGroupManagementConfigArrayOutput() AviatrixCopilotSecurityGroupManagementConfigArrayOutput
	ToAviatrixCopilotSecurityGroupManagementConfigArrayOutputWithContext(context.Context) AviatrixCopilotSecurityGroupManagementConfigArrayOutput
}

type AviatrixCopilotSecurityGroupManagementConfigArray []AviatrixCopilotSecurityGroupManagementConfigInput

func (AviatrixCopilotSecurityGroupManagementConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AviatrixCopilotSecurityGroupManagementConfig)(nil)).Elem()
}

func (i AviatrixCopilotSecurityGroupManagementConfigArray) ToAviatrixCopilotSecurityGroupManagementConfigArrayOutput() AviatrixCopilotSecurityGroupManagementConfigArrayOutput {
	return i.ToAviatrixCopilotSecurityGroupManagementConfigArrayOutputWithContext(context.Background())
}

func (i AviatrixCopilotSecurityGroupManagementConfigArray) ToAviatrixCopilotSecurityGroupManagementConfigArrayOutputWithContext(ctx context.Context) AviatrixCopilotSecurityGroupManagementConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixCopilotSecurityGroupManagementConfigArrayOutput)
}

// AviatrixCopilotSecurityGroupManagementConfigMapInput is an input type that accepts AviatrixCopilotSecurityGroupManagementConfigMap and AviatrixCopilotSecurityGroupManagementConfigMapOutput values.
// You can construct a concrete instance of `AviatrixCopilotSecurityGroupManagementConfigMapInput` via:
//
//	AviatrixCopilotSecurityGroupManagementConfigMap{ "key": AviatrixCopilotSecurityGroupManagementConfigArgs{...} }
type AviatrixCopilotSecurityGroupManagementConfigMapInput interface {
	pulumi.Input

	ToAviatrixCopilotSecurityGroupManagementConfigMapOutput() AviatrixCopilotSecurityGroupManagementConfigMapOutput
	ToAviatrixCopilotSecurityGroupManagementConfigMapOutputWithContext(context.Context) AviatrixCopilotSecurityGroupManagementConfigMapOutput
}

type AviatrixCopilotSecurityGroupManagementConfigMap map[string]AviatrixCopilotSecurityGroupManagementConfigInput

func (AviatrixCopilotSecurityGroupManagementConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AviatrixCopilotSecurityGroupManagementConfig)(nil)).Elem()
}

func (i AviatrixCopilotSecurityGroupManagementConfigMap) ToAviatrixCopilotSecurityGroupManagementConfigMapOutput() AviatrixCopilotSecurityGroupManagementConfigMapOutput {
	return i.ToAviatrixCopilotSecurityGroupManagementConfigMapOutputWithContext(context.Background())
}

func (i AviatrixCopilotSecurityGroupManagementConfigMap) ToAviatrixCopilotSecurityGroupManagementConfigMapOutputWithContext(ctx context.Context) AviatrixCopilotSecurityGroupManagementConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixCopilotSecurityGroupManagementConfigMapOutput)
}

type AviatrixCopilotSecurityGroupManagementConfigOutput struct{ *pulumi.OutputState }

func (AviatrixCopilotSecurityGroupManagementConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AviatrixCopilotSecurityGroupManagementConfig)(nil)).Elem()
}

func (o AviatrixCopilotSecurityGroupManagementConfigOutput) ToAviatrixCopilotSecurityGroupManagementConfigOutput() AviatrixCopilotSecurityGroupManagementConfigOutput {
	return o
}

func (o AviatrixCopilotSecurityGroupManagementConfigOutput) ToAviatrixCopilotSecurityGroupManagementConfigOutputWithContext(ctx context.Context) AviatrixCopilotSecurityGroupManagementConfigOutput {
	return o
}

// Access account name.
func (o AviatrixCopilotSecurityGroupManagementConfigOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixCopilotSecurityGroupManagementConfig) pulumi.StringPtrOutput { return v.AccountName }).(pulumi.StringPtrOutput)
}

// Cloud type.
func (o AviatrixCopilotSecurityGroupManagementConfigOutput) CloudType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AviatrixCopilotSecurityGroupManagementConfig) pulumi.IntPtrOutput { return v.CloudType }).(pulumi.IntPtrOutput)
}

// Switch to enable copilot security group management.
func (o AviatrixCopilotSecurityGroupManagementConfigOutput) EnableCopilotSecurityGroupManagement() pulumi.BoolOutput {
	return o.ApplyT(func(v *AviatrixCopilotSecurityGroupManagementConfig) pulumi.BoolOutput {
		return v.EnableCopilotSecurityGroupManagement
	}).(pulumi.BoolOutput)
}

// Copilot instance ID.
func (o AviatrixCopilotSecurityGroupManagementConfigOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixCopilotSecurityGroupManagementConfig) pulumi.StringPtrOutput { return v.InstanceId }).(pulumi.StringPtrOutput)
}

// Copilot region. Valid for AWS and Azure.
func (o AviatrixCopilotSecurityGroupManagementConfigOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixCopilotSecurityGroupManagementConfig) pulumi.StringPtrOutput { return v.Region }).(pulumi.StringPtrOutput)
}

// VPC ID.
func (o AviatrixCopilotSecurityGroupManagementConfigOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixCopilotSecurityGroupManagementConfig) pulumi.StringPtrOutput { return v.VpcId }).(pulumi.StringPtrOutput)
}

// Copilot zone. Valid for GCP.
func (o AviatrixCopilotSecurityGroupManagementConfigOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixCopilotSecurityGroupManagementConfig) pulumi.StringPtrOutput { return v.Zone }).(pulumi.StringPtrOutput)
}

type AviatrixCopilotSecurityGroupManagementConfigArrayOutput struct{ *pulumi.OutputState }

func (AviatrixCopilotSecurityGroupManagementConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AviatrixCopilotSecurityGroupManagementConfig)(nil)).Elem()
}

func (o AviatrixCopilotSecurityGroupManagementConfigArrayOutput) ToAviatrixCopilotSecurityGroupManagementConfigArrayOutput() AviatrixCopilotSecurityGroupManagementConfigArrayOutput {
	return o
}

func (o AviatrixCopilotSecurityGroupManagementConfigArrayOutput) ToAviatrixCopilotSecurityGroupManagementConfigArrayOutputWithContext(ctx context.Context) AviatrixCopilotSecurityGroupManagementConfigArrayOutput {
	return o
}

func (o AviatrixCopilotSecurityGroupManagementConfigArrayOutput) Index(i pulumi.IntInput) AviatrixCopilotSecurityGroupManagementConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AviatrixCopilotSecurityGroupManagementConfig {
		return vs[0].([]*AviatrixCopilotSecurityGroupManagementConfig)[vs[1].(int)]
	}).(AviatrixCopilotSecurityGroupManagementConfigOutput)
}

type AviatrixCopilotSecurityGroupManagementConfigMapOutput struct{ *pulumi.OutputState }

func (AviatrixCopilotSecurityGroupManagementConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AviatrixCopilotSecurityGroupManagementConfig)(nil)).Elem()
}

func (o AviatrixCopilotSecurityGroupManagementConfigMapOutput) ToAviatrixCopilotSecurityGroupManagementConfigMapOutput() AviatrixCopilotSecurityGroupManagementConfigMapOutput {
	return o
}

func (o AviatrixCopilotSecurityGroupManagementConfigMapOutput) ToAviatrixCopilotSecurityGroupManagementConfigMapOutputWithContext(ctx context.Context) AviatrixCopilotSecurityGroupManagementConfigMapOutput {
	return o
}

func (o AviatrixCopilotSecurityGroupManagementConfigMapOutput) MapIndex(k pulumi.StringInput) AviatrixCopilotSecurityGroupManagementConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AviatrixCopilotSecurityGroupManagementConfig {
		return vs[0].(map[string]*AviatrixCopilotSecurityGroupManagementConfig)[vs[1].(string)]
	}).(AviatrixCopilotSecurityGroupManagementConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixCopilotSecurityGroupManagementConfigInput)(nil)).Elem(), &AviatrixCopilotSecurityGroupManagementConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixCopilotSecurityGroupManagementConfigArrayInput)(nil)).Elem(), AviatrixCopilotSecurityGroupManagementConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixCopilotSecurityGroupManagementConfigMapInput)(nil)).Elem(), AviatrixCopilotSecurityGroupManagementConfigMap{})
	pulumi.RegisterOutputType(AviatrixCopilotSecurityGroupManagementConfigOutput{})
	pulumi.RegisterOutputType(AviatrixCopilotSecurityGroupManagementConfigArrayOutput{})
	pulumi.RegisterOutputType(AviatrixCopilotSecurityGroupManagementConfigMapOutput{})
}
