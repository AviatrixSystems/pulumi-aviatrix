// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aviatrix
{
    public static class GetAviatrixFirewall
    {
        /// <summary>
        /// Use this data source to get the Aviatrix stateful firewall for use in other resources.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Aviatrix = Pulumi.Aviatrix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Aviatrix.GetAviatrixFirewall.Invoke(new()
        ///     {
        ///         GwName = "gw-abcd",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetAviatrixFirewallResult> InvokeAsync(GetAviatrixFirewallArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAviatrixFirewallResult>("aviatrix:index/getAviatrixFirewall:getAviatrixFirewall", args ?? new GetAviatrixFirewallArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get the Aviatrix stateful firewall for use in other resources.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Aviatrix = Pulumi.Aviatrix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Aviatrix.GetAviatrixFirewall.Invoke(new()
        ///     {
        ///         GwName = "gw-abcd",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetAviatrixFirewallResult> Invoke(GetAviatrixFirewallInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAviatrixFirewallResult>("aviatrix:index/getAviatrixFirewall:getAviatrixFirewall", args ?? new GetAviatrixFirewallInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAviatrixFirewallArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the gateway associated with the firewall.
        /// </summary>
        [Input("gwName", required: true)]
        public string GwName { get; set; } = null!;

        public GetAviatrixFirewallArgs()
        {
        }
        public static new GetAviatrixFirewallArgs Empty => new GetAviatrixFirewallArgs();
    }

    public sealed class GetAviatrixFirewallInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the gateway associated with the firewall.
        /// </summary>
        [Input("gwName", required: true)]
        public Input<string> GwName { get; set; } = null!;

        public GetAviatrixFirewallInvokeArgs()
        {
        }
        public static new GetAviatrixFirewallInvokeArgs Empty => new GetAviatrixFirewallInvokeArgs();
    }


    [OutputType]
    public sealed class GetAviatrixFirewallResult
    {
        /// <summary>
        /// Indicates whether logging is enabled or not.
        /// </summary>
        public readonly bool BaseLogEnabled;
        /// <summary>
        /// The firewall's base policy.
        /// </summary>
        public readonly string BasePolicy;
        public readonly string GwName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// List of policies associated with the firewall.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAviatrixFirewallPolicyResult> Policies;

        [OutputConstructor]
        private GetAviatrixFirewallResult(
            bool baseLogEnabled,

            string basePolicy,

            string gwName,

            string id,

            ImmutableArray<Outputs.GetAviatrixFirewallPolicyResult> policies)
        {
            BaseLogEnabled = baseLogEnabled;
            BasePolicy = basePolicy;
            GwName = gwName;
            Id = id;
            Policies = policies;
        }
    }
}
