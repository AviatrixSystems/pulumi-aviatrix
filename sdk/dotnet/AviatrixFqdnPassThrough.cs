// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aviatrix
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Aviatrix = Pulumi.Aviatrix;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Create an Aviatrix Gateway FQDN filter pass-through
    ///     var testFqdnPassThrough = new Aviatrix.AviatrixFqdnPassThrough("testFqdnPassThrough", new()
    ///     {
    ///         GwName = aviatrix_gateway.Test_gw_aws.Gw_name,
    ///         PassThroughCidrs = new[]
    ///         {
    ///             "10.0.0.0/24",
    ///             "10.0.1.0/24",
    ///             "10.0.2.0/24",
    ///         },
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn = new[]
    ///         {
    ///             aviatrix_fqdn.Test_fqdn,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// **fqdn_pass_through** can be imported using the `gw_name`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import aviatrix:index/aviatrixFqdnPassThrough:AviatrixFqdnPassThrough test gw_name
    /// ```
    /// </summary>
    [AviatrixResourceType("aviatrix:index/aviatrixFqdnPassThrough:AviatrixFqdnPassThrough")]
    public partial class AviatrixFqdnPassThrough : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Gateway name to apply pass-through rules to.
        /// </summary>
        [Output("gwName")]
        public Output<string> GwName { get; private set; } = null!;

        /// <summary>
        /// List of origin CIDR's to allow to pass-through FQDN filtering rules. Minimum list length: 1.
        /// </summary>
        [Output("passThroughCidrs")]
        public Output<ImmutableArray<string>> PassThroughCidrs { get; private set; } = null!;


        /// <summary>
        /// Create a AviatrixFqdnPassThrough resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AviatrixFqdnPassThrough(string name, AviatrixFqdnPassThroughArgs args, CustomResourceOptions? options = null)
            : base("aviatrix:index/aviatrixFqdnPassThrough:AviatrixFqdnPassThrough", name, args ?? new AviatrixFqdnPassThroughArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AviatrixFqdnPassThrough(string name, Input<string> id, AviatrixFqdnPassThroughState? state = null, CustomResourceOptions? options = null)
            : base("aviatrix:index/aviatrixFqdnPassThrough:AviatrixFqdnPassThrough", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/astipkovits",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AviatrixFqdnPassThrough resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AviatrixFqdnPassThrough Get(string name, Input<string> id, AviatrixFqdnPassThroughState? state = null, CustomResourceOptions? options = null)
        {
            return new AviatrixFqdnPassThrough(name, id, state, options);
        }
    }

    public sealed class AviatrixFqdnPassThroughArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Gateway name to apply pass-through rules to.
        /// </summary>
        [Input("gwName", required: true)]
        public Input<string> GwName { get; set; } = null!;

        [Input("passThroughCidrs", required: true)]
        private InputList<string>? _passThroughCidrs;

        /// <summary>
        /// List of origin CIDR's to allow to pass-through FQDN filtering rules. Minimum list length: 1.
        /// </summary>
        public InputList<string> PassThroughCidrs
        {
            get => _passThroughCidrs ?? (_passThroughCidrs = new InputList<string>());
            set => _passThroughCidrs = value;
        }

        public AviatrixFqdnPassThroughArgs()
        {
        }
        public static new AviatrixFqdnPassThroughArgs Empty => new AviatrixFqdnPassThroughArgs();
    }

    public sealed class AviatrixFqdnPassThroughState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Gateway name to apply pass-through rules to.
        /// </summary>
        [Input("gwName")]
        public Input<string>? GwName { get; set; }

        [Input("passThroughCidrs")]
        private InputList<string>? _passThroughCidrs;

        /// <summary>
        /// List of origin CIDR's to allow to pass-through FQDN filtering rules. Minimum list length: 1.
        /// </summary>
        public InputList<string> PassThroughCidrs
        {
            get => _passThroughCidrs ?? (_passThroughCidrs = new InputList<string>());
            set => _passThroughCidrs = value;
        }

        public AviatrixFqdnPassThroughState()
        {
        }
        public static new AviatrixFqdnPassThroughState Empty => new AviatrixFqdnPassThroughState();
    }
}
