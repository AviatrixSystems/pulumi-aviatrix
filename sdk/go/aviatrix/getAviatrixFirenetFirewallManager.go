// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aviatrix

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to do 'save' or 'sync' for Aviatrix FireNet firewall manager.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/astipkovits/pulumi-aviatrix/sdk/go/aviatrix"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err = aviatrix.GetAviatrixFirenetFirewallManager(ctx, &GetAviatrixFirenetFirewallManagerArgs{
//				GatewayName:   "transit",
//				Password:      pulumi.StringRef("password"),
//				PublicIp:      pulumi.StringRef("1.2.3.4"),
//				RouteTable:    pulumi.StringRef("router"),
//				Save:          pulumi.BoolRef(true),
//				Template:      pulumi.StringRef("template"),
//				TemplateStack: pulumi.StringRef("templatestack"),
//				Username:      pulumi.StringRef("admin-api"),
//				VendorType:    "Palo Alto Networks Panorama",
//				VpcId:         "vpc-abcd123",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetAviatrixFirenetFirewallManager(ctx *pulumi.Context, args *GetAviatrixFirenetFirewallManagerArgs, opts ...pulumi.InvokeOption) (*GetAviatrixFirenetFirewallManagerResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetAviatrixFirenetFirewallManagerResult
	err := ctx.Invoke("aviatrix:index/getAviatrixFirenetFirewallManager:getAviatrixFirenetFirewallManager", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAviatrixFirenetFirewallManager.
type GetAviatrixFirenetFirewallManagerArgs struct {
	// The FireNet gateway name.
	GatewayName string `pulumi:"gatewayName"`
	// Number of retries for `save` or `synchronize`. Example: 1. Default value: 0.
	NumberOfRetries *int `pulumi:"numberOfRetries"`
	// Panorama login password for API calls. Required for vendor type "Palo Alto Networks Panorama".
	Password *string `pulumi:"password"`
	// The public IP address of the Panorama instance. Required for vendor type "Palo Alto Networks Panorama".
	PublicIp *string `pulumi:"publicIp"`
	// Retry interval in seconds for `save` or `synchronize`. Example: 120. Default value: 300.
	RetryInterval *int `pulumi:"retryInterval"`
	// The name of firewall virtual router to program. If left unspecified, the Controller programs the Panorama template’s first router.
	RouteTable *string `pulumi:"routeTable"`
	// Switch to save or not.
	Save *bool `pulumi:"save"`
	// Switch to sync or not.
	Synchronize *bool `pulumi:"synchronize"`
	// Panorama template for each FireNet gateway. Required for vendor type "Palo Alto Networks Panorama".
	Template *string `pulumi:"template"`
	// Panorama template stack for each FireNet gateway. Required for vendor type "Palo Alto Networks Panorama".
	TemplateStack *string `pulumi:"templateStack"`
	// Panorama login name for API calls from the Controller. Required for vendor type "Palo Alto Networks Panorama".
	Username *string `pulumi:"username"`
	// Vendor type. Valid values: "Generic" and "Palo Alto Networks Panorama".
	VendorType string `pulumi:"vendorType"`
	// VPC ID.
	VpcId string `pulumi:"vpcId"`
}

// A collection of values returned by getAviatrixFirenetFirewallManager.
type GetAviatrixFirenetFirewallManagerResult struct {
	GatewayName string `pulumi:"gatewayName"`
	// The provider-assigned unique ID for this managed resource.
	Id              string  `pulumi:"id"`
	NumberOfRetries *int    `pulumi:"numberOfRetries"`
	Password        *string `pulumi:"password"`
	PublicIp        *string `pulumi:"publicIp"`
	RetryInterval   *int    `pulumi:"retryInterval"`
	RouteTable      *string `pulumi:"routeTable"`
	Save            *bool   `pulumi:"save"`
	Synchronize     *bool   `pulumi:"synchronize"`
	Template        *string `pulumi:"template"`
	TemplateStack   *string `pulumi:"templateStack"`
	Username        *string `pulumi:"username"`
	VendorType      string  `pulumi:"vendorType"`
	VpcId           string  `pulumi:"vpcId"`
}

func GetAviatrixFirenetFirewallManagerOutput(ctx *pulumi.Context, args GetAviatrixFirenetFirewallManagerOutputArgs, opts ...pulumi.InvokeOption) GetAviatrixFirenetFirewallManagerResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAviatrixFirenetFirewallManagerResult, error) {
			args := v.(GetAviatrixFirenetFirewallManagerArgs)
			r, err := GetAviatrixFirenetFirewallManager(ctx, &args, opts...)
			var s GetAviatrixFirenetFirewallManagerResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetAviatrixFirenetFirewallManagerResultOutput)
}

// A collection of arguments for invoking getAviatrixFirenetFirewallManager.
type GetAviatrixFirenetFirewallManagerOutputArgs struct {
	// The FireNet gateway name.
	GatewayName pulumi.StringInput `pulumi:"gatewayName"`
	// Number of retries for `save` or `synchronize`. Example: 1. Default value: 0.
	NumberOfRetries pulumi.IntPtrInput `pulumi:"numberOfRetries"`
	// Panorama login password for API calls. Required for vendor type "Palo Alto Networks Panorama".
	Password pulumi.StringPtrInput `pulumi:"password"`
	// The public IP address of the Panorama instance. Required for vendor type "Palo Alto Networks Panorama".
	PublicIp pulumi.StringPtrInput `pulumi:"publicIp"`
	// Retry interval in seconds for `save` or `synchronize`. Example: 120. Default value: 300.
	RetryInterval pulumi.IntPtrInput `pulumi:"retryInterval"`
	// The name of firewall virtual router to program. If left unspecified, the Controller programs the Panorama template’s first router.
	RouteTable pulumi.StringPtrInput `pulumi:"routeTable"`
	// Switch to save or not.
	Save pulumi.BoolPtrInput `pulumi:"save"`
	// Switch to sync or not.
	Synchronize pulumi.BoolPtrInput `pulumi:"synchronize"`
	// Panorama template for each FireNet gateway. Required for vendor type "Palo Alto Networks Panorama".
	Template pulumi.StringPtrInput `pulumi:"template"`
	// Panorama template stack for each FireNet gateway. Required for vendor type "Palo Alto Networks Panorama".
	TemplateStack pulumi.StringPtrInput `pulumi:"templateStack"`
	// Panorama login name for API calls from the Controller. Required for vendor type "Palo Alto Networks Panorama".
	Username pulumi.StringPtrInput `pulumi:"username"`
	// Vendor type. Valid values: "Generic" and "Palo Alto Networks Panorama".
	VendorType pulumi.StringInput `pulumi:"vendorType"`
	// VPC ID.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetAviatrixFirenetFirewallManagerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAviatrixFirenetFirewallManagerArgs)(nil)).Elem()
}

// A collection of values returned by getAviatrixFirenetFirewallManager.
type GetAviatrixFirenetFirewallManagerResultOutput struct{ *pulumi.OutputState }

func (GetAviatrixFirenetFirewallManagerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAviatrixFirenetFirewallManagerResult)(nil)).Elem()
}

func (o GetAviatrixFirenetFirewallManagerResultOutput) ToGetAviatrixFirenetFirewallManagerResultOutput() GetAviatrixFirenetFirewallManagerResultOutput {
	return o
}

func (o GetAviatrixFirenetFirewallManagerResultOutput) ToGetAviatrixFirenetFirewallManagerResultOutputWithContext(ctx context.Context) GetAviatrixFirenetFirewallManagerResultOutput {
	return o
}

func (o GetAviatrixFirenetFirewallManagerResultOutput) GatewayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAviatrixFirenetFirewallManagerResult) string { return v.GatewayName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAviatrixFirenetFirewallManagerResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAviatrixFirenetFirewallManagerResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetAviatrixFirenetFirewallManagerResultOutput) NumberOfRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetAviatrixFirenetFirewallManagerResult) *int { return v.NumberOfRetries }).(pulumi.IntPtrOutput)
}

func (o GetAviatrixFirenetFirewallManagerResultOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAviatrixFirenetFirewallManagerResult) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o GetAviatrixFirenetFirewallManagerResultOutput) PublicIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAviatrixFirenetFirewallManagerResult) *string { return v.PublicIp }).(pulumi.StringPtrOutput)
}

func (o GetAviatrixFirenetFirewallManagerResultOutput) RetryInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetAviatrixFirenetFirewallManagerResult) *int { return v.RetryInterval }).(pulumi.IntPtrOutput)
}

func (o GetAviatrixFirenetFirewallManagerResultOutput) RouteTable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAviatrixFirenetFirewallManagerResult) *string { return v.RouteTable }).(pulumi.StringPtrOutput)
}

func (o GetAviatrixFirenetFirewallManagerResultOutput) Save() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetAviatrixFirenetFirewallManagerResult) *bool { return v.Save }).(pulumi.BoolPtrOutput)
}

func (o GetAviatrixFirenetFirewallManagerResultOutput) Synchronize() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetAviatrixFirenetFirewallManagerResult) *bool { return v.Synchronize }).(pulumi.BoolPtrOutput)
}

func (o GetAviatrixFirenetFirewallManagerResultOutput) Template() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAviatrixFirenetFirewallManagerResult) *string { return v.Template }).(pulumi.StringPtrOutput)
}

func (o GetAviatrixFirenetFirewallManagerResultOutput) TemplateStack() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAviatrixFirenetFirewallManagerResult) *string { return v.TemplateStack }).(pulumi.StringPtrOutput)
}

func (o GetAviatrixFirenetFirewallManagerResultOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAviatrixFirenetFirewallManagerResult) *string { return v.Username }).(pulumi.StringPtrOutput)
}

func (o GetAviatrixFirenetFirewallManagerResultOutput) VendorType() pulumi.StringOutput {
	return o.ApplyT(func(v GetAviatrixFirenetFirewallManagerResult) string { return v.VendorType }).(pulumi.StringOutput)
}

func (o GetAviatrixFirenetFirewallManagerResultOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAviatrixFirenetFirewallManagerResult) string { return v.VpcId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAviatrixFirenetFirewallManagerResultOutput{})
}
