// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The **aviatrix_aws_tgw_network_domain** resource allows the creation and management of Aviatrix network domains.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aviatrix from "@astipkovits/aviatrix";
 *
 * // Create an Aviatrix AWS TGW network domain
 * const testAwsTgw = new aviatrix.AviatrixAwsTgw("testAwsTgw", {
 *     accountName: "devops",
 *     awsSideAsNumber: "64512",
 *     region: "us-east-1",
 *     tgwName: "test-AWS-TGW",
 *     manageSecurityDomain: false,
 *     manageVpcAttachment: false,
 *     manageTransitGatewayAttachment: false,
 * });
 * const defaultDomain = new aviatrix.AviatrixAwsTgwNetworkDomain("defaultDomain", {tgwName: testAwsTgw.tgwName});
 * const sharedServiceDomain = new aviatrix.AviatrixAwsTgwNetworkDomain("sharedServiceDomain", {tgwName: testAwsTgw.tgwName});
 * const aviatrixEdgeDomain = new aviatrix.AviatrixAwsTgwNetworkDomain("aviatrixEdgeDomain", {tgwName: testAwsTgw.tgwName});
 * const defaultSdConn1 = new aviatrix.AviatrixAwsTgwSecurityDomainConn("defaultSdConn1", {
 *     tgwName: testAwsTgw.tgwName,
 *     domainName1: aviatrixEdgeDomain.name,
 *     domainName2: defaultDomain.name,
 * });
 * const defaultSdConn2 = new aviatrix.AviatrixAwsTgwSecurityDomainConn("defaultSdConn2", {
 *     tgwName: testAwsTgw.tgwName,
 *     domainName1: aviatrixEdgeDomain.name,
 *     domainName2: sharedServiceDomain.name,
 * });
 * const defaultSdConn3 = new aviatrix.AviatrixAwsTgwSecurityDomainConn("defaultSdConn3", {
 *     tgwName: testAwsTgw.tgwName,
 *     domainName1: defaultDomain.name,
 *     domainName2: sharedServiceDomain.name,
 * });
 * const test = new aviatrix.AviatrixAwsTgwNetworkDomain("test", {tgwName: testAwsTgw.tgwName}, {
 *     dependsOn: [
 *         defaultDomain,
 *         sharedServiceDomain,
 *         aviatrixEdgeDomain,
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * **aws_tgw_network_domain** can be imported using the `name` and `tgw_name`, e.g.
 *
 * ```sh
 *  $ pulumi import aviatrix:index/aviatrixAwsTgwNetworkDomain:AviatrixAwsTgwNetworkDomain test tgw_name~name
 * ```
 */
export class AviatrixAwsTgwNetworkDomain extends pulumi.CustomResource {
    /**
     * Get an existing AviatrixAwsTgwNetworkDomain resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AviatrixAwsTgwNetworkDomainState, opts?: pulumi.CustomResourceOptions): AviatrixAwsTgwNetworkDomain {
        return new AviatrixAwsTgwNetworkDomain(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aviatrix:index/aviatrixAwsTgwNetworkDomain:AviatrixAwsTgwNetworkDomain';

    /**
     * Returns true if the given object is an instance of AviatrixAwsTgwNetworkDomain.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AviatrixAwsTgwNetworkDomain {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AviatrixAwsTgwNetworkDomain.__pulumiType;
    }

    /**
     * Set to true if the network domain is to be used as an Aviatrix Firewall Domain for the Aviatrix Firewall Network. Valid values: true, false. Default value: false.
     */
    public readonly aviatrixFirewall!: pulumi.Output<boolean | undefined>;
    /**
     * The name of the network domain.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Set to true if the network domain is to be used as a native egress domain (for non-Aviatrix Firewall Network-based central Internet bound traffic). Valid values: true, false. Default value: false.
     */
    public readonly nativeEgress!: pulumi.Output<boolean | undefined>;
    /**
     * Set to true if the network domain is to be used as a native firewall domain (for non-Aviatrix Firewall Network-based firewall traffic inspection). Valid values: true, false. Default value: false.
     */
    public readonly nativeFirewall!: pulumi.Output<boolean | undefined>;
    /**
     * The AWS TGW name of the network domain.
     */
    public readonly tgwName!: pulumi.Output<string>;

    /**
     * Create a AviatrixAwsTgwNetworkDomain resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AviatrixAwsTgwNetworkDomainArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AviatrixAwsTgwNetworkDomainArgs | AviatrixAwsTgwNetworkDomainState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AviatrixAwsTgwNetworkDomainState | undefined;
            resourceInputs["aviatrixFirewall"] = state ? state.aviatrixFirewall : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nativeEgress"] = state ? state.nativeEgress : undefined;
            resourceInputs["nativeFirewall"] = state ? state.nativeFirewall : undefined;
            resourceInputs["tgwName"] = state ? state.tgwName : undefined;
        } else {
            const args = argsOrState as AviatrixAwsTgwNetworkDomainArgs | undefined;
            if ((!args || args.tgwName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tgwName'");
            }
            resourceInputs["aviatrixFirewall"] = args ? args.aviatrixFirewall : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nativeEgress"] = args ? args.nativeEgress : undefined;
            resourceInputs["nativeFirewall"] = args ? args.nativeFirewall : undefined;
            resourceInputs["tgwName"] = args ? args.tgwName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AviatrixAwsTgwNetworkDomain.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AviatrixAwsTgwNetworkDomain resources.
 */
export interface AviatrixAwsTgwNetworkDomainState {
    /**
     * Set to true if the network domain is to be used as an Aviatrix Firewall Domain for the Aviatrix Firewall Network. Valid values: true, false. Default value: false.
     */
    aviatrixFirewall?: pulumi.Input<boolean>;
    /**
     * The name of the network domain.
     */
    name?: pulumi.Input<string>;
    /**
     * Set to true if the network domain is to be used as a native egress domain (for non-Aviatrix Firewall Network-based central Internet bound traffic). Valid values: true, false. Default value: false.
     */
    nativeEgress?: pulumi.Input<boolean>;
    /**
     * Set to true if the network domain is to be used as a native firewall domain (for non-Aviatrix Firewall Network-based firewall traffic inspection). Valid values: true, false. Default value: false.
     */
    nativeFirewall?: pulumi.Input<boolean>;
    /**
     * The AWS TGW name of the network domain.
     */
    tgwName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AviatrixAwsTgwNetworkDomain resource.
 */
export interface AviatrixAwsTgwNetworkDomainArgs {
    /**
     * Set to true if the network domain is to be used as an Aviatrix Firewall Domain for the Aviatrix Firewall Network. Valid values: true, false. Default value: false.
     */
    aviatrixFirewall?: pulumi.Input<boolean>;
    /**
     * The name of the network domain.
     */
    name?: pulumi.Input<string>;
    /**
     * Set to true if the network domain is to be used as a native egress domain (for non-Aviatrix Firewall Network-based central Internet bound traffic). Valid values: true, false. Default value: false.
     */
    nativeEgress?: pulumi.Input<boolean>;
    /**
     * Set to true if the network domain is to be used as a native firewall domain (for non-Aviatrix Firewall Network-based firewall traffic inspection). Valid values: true, false. Default value: false.
     */
    nativeFirewall?: pulumi.Input<boolean>;
    /**
     * The AWS TGW name of the network domain.
     */
    tgwName: pulumi.Input<string>;
}
