// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aviatrix

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AviatrixSegmentationSecurityDomainAssociation struct {
	pulumi.CustomResourceState

	// Attachment name, either Spoke or Edge.
	AttachmentName pulumi.StringOutput `pulumi:"attachmentName"`
	// Security Domain name.
	SecurityDomainName pulumi.StringOutput `pulumi:"securityDomainName"`
	// Transit Gateway name.
	TransitGatewayName pulumi.StringOutput `pulumi:"transitGatewayName"`
}

// NewAviatrixSegmentationSecurityDomainAssociation registers a new resource with the given unique name, arguments, and options.
func NewAviatrixSegmentationSecurityDomainAssociation(ctx *pulumi.Context,
	name string, args *AviatrixSegmentationSecurityDomainAssociationArgs, opts ...pulumi.ResourceOption) (*AviatrixSegmentationSecurityDomainAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AttachmentName == nil {
		return nil, errors.New("invalid value for required argument 'AttachmentName'")
	}
	if args.SecurityDomainName == nil {
		return nil, errors.New("invalid value for required argument 'SecurityDomainName'")
	}
	if args.TransitGatewayName == nil {
		return nil, errors.New("invalid value for required argument 'TransitGatewayName'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource AviatrixSegmentationSecurityDomainAssociation
	err := ctx.RegisterResource("aviatrix:index/aviatrixSegmentationSecurityDomainAssociation:AviatrixSegmentationSecurityDomainAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAviatrixSegmentationSecurityDomainAssociation gets an existing AviatrixSegmentationSecurityDomainAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAviatrixSegmentationSecurityDomainAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AviatrixSegmentationSecurityDomainAssociationState, opts ...pulumi.ResourceOption) (*AviatrixSegmentationSecurityDomainAssociation, error) {
	var resource AviatrixSegmentationSecurityDomainAssociation
	err := ctx.ReadResource("aviatrix:index/aviatrixSegmentationSecurityDomainAssociation:AviatrixSegmentationSecurityDomainAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AviatrixSegmentationSecurityDomainAssociation resources.
type aviatrixSegmentationSecurityDomainAssociationState struct {
	// Attachment name, either Spoke or Edge.
	AttachmentName *string `pulumi:"attachmentName"`
	// Security Domain name.
	SecurityDomainName *string `pulumi:"securityDomainName"`
	// Transit Gateway name.
	TransitGatewayName *string `pulumi:"transitGatewayName"`
}

type AviatrixSegmentationSecurityDomainAssociationState struct {
	// Attachment name, either Spoke or Edge.
	AttachmentName pulumi.StringPtrInput
	// Security Domain name.
	SecurityDomainName pulumi.StringPtrInput
	// Transit Gateway name.
	TransitGatewayName pulumi.StringPtrInput
}

func (AviatrixSegmentationSecurityDomainAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*aviatrixSegmentationSecurityDomainAssociationState)(nil)).Elem()
}

type aviatrixSegmentationSecurityDomainAssociationArgs struct {
	// Attachment name, either Spoke or Edge.
	AttachmentName string `pulumi:"attachmentName"`
	// Security Domain name.
	SecurityDomainName string `pulumi:"securityDomainName"`
	// Transit Gateway name.
	TransitGatewayName string `pulumi:"transitGatewayName"`
}

// The set of arguments for constructing a AviatrixSegmentationSecurityDomainAssociation resource.
type AviatrixSegmentationSecurityDomainAssociationArgs struct {
	// Attachment name, either Spoke or Edge.
	AttachmentName pulumi.StringInput
	// Security Domain name.
	SecurityDomainName pulumi.StringInput
	// Transit Gateway name.
	TransitGatewayName pulumi.StringInput
}

func (AviatrixSegmentationSecurityDomainAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*aviatrixSegmentationSecurityDomainAssociationArgs)(nil)).Elem()
}

type AviatrixSegmentationSecurityDomainAssociationInput interface {
	pulumi.Input

	ToAviatrixSegmentationSecurityDomainAssociationOutput() AviatrixSegmentationSecurityDomainAssociationOutput
	ToAviatrixSegmentationSecurityDomainAssociationOutputWithContext(ctx context.Context) AviatrixSegmentationSecurityDomainAssociationOutput
}

func (*AviatrixSegmentationSecurityDomainAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((**AviatrixSegmentationSecurityDomainAssociation)(nil)).Elem()
}

func (i *AviatrixSegmentationSecurityDomainAssociation) ToAviatrixSegmentationSecurityDomainAssociationOutput() AviatrixSegmentationSecurityDomainAssociationOutput {
	return i.ToAviatrixSegmentationSecurityDomainAssociationOutputWithContext(context.Background())
}

func (i *AviatrixSegmentationSecurityDomainAssociation) ToAviatrixSegmentationSecurityDomainAssociationOutputWithContext(ctx context.Context) AviatrixSegmentationSecurityDomainAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixSegmentationSecurityDomainAssociationOutput)
}

// AviatrixSegmentationSecurityDomainAssociationArrayInput is an input type that accepts AviatrixSegmentationSecurityDomainAssociationArray and AviatrixSegmentationSecurityDomainAssociationArrayOutput values.
// You can construct a concrete instance of `AviatrixSegmentationSecurityDomainAssociationArrayInput` via:
//
//	AviatrixSegmentationSecurityDomainAssociationArray{ AviatrixSegmentationSecurityDomainAssociationArgs{...} }
type AviatrixSegmentationSecurityDomainAssociationArrayInput interface {
	pulumi.Input

	ToAviatrixSegmentationSecurityDomainAssociationArrayOutput() AviatrixSegmentationSecurityDomainAssociationArrayOutput
	ToAviatrixSegmentationSecurityDomainAssociationArrayOutputWithContext(context.Context) AviatrixSegmentationSecurityDomainAssociationArrayOutput
}

type AviatrixSegmentationSecurityDomainAssociationArray []AviatrixSegmentationSecurityDomainAssociationInput

func (AviatrixSegmentationSecurityDomainAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AviatrixSegmentationSecurityDomainAssociation)(nil)).Elem()
}

func (i AviatrixSegmentationSecurityDomainAssociationArray) ToAviatrixSegmentationSecurityDomainAssociationArrayOutput() AviatrixSegmentationSecurityDomainAssociationArrayOutput {
	return i.ToAviatrixSegmentationSecurityDomainAssociationArrayOutputWithContext(context.Background())
}

func (i AviatrixSegmentationSecurityDomainAssociationArray) ToAviatrixSegmentationSecurityDomainAssociationArrayOutputWithContext(ctx context.Context) AviatrixSegmentationSecurityDomainAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixSegmentationSecurityDomainAssociationArrayOutput)
}

// AviatrixSegmentationSecurityDomainAssociationMapInput is an input type that accepts AviatrixSegmentationSecurityDomainAssociationMap and AviatrixSegmentationSecurityDomainAssociationMapOutput values.
// You can construct a concrete instance of `AviatrixSegmentationSecurityDomainAssociationMapInput` via:
//
//	AviatrixSegmentationSecurityDomainAssociationMap{ "key": AviatrixSegmentationSecurityDomainAssociationArgs{...} }
type AviatrixSegmentationSecurityDomainAssociationMapInput interface {
	pulumi.Input

	ToAviatrixSegmentationSecurityDomainAssociationMapOutput() AviatrixSegmentationSecurityDomainAssociationMapOutput
	ToAviatrixSegmentationSecurityDomainAssociationMapOutputWithContext(context.Context) AviatrixSegmentationSecurityDomainAssociationMapOutput
}

type AviatrixSegmentationSecurityDomainAssociationMap map[string]AviatrixSegmentationSecurityDomainAssociationInput

func (AviatrixSegmentationSecurityDomainAssociationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AviatrixSegmentationSecurityDomainAssociation)(nil)).Elem()
}

func (i AviatrixSegmentationSecurityDomainAssociationMap) ToAviatrixSegmentationSecurityDomainAssociationMapOutput() AviatrixSegmentationSecurityDomainAssociationMapOutput {
	return i.ToAviatrixSegmentationSecurityDomainAssociationMapOutputWithContext(context.Background())
}

func (i AviatrixSegmentationSecurityDomainAssociationMap) ToAviatrixSegmentationSecurityDomainAssociationMapOutputWithContext(ctx context.Context) AviatrixSegmentationSecurityDomainAssociationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixSegmentationSecurityDomainAssociationMapOutput)
}

type AviatrixSegmentationSecurityDomainAssociationOutput struct{ *pulumi.OutputState }

func (AviatrixSegmentationSecurityDomainAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AviatrixSegmentationSecurityDomainAssociation)(nil)).Elem()
}

func (o AviatrixSegmentationSecurityDomainAssociationOutput) ToAviatrixSegmentationSecurityDomainAssociationOutput() AviatrixSegmentationSecurityDomainAssociationOutput {
	return o
}

func (o AviatrixSegmentationSecurityDomainAssociationOutput) ToAviatrixSegmentationSecurityDomainAssociationOutputWithContext(ctx context.Context) AviatrixSegmentationSecurityDomainAssociationOutput {
	return o
}

// Attachment name, either Spoke or Edge.
func (o AviatrixSegmentationSecurityDomainAssociationOutput) AttachmentName() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixSegmentationSecurityDomainAssociation) pulumi.StringOutput { return v.AttachmentName }).(pulumi.StringOutput)
}

// Security Domain name.
func (o AviatrixSegmentationSecurityDomainAssociationOutput) SecurityDomainName() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixSegmentationSecurityDomainAssociation) pulumi.StringOutput {
		return v.SecurityDomainName
	}).(pulumi.StringOutput)
}

// Transit Gateway name.
func (o AviatrixSegmentationSecurityDomainAssociationOutput) TransitGatewayName() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixSegmentationSecurityDomainAssociation) pulumi.StringOutput {
		return v.TransitGatewayName
	}).(pulumi.StringOutput)
}

type AviatrixSegmentationSecurityDomainAssociationArrayOutput struct{ *pulumi.OutputState }

func (AviatrixSegmentationSecurityDomainAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AviatrixSegmentationSecurityDomainAssociation)(nil)).Elem()
}

func (o AviatrixSegmentationSecurityDomainAssociationArrayOutput) ToAviatrixSegmentationSecurityDomainAssociationArrayOutput() AviatrixSegmentationSecurityDomainAssociationArrayOutput {
	return o
}

func (o AviatrixSegmentationSecurityDomainAssociationArrayOutput) ToAviatrixSegmentationSecurityDomainAssociationArrayOutputWithContext(ctx context.Context) AviatrixSegmentationSecurityDomainAssociationArrayOutput {
	return o
}

func (o AviatrixSegmentationSecurityDomainAssociationArrayOutput) Index(i pulumi.IntInput) AviatrixSegmentationSecurityDomainAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AviatrixSegmentationSecurityDomainAssociation {
		return vs[0].([]*AviatrixSegmentationSecurityDomainAssociation)[vs[1].(int)]
	}).(AviatrixSegmentationSecurityDomainAssociationOutput)
}

type AviatrixSegmentationSecurityDomainAssociationMapOutput struct{ *pulumi.OutputState }

func (AviatrixSegmentationSecurityDomainAssociationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AviatrixSegmentationSecurityDomainAssociation)(nil)).Elem()
}

func (o AviatrixSegmentationSecurityDomainAssociationMapOutput) ToAviatrixSegmentationSecurityDomainAssociationMapOutput() AviatrixSegmentationSecurityDomainAssociationMapOutput {
	return o
}

func (o AviatrixSegmentationSecurityDomainAssociationMapOutput) ToAviatrixSegmentationSecurityDomainAssociationMapOutputWithContext(ctx context.Context) AviatrixSegmentationSecurityDomainAssociationMapOutput {
	return o
}

func (o AviatrixSegmentationSecurityDomainAssociationMapOutput) MapIndex(k pulumi.StringInput) AviatrixSegmentationSecurityDomainAssociationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AviatrixSegmentationSecurityDomainAssociation {
		return vs[0].(map[string]*AviatrixSegmentationSecurityDomainAssociation)[vs[1].(string)]
	}).(AviatrixSegmentationSecurityDomainAssociationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixSegmentationSecurityDomainAssociationInput)(nil)).Elem(), &AviatrixSegmentationSecurityDomainAssociation{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixSegmentationSecurityDomainAssociationArrayInput)(nil)).Elem(), AviatrixSegmentationSecurityDomainAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixSegmentationSecurityDomainAssociationMapInput)(nil)).Elem(), AviatrixSegmentationSecurityDomainAssociationMap{})
	pulumi.RegisterOutputType(AviatrixSegmentationSecurityDomainAssociationOutput{})
	pulumi.RegisterOutputType(AviatrixSegmentationSecurityDomainAssociationArrayOutput{})
	pulumi.RegisterOutputType(AviatrixSegmentationSecurityDomainAssociationMapOutput{})
}
