// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class AviatrixSumologicForwarder extends pulumi.CustomResource {
    /**
     * Get an existing AviatrixSumologicForwarder resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AviatrixSumologicForwarderState, opts?: pulumi.CustomResourceOptions): AviatrixSumologicForwarder {
        return new AviatrixSumologicForwarder(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aviatrix:index/aviatrixSumologicForwarder:AviatrixSumologicForwarder';

    /**
     * Returns true if the given object is an instance of AviatrixSumologicForwarder.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AviatrixSumologicForwarder {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AviatrixSumologicForwarder.__pulumiType;
    }

    /**
     * Access ID.
     */
    public readonly accessId!: pulumi.Output<string>;
    /**
     * Access key.
     */
    public readonly accessKey!: pulumi.Output<string>;
    /**
     * Custom configuration.
     */
    public readonly customConfiguration!: pulumi.Output<string | undefined>;
    /**
     * List of excluded gateways.
     */
    public readonly excludedGateways!: pulumi.Output<string[] | undefined>;
    /**
     * Source category.
     */
    public readonly sourceCategory!: pulumi.Output<string | undefined>;
    /**
     * Enabled or not.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;

    /**
     * Create a AviatrixSumologicForwarder resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AviatrixSumologicForwarderArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AviatrixSumologicForwarderArgs | AviatrixSumologicForwarderState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AviatrixSumologicForwarderState | undefined;
            resourceInputs["accessId"] = state ? state.accessId : undefined;
            resourceInputs["accessKey"] = state ? state.accessKey : undefined;
            resourceInputs["customConfiguration"] = state ? state.customConfiguration : undefined;
            resourceInputs["excludedGateways"] = state ? state.excludedGateways : undefined;
            resourceInputs["sourceCategory"] = state ? state.sourceCategory : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as AviatrixSumologicForwarderArgs | undefined;
            if ((!args || args.accessId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accessId'");
            }
            if ((!args || args.accessKey === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accessKey'");
            }
            resourceInputs["accessId"] = args ? args.accessId : undefined;
            resourceInputs["accessKey"] = args ? args.accessKey : undefined;
            resourceInputs["customConfiguration"] = args ? args.customConfiguration : undefined;
            resourceInputs["excludedGateways"] = args ? args.excludedGateways : undefined;
            resourceInputs["sourceCategory"] = args ? args.sourceCategory : undefined;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AviatrixSumologicForwarder.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AviatrixSumologicForwarder resources.
 */
export interface AviatrixSumologicForwarderState {
    /**
     * Access ID.
     */
    accessId?: pulumi.Input<string>;
    /**
     * Access key.
     */
    accessKey?: pulumi.Input<string>;
    /**
     * Custom configuration.
     */
    customConfiguration?: pulumi.Input<string>;
    /**
     * List of excluded gateways.
     */
    excludedGateways?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Source category.
     */
    sourceCategory?: pulumi.Input<string>;
    /**
     * Enabled or not.
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AviatrixSumologicForwarder resource.
 */
export interface AviatrixSumologicForwarderArgs {
    /**
     * Access ID.
     */
    accessId: pulumi.Input<string>;
    /**
     * Access key.
     */
    accessKey: pulumi.Input<string>;
    /**
     * Custom configuration.
     */
    customConfiguration?: pulumi.Input<string>;
    /**
     * List of excluded gateways.
     */
    excludedGateways?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Source category.
     */
    sourceCategory?: pulumi.Input<string>;
}
