// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The **aviatrix_copilot_security_group_management_config** resource allows management of controller CoPilot security group management configuration. This resource is available as of provider version R2.23+.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aviatrix from "@pulumi/aviatrix";
 *
 * // Enable the CoPilot Security Group Management
 * const test = new aviatrix.AviatrixCopilotSecurityGroupManagementConfig("test", {
 *     accountName: "aws-account",
 *     cloudType: 1,
 *     enableCopilotSecurityGroupManagement: true,
 *     instanceId: "i-1234567890",
 *     region: "us-east-1",
 *     vpcId: "vpc-1234567890",
 * });
 * ```
 *
 * ## Import
 *
 * **aviatrix_copilot_security_group_management_config** can be imported using controller IP, e.g. controller IP is 10.11.12.13
 *
 * ```sh
 *  $ pulumi import aviatrix:index/aviatrixCopilotSecurityGroupManagementConfig:AviatrixCopilotSecurityGroupManagementConfig test 10-11-12-13
 * ```
 */
export class AviatrixCopilotSecurityGroupManagementConfig extends pulumi.CustomResource {
    /**
     * Get an existing AviatrixCopilotSecurityGroupManagementConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AviatrixCopilotSecurityGroupManagementConfigState, opts?: pulumi.CustomResourceOptions): AviatrixCopilotSecurityGroupManagementConfig {
        return new AviatrixCopilotSecurityGroupManagementConfig(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aviatrix:index/aviatrixCopilotSecurityGroupManagementConfig:AviatrixCopilotSecurityGroupManagementConfig';

    /**
     * Returns true if the given object is an instance of AviatrixCopilotSecurityGroupManagementConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AviatrixCopilotSecurityGroupManagementConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AviatrixCopilotSecurityGroupManagementConfig.__pulumiType;
    }

    /**
     * Aviatrix access account name. Required to enable copilot security group management.
     */
    public readonly accountName!: pulumi.Output<string | undefined>;
    /**
     * Cloud type. The type of this attribute is Integer. Only support AWS, Azure and OCI. Required to enable copilot security group management.
     */
    public readonly cloudType!: pulumi.Output<number | undefined>;
    /**
     * Switch to enable copilot security group management. Valid values: true, false.
     */
    public readonly enableCopilotSecurityGroupManagement!: pulumi.Output<boolean>;
    /**
     * CoPilot instance ID. Required to enable copilot security group management.
     */
    public readonly instanceId!: pulumi.Output<string | undefined>;
    /**
     * Region where CoPilot is deployed. Required and valid for AWS and Azure.
     */
    public readonly region!: pulumi.Output<string | undefined>;
    /**
     * VPC ID. Required to enable copilot security group management.
     */
    public readonly vpcId!: pulumi.Output<string | undefined>;
    /**
     * Zone where CoPilot is deployed. Required and valid for GCP.
     */
    public readonly zone!: pulumi.Output<string | undefined>;

    /**
     * Create a AviatrixCopilotSecurityGroupManagementConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AviatrixCopilotSecurityGroupManagementConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AviatrixCopilotSecurityGroupManagementConfigArgs | AviatrixCopilotSecurityGroupManagementConfigState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AviatrixCopilotSecurityGroupManagementConfigState | undefined;
            resourceInputs["accountName"] = state ? state.accountName : undefined;
            resourceInputs["cloudType"] = state ? state.cloudType : undefined;
            resourceInputs["enableCopilotSecurityGroupManagement"] = state ? state.enableCopilotSecurityGroupManagement : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
            resourceInputs["zone"] = state ? state.zone : undefined;
        } else {
            const args = argsOrState as AviatrixCopilotSecurityGroupManagementConfigArgs | undefined;
            if ((!args || args.enableCopilotSecurityGroupManagement === undefined) && !opts.urn) {
                throw new Error("Missing required property 'enableCopilotSecurityGroupManagement'");
            }
            resourceInputs["accountName"] = args ? args.accountName : undefined;
            resourceInputs["cloudType"] = args ? args.cloudType : undefined;
            resourceInputs["enableCopilotSecurityGroupManagement"] = args ? args.enableCopilotSecurityGroupManagement : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["zone"] = args ? args.zone : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AviatrixCopilotSecurityGroupManagementConfig.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AviatrixCopilotSecurityGroupManagementConfig resources.
 */
export interface AviatrixCopilotSecurityGroupManagementConfigState {
    /**
     * Aviatrix access account name. Required to enable copilot security group management.
     */
    accountName?: pulumi.Input<string>;
    /**
     * Cloud type. The type of this attribute is Integer. Only support AWS, Azure and OCI. Required to enable copilot security group management.
     */
    cloudType?: pulumi.Input<number>;
    /**
     * Switch to enable copilot security group management. Valid values: true, false.
     */
    enableCopilotSecurityGroupManagement?: pulumi.Input<boolean>;
    /**
     * CoPilot instance ID. Required to enable copilot security group management.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * Region where CoPilot is deployed. Required and valid for AWS and Azure.
     */
    region?: pulumi.Input<string>;
    /**
     * VPC ID. Required to enable copilot security group management.
     */
    vpcId?: pulumi.Input<string>;
    /**
     * Zone where CoPilot is deployed. Required and valid for GCP.
     */
    zone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AviatrixCopilotSecurityGroupManagementConfig resource.
 */
export interface AviatrixCopilotSecurityGroupManagementConfigArgs {
    /**
     * Aviatrix access account name. Required to enable copilot security group management.
     */
    accountName?: pulumi.Input<string>;
    /**
     * Cloud type. The type of this attribute is Integer. Only support AWS, Azure and OCI. Required to enable copilot security group management.
     */
    cloudType?: pulumi.Input<number>;
    /**
     * Switch to enable copilot security group management. Valid values: true, false.
     */
    enableCopilotSecurityGroupManagement: pulumi.Input<boolean>;
    /**
     * CoPilot instance ID. Required to enable copilot security group management.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * Region where CoPilot is deployed. Required and valid for AWS and Azure.
     */
    region?: pulumi.Input<string>;
    /**
     * VPC ID. Required to enable copilot security group management.
     */
    vpcId?: pulumi.Input<string>;
    /**
     * Zone where CoPilot is deployed. Required and valid for GCP.
     */
    zone?: pulumi.Input<string>;
}
