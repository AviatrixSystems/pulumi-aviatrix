// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAviatrixFirenetFirewallManager(args: GetAviatrixFirenetFirewallManagerArgs, opts?: pulumi.InvokeOptions): Promise<GetAviatrixFirenetFirewallManagerResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("aviatrix:index/getAviatrixFirenetFirewallManager:getAviatrixFirenetFirewallManager", {
        "gatewayName": args.gatewayName,
        "numberOfRetries": args.numberOfRetries,
        "password": args.password,
        "publicIp": args.publicIp,
        "retryInterval": args.retryInterval,
        "routeTable": args.routeTable,
        "save": args.save,
        "synchronize": args.synchronize,
        "template": args.template,
        "templateStack": args.templateStack,
        "username": args.username,
        "vendorType": args.vendorType,
        "vpcId": args.vpcId,
    }, opts);
}

/**
 * A collection of arguments for invoking getAviatrixFirenetFirewallManager.
 */
export interface GetAviatrixFirenetFirewallManagerArgs {
    gatewayName: string;
    numberOfRetries?: number;
    password?: string;
    publicIp?: string;
    retryInterval?: number;
    routeTable?: string;
    save?: boolean;
    synchronize?: boolean;
    template?: string;
    templateStack?: string;
    username?: string;
    vendorType: string;
    vpcId: string;
}

/**
 * A collection of values returned by getAviatrixFirenetFirewallManager.
 */
export interface GetAviatrixFirenetFirewallManagerResult {
    readonly gatewayName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly numberOfRetries?: number;
    readonly password?: string;
    readonly publicIp?: string;
    readonly retryInterval?: number;
    readonly routeTable?: string;
    readonly save?: boolean;
    readonly synchronize?: boolean;
    readonly template?: string;
    readonly templateStack?: string;
    readonly username?: string;
    readonly vendorType: string;
    readonly vpcId: string;
}

export function getAviatrixFirenetFirewallManagerOutput(args: GetAviatrixFirenetFirewallManagerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAviatrixFirenetFirewallManagerResult> {
    return pulumi.output(args).apply(a => getAviatrixFirenetFirewallManager(a, opts))
}

/**
 * A collection of arguments for invoking getAviatrixFirenetFirewallManager.
 */
export interface GetAviatrixFirenetFirewallManagerOutputArgs {
    gatewayName: pulumi.Input<string>;
    numberOfRetries?: pulumi.Input<number>;
    password?: pulumi.Input<string>;
    publicIp?: pulumi.Input<string>;
    retryInterval?: pulumi.Input<number>;
    routeTable?: pulumi.Input<string>;
    save?: pulumi.Input<boolean>;
    synchronize?: pulumi.Input<boolean>;
    template?: pulumi.Input<string>;
    templateStack?: pulumi.Input<string>;
    username?: pulumi.Input<string>;
    vendorType: pulumi.Input<string>;
    vpcId: pulumi.Input<string>;
}
