// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aviatrix

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AviatrixAwsGuardDuty struct {
	pulumi.CustomResourceState

	// Account name
	AccountName pulumi.StringOutput `pulumi:"accountName"`
	// Excluded IPs.
	ExcludedIps pulumi.StringArrayOutput `pulumi:"excludedIps"`
	// Region.
	Region pulumi.StringOutput `pulumi:"region"`
}

// NewAviatrixAwsGuardDuty registers a new resource with the given unique name, arguments, and options.
func NewAviatrixAwsGuardDuty(ctx *pulumi.Context,
	name string, args *AviatrixAwsGuardDutyArgs, opts ...pulumi.ResourceOption) (*AviatrixAwsGuardDuty, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountName == nil {
		return nil, errors.New("invalid value for required argument 'AccountName'")
	}
	if args.Region == nil {
		return nil, errors.New("invalid value for required argument 'Region'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource AviatrixAwsGuardDuty
	err := ctx.RegisterResource("aviatrix:index/aviatrixAwsGuardDuty:AviatrixAwsGuardDuty", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAviatrixAwsGuardDuty gets an existing AviatrixAwsGuardDuty resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAviatrixAwsGuardDuty(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AviatrixAwsGuardDutyState, opts ...pulumi.ResourceOption) (*AviatrixAwsGuardDuty, error) {
	var resource AviatrixAwsGuardDuty
	err := ctx.ReadResource("aviatrix:index/aviatrixAwsGuardDuty:AviatrixAwsGuardDuty", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AviatrixAwsGuardDuty resources.
type aviatrixAwsGuardDutyState struct {
	// Account name
	AccountName *string `pulumi:"accountName"`
	// Excluded IPs.
	ExcludedIps []string `pulumi:"excludedIps"`
	// Region.
	Region *string `pulumi:"region"`
}

type AviatrixAwsGuardDutyState struct {
	// Account name
	AccountName pulumi.StringPtrInput
	// Excluded IPs.
	ExcludedIps pulumi.StringArrayInput
	// Region.
	Region pulumi.StringPtrInput
}

func (AviatrixAwsGuardDutyState) ElementType() reflect.Type {
	return reflect.TypeOf((*aviatrixAwsGuardDutyState)(nil)).Elem()
}

type aviatrixAwsGuardDutyArgs struct {
	// Account name
	AccountName string `pulumi:"accountName"`
	// Excluded IPs.
	ExcludedIps []string `pulumi:"excludedIps"`
	// Region.
	Region string `pulumi:"region"`
}

// The set of arguments for constructing a AviatrixAwsGuardDuty resource.
type AviatrixAwsGuardDutyArgs struct {
	// Account name
	AccountName pulumi.StringInput
	// Excluded IPs.
	ExcludedIps pulumi.StringArrayInput
	// Region.
	Region pulumi.StringInput
}

func (AviatrixAwsGuardDutyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*aviatrixAwsGuardDutyArgs)(nil)).Elem()
}

type AviatrixAwsGuardDutyInput interface {
	pulumi.Input

	ToAviatrixAwsGuardDutyOutput() AviatrixAwsGuardDutyOutput
	ToAviatrixAwsGuardDutyOutputWithContext(ctx context.Context) AviatrixAwsGuardDutyOutput
}

func (*AviatrixAwsGuardDuty) ElementType() reflect.Type {
	return reflect.TypeOf((**AviatrixAwsGuardDuty)(nil)).Elem()
}

func (i *AviatrixAwsGuardDuty) ToAviatrixAwsGuardDutyOutput() AviatrixAwsGuardDutyOutput {
	return i.ToAviatrixAwsGuardDutyOutputWithContext(context.Background())
}

func (i *AviatrixAwsGuardDuty) ToAviatrixAwsGuardDutyOutputWithContext(ctx context.Context) AviatrixAwsGuardDutyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixAwsGuardDutyOutput)
}

// AviatrixAwsGuardDutyArrayInput is an input type that accepts AviatrixAwsGuardDutyArray and AviatrixAwsGuardDutyArrayOutput values.
// You can construct a concrete instance of `AviatrixAwsGuardDutyArrayInput` via:
//
//	AviatrixAwsGuardDutyArray{ AviatrixAwsGuardDutyArgs{...} }
type AviatrixAwsGuardDutyArrayInput interface {
	pulumi.Input

	ToAviatrixAwsGuardDutyArrayOutput() AviatrixAwsGuardDutyArrayOutput
	ToAviatrixAwsGuardDutyArrayOutputWithContext(context.Context) AviatrixAwsGuardDutyArrayOutput
}

type AviatrixAwsGuardDutyArray []AviatrixAwsGuardDutyInput

func (AviatrixAwsGuardDutyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AviatrixAwsGuardDuty)(nil)).Elem()
}

func (i AviatrixAwsGuardDutyArray) ToAviatrixAwsGuardDutyArrayOutput() AviatrixAwsGuardDutyArrayOutput {
	return i.ToAviatrixAwsGuardDutyArrayOutputWithContext(context.Background())
}

func (i AviatrixAwsGuardDutyArray) ToAviatrixAwsGuardDutyArrayOutputWithContext(ctx context.Context) AviatrixAwsGuardDutyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixAwsGuardDutyArrayOutput)
}

// AviatrixAwsGuardDutyMapInput is an input type that accepts AviatrixAwsGuardDutyMap and AviatrixAwsGuardDutyMapOutput values.
// You can construct a concrete instance of `AviatrixAwsGuardDutyMapInput` via:
//
//	AviatrixAwsGuardDutyMap{ "key": AviatrixAwsGuardDutyArgs{...} }
type AviatrixAwsGuardDutyMapInput interface {
	pulumi.Input

	ToAviatrixAwsGuardDutyMapOutput() AviatrixAwsGuardDutyMapOutput
	ToAviatrixAwsGuardDutyMapOutputWithContext(context.Context) AviatrixAwsGuardDutyMapOutput
}

type AviatrixAwsGuardDutyMap map[string]AviatrixAwsGuardDutyInput

func (AviatrixAwsGuardDutyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AviatrixAwsGuardDuty)(nil)).Elem()
}

func (i AviatrixAwsGuardDutyMap) ToAviatrixAwsGuardDutyMapOutput() AviatrixAwsGuardDutyMapOutput {
	return i.ToAviatrixAwsGuardDutyMapOutputWithContext(context.Background())
}

func (i AviatrixAwsGuardDutyMap) ToAviatrixAwsGuardDutyMapOutputWithContext(ctx context.Context) AviatrixAwsGuardDutyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixAwsGuardDutyMapOutput)
}

type AviatrixAwsGuardDutyOutput struct{ *pulumi.OutputState }

func (AviatrixAwsGuardDutyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AviatrixAwsGuardDuty)(nil)).Elem()
}

func (o AviatrixAwsGuardDutyOutput) ToAviatrixAwsGuardDutyOutput() AviatrixAwsGuardDutyOutput {
	return o
}

func (o AviatrixAwsGuardDutyOutput) ToAviatrixAwsGuardDutyOutputWithContext(ctx context.Context) AviatrixAwsGuardDutyOutput {
	return o
}

// Account name
func (o AviatrixAwsGuardDutyOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixAwsGuardDuty) pulumi.StringOutput { return v.AccountName }).(pulumi.StringOutput)
}

// Excluded IPs.
func (o AviatrixAwsGuardDutyOutput) ExcludedIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AviatrixAwsGuardDuty) pulumi.StringArrayOutput { return v.ExcludedIps }).(pulumi.StringArrayOutput)
}

// Region.
func (o AviatrixAwsGuardDutyOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixAwsGuardDuty) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

type AviatrixAwsGuardDutyArrayOutput struct{ *pulumi.OutputState }

func (AviatrixAwsGuardDutyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AviatrixAwsGuardDuty)(nil)).Elem()
}

func (o AviatrixAwsGuardDutyArrayOutput) ToAviatrixAwsGuardDutyArrayOutput() AviatrixAwsGuardDutyArrayOutput {
	return o
}

func (o AviatrixAwsGuardDutyArrayOutput) ToAviatrixAwsGuardDutyArrayOutputWithContext(ctx context.Context) AviatrixAwsGuardDutyArrayOutput {
	return o
}

func (o AviatrixAwsGuardDutyArrayOutput) Index(i pulumi.IntInput) AviatrixAwsGuardDutyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AviatrixAwsGuardDuty {
		return vs[0].([]*AviatrixAwsGuardDuty)[vs[1].(int)]
	}).(AviatrixAwsGuardDutyOutput)
}

type AviatrixAwsGuardDutyMapOutput struct{ *pulumi.OutputState }

func (AviatrixAwsGuardDutyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AviatrixAwsGuardDuty)(nil)).Elem()
}

func (o AviatrixAwsGuardDutyMapOutput) ToAviatrixAwsGuardDutyMapOutput() AviatrixAwsGuardDutyMapOutput {
	return o
}

func (o AviatrixAwsGuardDutyMapOutput) ToAviatrixAwsGuardDutyMapOutputWithContext(ctx context.Context) AviatrixAwsGuardDutyMapOutput {
	return o
}

func (o AviatrixAwsGuardDutyMapOutput) MapIndex(k pulumi.StringInput) AviatrixAwsGuardDutyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AviatrixAwsGuardDuty {
		return vs[0].(map[string]*AviatrixAwsGuardDuty)[vs[1].(string)]
	}).(AviatrixAwsGuardDutyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixAwsGuardDutyInput)(nil)).Elem(), &AviatrixAwsGuardDuty{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixAwsGuardDutyArrayInput)(nil)).Elem(), AviatrixAwsGuardDutyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixAwsGuardDutyMapInput)(nil)).Elem(), AviatrixAwsGuardDutyMap{})
	pulumi.RegisterOutputType(AviatrixAwsGuardDutyOutput{})
	pulumi.RegisterOutputType(AviatrixAwsGuardDutyArrayOutput{})
	pulumi.RegisterOutputType(AviatrixAwsGuardDutyMapOutput{})
}
