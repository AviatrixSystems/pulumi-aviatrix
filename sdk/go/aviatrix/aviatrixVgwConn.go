// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aviatrix

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AviatrixVgwConn struct {
	pulumi.CustomResourceState

	// BGP local ASN (Autonomous System Number). Integer between 1-4294967294.
	BgpLocalAsNum pulumi.StringOutput `pulumi:"bgpLocalAsNum"`
	// Account of AWS's VGW that is used for this connection.
	BgpVgwAccount pulumi.StringOutput `pulumi:"bgpVgwAccount"`
	// Id of AWS's VGW that is used for this connection.
	BgpVgwId pulumi.StringOutput `pulumi:"bgpVgwId"`
	// Region of AWS's VGW that is used for this connection.
	BgpVgwRegion pulumi.StringOutput `pulumi:"bgpVgwRegion"`
	// The name of the VGW connection which is going to be created.
	ConnName pulumi.StringOutput `pulumi:"connName"`
	// Enable Event Triggered HA.
	EnableEventTriggeredHa pulumi.BoolPtrOutput `pulumi:"enableEventTriggeredHa"`
	// Enable learned CIDR approval for the connection. Requires the transit_gateway's 'learned_cidrs_approval_mode' attribute
	// be set to 'connection'. Valid values: true, false. Default value: false. Available as of provider version R2.18+.
	EnableLearnedCidrsApproval pulumi.BoolPtrOutput `pulumi:"enableLearnedCidrsApproval"`
	// Name of the Transit Gateway.
	GwName pulumi.StringOutput `pulumi:"gwName"`
	// Configure manual BGP advertised CIDRs for this connection. Available as of provider version R2.18+.
	ManualBgpAdvertisedCidrs pulumi.StringArrayOutput `pulumi:"manualBgpAdvertisedCidrs"`
	// Connection AS Path Prepend customized by specifying AS PATH for a BGP connection.
	PrependAsPaths pulumi.StringArrayOutput `pulumi:"prependAsPaths"`
	// VPC-ID where the Transit Gateway is located.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
}

// NewAviatrixVgwConn registers a new resource with the given unique name, arguments, and options.
func NewAviatrixVgwConn(ctx *pulumi.Context,
	name string, args *AviatrixVgwConnArgs, opts ...pulumi.ResourceOption) (*AviatrixVgwConn, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BgpLocalAsNum == nil {
		return nil, errors.New("invalid value for required argument 'BgpLocalAsNum'")
	}
	if args.BgpVgwAccount == nil {
		return nil, errors.New("invalid value for required argument 'BgpVgwAccount'")
	}
	if args.BgpVgwId == nil {
		return nil, errors.New("invalid value for required argument 'BgpVgwId'")
	}
	if args.BgpVgwRegion == nil {
		return nil, errors.New("invalid value for required argument 'BgpVgwRegion'")
	}
	if args.ConnName == nil {
		return nil, errors.New("invalid value for required argument 'ConnName'")
	}
	if args.GwName == nil {
		return nil, errors.New("invalid value for required argument 'GwName'")
	}
	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource AviatrixVgwConn
	err := ctx.RegisterResource("aviatrix:index/aviatrixVgwConn:AviatrixVgwConn", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAviatrixVgwConn gets an existing AviatrixVgwConn resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAviatrixVgwConn(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AviatrixVgwConnState, opts ...pulumi.ResourceOption) (*AviatrixVgwConn, error) {
	var resource AviatrixVgwConn
	err := ctx.ReadResource("aviatrix:index/aviatrixVgwConn:AviatrixVgwConn", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AviatrixVgwConn resources.
type aviatrixVgwConnState struct {
	// BGP local ASN (Autonomous System Number). Integer between 1-4294967294.
	BgpLocalAsNum *string `pulumi:"bgpLocalAsNum"`
	// Account of AWS's VGW that is used for this connection.
	BgpVgwAccount *string `pulumi:"bgpVgwAccount"`
	// Id of AWS's VGW that is used for this connection.
	BgpVgwId *string `pulumi:"bgpVgwId"`
	// Region of AWS's VGW that is used for this connection.
	BgpVgwRegion *string `pulumi:"bgpVgwRegion"`
	// The name of the VGW connection which is going to be created.
	ConnName *string `pulumi:"connName"`
	// Enable Event Triggered HA.
	EnableEventTriggeredHa *bool `pulumi:"enableEventTriggeredHa"`
	// Enable learned CIDR approval for the connection. Requires the transit_gateway's 'learned_cidrs_approval_mode' attribute
	// be set to 'connection'. Valid values: true, false. Default value: false. Available as of provider version R2.18+.
	EnableLearnedCidrsApproval *bool `pulumi:"enableLearnedCidrsApproval"`
	// Name of the Transit Gateway.
	GwName *string `pulumi:"gwName"`
	// Configure manual BGP advertised CIDRs for this connection. Available as of provider version R2.18+.
	ManualBgpAdvertisedCidrs []string `pulumi:"manualBgpAdvertisedCidrs"`
	// Connection AS Path Prepend customized by specifying AS PATH for a BGP connection.
	PrependAsPaths []string `pulumi:"prependAsPaths"`
	// VPC-ID where the Transit Gateway is located.
	VpcId *string `pulumi:"vpcId"`
}

type AviatrixVgwConnState struct {
	// BGP local ASN (Autonomous System Number). Integer between 1-4294967294.
	BgpLocalAsNum pulumi.StringPtrInput
	// Account of AWS's VGW that is used for this connection.
	BgpVgwAccount pulumi.StringPtrInput
	// Id of AWS's VGW that is used for this connection.
	BgpVgwId pulumi.StringPtrInput
	// Region of AWS's VGW that is used for this connection.
	BgpVgwRegion pulumi.StringPtrInput
	// The name of the VGW connection which is going to be created.
	ConnName pulumi.StringPtrInput
	// Enable Event Triggered HA.
	EnableEventTriggeredHa pulumi.BoolPtrInput
	// Enable learned CIDR approval for the connection. Requires the transit_gateway's 'learned_cidrs_approval_mode' attribute
	// be set to 'connection'. Valid values: true, false. Default value: false. Available as of provider version R2.18+.
	EnableLearnedCidrsApproval pulumi.BoolPtrInput
	// Name of the Transit Gateway.
	GwName pulumi.StringPtrInput
	// Configure manual BGP advertised CIDRs for this connection. Available as of provider version R2.18+.
	ManualBgpAdvertisedCidrs pulumi.StringArrayInput
	// Connection AS Path Prepend customized by specifying AS PATH for a BGP connection.
	PrependAsPaths pulumi.StringArrayInput
	// VPC-ID where the Transit Gateway is located.
	VpcId pulumi.StringPtrInput
}

func (AviatrixVgwConnState) ElementType() reflect.Type {
	return reflect.TypeOf((*aviatrixVgwConnState)(nil)).Elem()
}

type aviatrixVgwConnArgs struct {
	// BGP local ASN (Autonomous System Number). Integer between 1-4294967294.
	BgpLocalAsNum string `pulumi:"bgpLocalAsNum"`
	// Account of AWS's VGW that is used for this connection.
	BgpVgwAccount string `pulumi:"bgpVgwAccount"`
	// Id of AWS's VGW that is used for this connection.
	BgpVgwId string `pulumi:"bgpVgwId"`
	// Region of AWS's VGW that is used for this connection.
	BgpVgwRegion string `pulumi:"bgpVgwRegion"`
	// The name of the VGW connection which is going to be created.
	ConnName string `pulumi:"connName"`
	// Enable Event Triggered HA.
	EnableEventTriggeredHa *bool `pulumi:"enableEventTriggeredHa"`
	// Enable learned CIDR approval for the connection. Requires the transit_gateway's 'learned_cidrs_approval_mode' attribute
	// be set to 'connection'. Valid values: true, false. Default value: false. Available as of provider version R2.18+.
	EnableLearnedCidrsApproval *bool `pulumi:"enableLearnedCidrsApproval"`
	// Name of the Transit Gateway.
	GwName string `pulumi:"gwName"`
	// Configure manual BGP advertised CIDRs for this connection. Available as of provider version R2.18+.
	ManualBgpAdvertisedCidrs []string `pulumi:"manualBgpAdvertisedCidrs"`
	// Connection AS Path Prepend customized by specifying AS PATH for a BGP connection.
	PrependAsPaths []string `pulumi:"prependAsPaths"`
	// VPC-ID where the Transit Gateway is located.
	VpcId string `pulumi:"vpcId"`
}

// The set of arguments for constructing a AviatrixVgwConn resource.
type AviatrixVgwConnArgs struct {
	// BGP local ASN (Autonomous System Number). Integer between 1-4294967294.
	BgpLocalAsNum pulumi.StringInput
	// Account of AWS's VGW that is used for this connection.
	BgpVgwAccount pulumi.StringInput
	// Id of AWS's VGW that is used for this connection.
	BgpVgwId pulumi.StringInput
	// Region of AWS's VGW that is used for this connection.
	BgpVgwRegion pulumi.StringInput
	// The name of the VGW connection which is going to be created.
	ConnName pulumi.StringInput
	// Enable Event Triggered HA.
	EnableEventTriggeredHa pulumi.BoolPtrInput
	// Enable learned CIDR approval for the connection. Requires the transit_gateway's 'learned_cidrs_approval_mode' attribute
	// be set to 'connection'. Valid values: true, false. Default value: false. Available as of provider version R2.18+.
	EnableLearnedCidrsApproval pulumi.BoolPtrInput
	// Name of the Transit Gateway.
	GwName pulumi.StringInput
	// Configure manual BGP advertised CIDRs for this connection. Available as of provider version R2.18+.
	ManualBgpAdvertisedCidrs pulumi.StringArrayInput
	// Connection AS Path Prepend customized by specifying AS PATH for a BGP connection.
	PrependAsPaths pulumi.StringArrayInput
	// VPC-ID where the Transit Gateway is located.
	VpcId pulumi.StringInput
}

func (AviatrixVgwConnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*aviatrixVgwConnArgs)(nil)).Elem()
}

type AviatrixVgwConnInput interface {
	pulumi.Input

	ToAviatrixVgwConnOutput() AviatrixVgwConnOutput
	ToAviatrixVgwConnOutputWithContext(ctx context.Context) AviatrixVgwConnOutput
}

func (*AviatrixVgwConn) ElementType() reflect.Type {
	return reflect.TypeOf((**AviatrixVgwConn)(nil)).Elem()
}

func (i *AviatrixVgwConn) ToAviatrixVgwConnOutput() AviatrixVgwConnOutput {
	return i.ToAviatrixVgwConnOutputWithContext(context.Background())
}

func (i *AviatrixVgwConn) ToAviatrixVgwConnOutputWithContext(ctx context.Context) AviatrixVgwConnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixVgwConnOutput)
}

// AviatrixVgwConnArrayInput is an input type that accepts AviatrixVgwConnArray and AviatrixVgwConnArrayOutput values.
// You can construct a concrete instance of `AviatrixVgwConnArrayInput` via:
//
//	AviatrixVgwConnArray{ AviatrixVgwConnArgs{...} }
type AviatrixVgwConnArrayInput interface {
	pulumi.Input

	ToAviatrixVgwConnArrayOutput() AviatrixVgwConnArrayOutput
	ToAviatrixVgwConnArrayOutputWithContext(context.Context) AviatrixVgwConnArrayOutput
}

type AviatrixVgwConnArray []AviatrixVgwConnInput

func (AviatrixVgwConnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AviatrixVgwConn)(nil)).Elem()
}

func (i AviatrixVgwConnArray) ToAviatrixVgwConnArrayOutput() AviatrixVgwConnArrayOutput {
	return i.ToAviatrixVgwConnArrayOutputWithContext(context.Background())
}

func (i AviatrixVgwConnArray) ToAviatrixVgwConnArrayOutputWithContext(ctx context.Context) AviatrixVgwConnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixVgwConnArrayOutput)
}

// AviatrixVgwConnMapInput is an input type that accepts AviatrixVgwConnMap and AviatrixVgwConnMapOutput values.
// You can construct a concrete instance of `AviatrixVgwConnMapInput` via:
//
//	AviatrixVgwConnMap{ "key": AviatrixVgwConnArgs{...} }
type AviatrixVgwConnMapInput interface {
	pulumi.Input

	ToAviatrixVgwConnMapOutput() AviatrixVgwConnMapOutput
	ToAviatrixVgwConnMapOutputWithContext(context.Context) AviatrixVgwConnMapOutput
}

type AviatrixVgwConnMap map[string]AviatrixVgwConnInput

func (AviatrixVgwConnMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AviatrixVgwConn)(nil)).Elem()
}

func (i AviatrixVgwConnMap) ToAviatrixVgwConnMapOutput() AviatrixVgwConnMapOutput {
	return i.ToAviatrixVgwConnMapOutputWithContext(context.Background())
}

func (i AviatrixVgwConnMap) ToAviatrixVgwConnMapOutputWithContext(ctx context.Context) AviatrixVgwConnMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixVgwConnMapOutput)
}

type AviatrixVgwConnOutput struct{ *pulumi.OutputState }

func (AviatrixVgwConnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AviatrixVgwConn)(nil)).Elem()
}

func (o AviatrixVgwConnOutput) ToAviatrixVgwConnOutput() AviatrixVgwConnOutput {
	return o
}

func (o AviatrixVgwConnOutput) ToAviatrixVgwConnOutputWithContext(ctx context.Context) AviatrixVgwConnOutput {
	return o
}

// BGP local ASN (Autonomous System Number). Integer between 1-4294967294.
func (o AviatrixVgwConnOutput) BgpLocalAsNum() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixVgwConn) pulumi.StringOutput { return v.BgpLocalAsNum }).(pulumi.StringOutput)
}

// Account of AWS's VGW that is used for this connection.
func (o AviatrixVgwConnOutput) BgpVgwAccount() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixVgwConn) pulumi.StringOutput { return v.BgpVgwAccount }).(pulumi.StringOutput)
}

// Id of AWS's VGW that is used for this connection.
func (o AviatrixVgwConnOutput) BgpVgwId() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixVgwConn) pulumi.StringOutput { return v.BgpVgwId }).(pulumi.StringOutput)
}

// Region of AWS's VGW that is used for this connection.
func (o AviatrixVgwConnOutput) BgpVgwRegion() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixVgwConn) pulumi.StringOutput { return v.BgpVgwRegion }).(pulumi.StringOutput)
}

// The name of the VGW connection which is going to be created.
func (o AviatrixVgwConnOutput) ConnName() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixVgwConn) pulumi.StringOutput { return v.ConnName }).(pulumi.StringOutput)
}

// Enable Event Triggered HA.
func (o AviatrixVgwConnOutput) EnableEventTriggeredHa() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AviatrixVgwConn) pulumi.BoolPtrOutput { return v.EnableEventTriggeredHa }).(pulumi.BoolPtrOutput)
}

// Enable learned CIDR approval for the connection. Requires the transit_gateway's 'learned_cidrs_approval_mode' attribute
// be set to 'connection'. Valid values: true, false. Default value: false. Available as of provider version R2.18+.
func (o AviatrixVgwConnOutput) EnableLearnedCidrsApproval() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AviatrixVgwConn) pulumi.BoolPtrOutput { return v.EnableLearnedCidrsApproval }).(pulumi.BoolPtrOutput)
}

// Name of the Transit Gateway.
func (o AviatrixVgwConnOutput) GwName() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixVgwConn) pulumi.StringOutput { return v.GwName }).(pulumi.StringOutput)
}

// Configure manual BGP advertised CIDRs for this connection. Available as of provider version R2.18+.
func (o AviatrixVgwConnOutput) ManualBgpAdvertisedCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AviatrixVgwConn) pulumi.StringArrayOutput { return v.ManualBgpAdvertisedCidrs }).(pulumi.StringArrayOutput)
}

// Connection AS Path Prepend customized by specifying AS PATH for a BGP connection.
func (o AviatrixVgwConnOutput) PrependAsPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AviatrixVgwConn) pulumi.StringArrayOutput { return v.PrependAsPaths }).(pulumi.StringArrayOutput)
}

// VPC-ID where the Transit Gateway is located.
func (o AviatrixVgwConnOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixVgwConn) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

type AviatrixVgwConnArrayOutput struct{ *pulumi.OutputState }

func (AviatrixVgwConnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AviatrixVgwConn)(nil)).Elem()
}

func (o AviatrixVgwConnArrayOutput) ToAviatrixVgwConnArrayOutput() AviatrixVgwConnArrayOutput {
	return o
}

func (o AviatrixVgwConnArrayOutput) ToAviatrixVgwConnArrayOutputWithContext(ctx context.Context) AviatrixVgwConnArrayOutput {
	return o
}

func (o AviatrixVgwConnArrayOutput) Index(i pulumi.IntInput) AviatrixVgwConnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AviatrixVgwConn {
		return vs[0].([]*AviatrixVgwConn)[vs[1].(int)]
	}).(AviatrixVgwConnOutput)
}

type AviatrixVgwConnMapOutput struct{ *pulumi.OutputState }

func (AviatrixVgwConnMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AviatrixVgwConn)(nil)).Elem()
}

func (o AviatrixVgwConnMapOutput) ToAviatrixVgwConnMapOutput() AviatrixVgwConnMapOutput {
	return o
}

func (o AviatrixVgwConnMapOutput) ToAviatrixVgwConnMapOutputWithContext(ctx context.Context) AviatrixVgwConnMapOutput {
	return o
}

func (o AviatrixVgwConnMapOutput) MapIndex(k pulumi.StringInput) AviatrixVgwConnOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AviatrixVgwConn {
		return vs[0].(map[string]*AviatrixVgwConn)[vs[1].(string)]
	}).(AviatrixVgwConnOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixVgwConnInput)(nil)).Elem(), &AviatrixVgwConn{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixVgwConnArrayInput)(nil)).Elem(), AviatrixVgwConnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixVgwConnMapInput)(nil)).Elem(), AviatrixVgwConnMap{})
	pulumi.RegisterOutputType(AviatrixVgwConnOutput{})
	pulumi.RegisterOutputType(AviatrixVgwConnArrayOutput{})
	pulumi.RegisterOutputType(AviatrixVgwConnMapOutput{})
}
