// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aviatrix

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Import
//
// **site2cloud** can be imported using the `connection_name` and `vpc_id`, e.g.
//
// ```sh
//
//	$ pulumi import aviatrix:index/aviatrixSite2Cloud:AviatrixSite2Cloud test connection_name~vpc_id
//
// ```
type AviatrixSite2Cloud struct {
	pulumi.CustomResourceState

	// Authentication Type. Valid values: 'PSK' and 'Cert'. Default value: 'PSK'.
	AuthType pulumi.StringPtrOutput `pulumi:"authType"`
	// Backup gateway name. **NOTE: Please see notes here regarding HA requirements.**
	BackupGatewayName pulumi.StringPtrOutput `pulumi:"backupGatewayName"`
	// Backup local tunnel IP address. Only valid when HA enabled route based connection. Available as of provider version R2.19+.
	BackupLocalTunnelIp pulumi.StringPtrOutput `pulumi:"backupLocalTunnelIp"`
	// Backup Pre-Shared Key.
	BackupPreSharedKey pulumi.StringPtrOutput `pulumi:"backupPreSharedKey"`
	// Backup Remote Gateway IP. **NOTE: Please see notes here regarding HA requirements.**
	BackupRemoteGatewayIp pulumi.StringOutput `pulumi:"backupRemoteGatewayIp"`
	// Latitude of backup remote gateway. Does not support refresh.
	BackupRemoteGatewayLatitude pulumi.Float64PtrOutput `pulumi:"backupRemoteGatewayLatitude"`
	// Longitude of backup remote gateway. Does not support refresh.
	BackupRemoteGatewayLongitude pulumi.Float64PtrOutput `pulumi:"backupRemoteGatewayLongitude"`
	// Backup remote identifier. Required for Cert based authentication type with HA enabled. Example: "gw-10-10-0-116".
	BackupRemoteIdentifier pulumi.StringPtrOutput `pulumi:"backupRemoteIdentifier"`
	// Backup remote tunnel IP address. Only valid when HA enabled route based connection. Available as of provider version R2.19+.
	BackupRemoteTunnelIp pulumi.StringPtrOutput `pulumi:"backupRemoteTunnelIp"`
	// Name of Remote CA Certificate Tag for creating Site2Cloud tunnels. Required for Cert based authentication type.
	CaCertTagName pulumi.StringPtrOutput `pulumi:"caCertTagName"`
	// Site2Cloud connection name.
	ConnectionName pulumi.StringOutput `pulumi:"connectionName"`
	// Connection type. Valid Values: "mapped", "unmapped".
	ConnectionType pulumi.StringOutput `pulumi:"connectionType"`
	// Switch to enable custom/non-default algorithms for IPSec Authentication/Encryption. Valid values: true, false. **NOTE: Please see notes here for more information.**
	CustomAlgorithms pulumi.BoolPtrOutput `pulumi:"customAlgorithms"`
	// Enable custom mapped connection. Default value: false. Valid values: true/false. Available in provider version R2.17.1+.
	CustomMapped pulumi.BoolPtrOutput `pulumi:"customMapped"`
	// Enable/disable active active HA for an existing site2cloud connection. Valid values: true, false. Default value: false.
	EnableActiveActive pulumi.BoolPtrOutput `pulumi:"enableActiveActive"`
	// Enable/disable Deed Peer Detection for an existing site2cloud connection. Default value: true. **NOTE: Please see notes here in regards to any deltas found in your state with the addition of this argument in R1.9**
	EnableDeadPeerDetection pulumi.BoolPtrOutput `pulumi:"enableDeadPeerDetection"`
	// Enable Event Triggered HA. Default value: false. Valid values: true or false. Available as of provider version R2.19+.
	EnableEventTriggeredHa pulumi.BoolPtrOutput `pulumi:"enableEventTriggeredHa"`
	// Switch to enable IKEv2. Valid values: true, false. Default value: false.
	EnableIkev2 pulumi.BoolPtrOutput `pulumi:"enableIkev2"`
	// Enable single IP HA feature. Available as of provider version 2.19+.
	EnableSingleIpHa pulumi.BoolPtrOutput `pulumi:"enableSingleIpHa"`
	// Enable spoke gateway with mapped site2cloud configurations to forward traffic from site2cloud connection to Aviatrix Transit Gateway. Default value: false. Valid values: true or false. Available in provider version 2.17.2+.
	ForwardTrafficToTransit pulumi.BoolPtrOutput `pulumi:"forwardTrafficToTransit"`
	// Specify whether or not to enable HA. Valid Values: true, false. **NOTE: Please see notes here regarding HA requirements.**
	HaEnabled pulumi.BoolPtrOutput `pulumi:"haEnabled"`
	// List of Local Initiated Traffic Destination Real CIDRs.
	LocalDestinationRealCidrs pulumi.StringArrayOutput `pulumi:"localDestinationRealCidrs"`
	// List of Local Initiated Traffic Destination Virtual CIDRs.
	LocalDestinationVirtualCidrs pulumi.StringArrayOutput `pulumi:"localDestinationVirtualCidrs"`
	// List of Local Initiated Traffic Source Real CIDRs.
	LocalSourceRealCidrs pulumi.StringArrayOutput `pulumi:"localSourceRealCidrs"`
	// List of Local Initiated Traffic Source Virtual CIDRs.
	LocalSourceVirtualCidrs pulumi.StringArrayOutput `pulumi:"localSourceVirtualCidrs"`
	// Local subnet CIDR. **Required for connection type "mapped", except for `customMapped` connection.**
	LocalSubnetCidr pulumi.StringOutput `pulumi:"localSubnetCidr"`
	// Local subnet CIDR (Virtual). **Required for connection type "mapped", except for `customMapped` connection.**
	LocalSubnetVirtual pulumi.StringPtrOutput `pulumi:"localSubnetVirtual"`
	// Local tunnel IP address. Only valid for route based connection. Available as of provider version R2.19+.
	LocalTunnelIp pulumi.StringPtrOutput `pulumi:"localTunnelIp"`
	// Phase one Authentication. Valid values: "SHA-1", "SHA-256", "SHA-384" and "SHA-512". Default value: "SHA-256".
	Phase1Authentication pulumi.StringPtrOutput `pulumi:"phase1Authentication"`
	// Phase one DH Groups. Valid values: "1", "2", "5", "14", "15", "16", "17", "18", "19", "20" and "21". Default value: "14".
	Phase1DhGroups pulumi.StringPtrOutput `pulumi:"phase1DhGroups"`
	// Phase one Encryption. Valid values: "3DES", "AES-128-CBC", "AES-192-CBC", "AES-256-CBC", "AES-128-GCM-64", "AES-128-GCM-96", "AES-128-GCM-128", "AES-256-GCM-64", "AES-256-GCM-96", and "AES-256-GCM-128". Default value: "AES-256-CBC".
	Phase1Encryption pulumi.StringPtrOutput `pulumi:"phase1Encryption"`
	// Phase 1 remote identifier of the IPsec tunnel. This can be configured to be either the public IP address or the private IP address of the peer terminating the IPsec tunnel. Example: ["1.2.3.4"] when HA is disabled, ["1.2.3.4", "5.6.7.8"] when HA is enabled. Available as of provider version R2.19+.
	Phase1RemoteIdentifiers pulumi.StringArrayOutput `pulumi:"phase1RemoteIdentifiers"`
	// Phase two Authentication. Valid values: "NO-AUTH", "HMAC-SHA-1", "HMAC-SHA-256", "HMAC-SHA-384" and "HMAC-SHA-512". Default value: "HMAC-SHA-256".
	Phase2Authentication pulumi.StringPtrOutput `pulumi:"phase2Authentication"`
	// Phase two DH Groups. Valid values: "1", "2", "5", "14", "15", "16", "17", "18", "19", "20" and "21". Default value: "14".
	Phase2DhGroups pulumi.StringPtrOutput `pulumi:"phase2DhGroups"`
	// Phase two Encryption. Valid values: "3DES", "AES-128-CBC", "AES-192-CBC", "AES-256-CBC", "AES-128-GCM-64", "AES-128-GCM-96", "AES-128-GCM-128", "AES-256-GCM-64", "AES-256-GCM-96", "AES-256-GCM-128" and "NULL-ENCR". Default value: "AES-256-CBC".
	Phase2Encryption pulumi.StringPtrOutput `pulumi:"phase2Encryption"`
	// Pre-Shared Key.
	PreSharedKey pulumi.StringPtrOutput `pulumi:"preSharedKey"`
	// Primary cloud gateway name.
	PrimaryCloudGatewayName pulumi.StringOutput `pulumi:"primaryCloudGatewayName"`
	// Private route encryption switch. Valid values: true, false.
	PrivateRouteEncryption pulumi.BoolPtrOutput `pulumi:"privateRouteEncryption"`
	// List of  Remote Initiated Traffic Destination Real CIDRs.
	RemoteDestinationRealCidrs pulumi.StringArrayOutput `pulumi:"remoteDestinationRealCidrs"`
	// List of Remote Initiated Traffic Destination Virtual CIDRs.
	RemoteDestinationVirtualCidrs pulumi.StringArrayOutput `pulumi:"remoteDestinationVirtualCidrs"`
	// Remote gateway IP.
	RemoteGatewayIp pulumi.StringOutput `pulumi:"remoteGatewayIp"`
	// Latitude of remote gateway. Does not support refresh.
	RemoteGatewayLatitude pulumi.Float64PtrOutput `pulumi:"remoteGatewayLatitude"`
	// Longitude of remote gateway. Does not support refresh.
	RemoteGatewayLongitude pulumi.Float64PtrOutput `pulumi:"remoteGatewayLongitude"`
	// Remote gateway type. Valid Values: "generic", "avx", "aws", "azure", "sonicwall", "oracle".
	RemoteGatewayType pulumi.StringOutput `pulumi:"remoteGatewayType"`
	// Remote identifier. Required for Cert based authentication type. Example: "gw-10-10-0-115".
	RemoteIdentifier pulumi.StringPtrOutput `pulumi:"remoteIdentifier"`
	// List of Remote Initiated Traffic Source Real CIDRs.
	RemoteSourceRealCidrs pulumi.StringArrayOutput `pulumi:"remoteSourceRealCidrs"`
	// List of Remote Initiated Traffic Source Virtual CIDRs.
	RemoteSourceVirtualCidrs pulumi.StringArrayOutput `pulumi:"remoteSourceVirtualCidrs"`
	// Remote subnet CIDR. **Not required for customMapped connection.**
	RemoteSubnetCidr pulumi.StringPtrOutput `pulumi:"remoteSubnetCidr"`
	// Remote subnet CIDR (Virtual). **Required for connection type "mapped", except for `customMapped` connection.**
	RemoteSubnetVirtual pulumi.StringPtrOutput `pulumi:"remoteSubnetVirtual"`
	// Remote tunnel IP address. Only valid for route based connection. Available as of provider version R2.19+.
	RemoteTunnelIp pulumi.StringPtrOutput `pulumi:"remoteTunnelIp"`
	// Route tables to modify.
	RouteTableLists pulumi.StringArrayOutput `pulumi:"routeTableLists"`
	// Specify ssl_server_pool. Default value: "192.168.44.0/24". **NOTE: Please see notes here for more information.**
	SslServerPool pulumi.StringPtrOutput `pulumi:"sslServerPool"`
	// Site2Cloud tunnel type. Valid Values: "policy", "route".
	TunnelType pulumi.StringOutput `pulumi:"tunnelType"`
	// VPC ID of the cloud gateway.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
}

// NewAviatrixSite2Cloud registers a new resource with the given unique name, arguments, and options.
func NewAviatrixSite2Cloud(ctx *pulumi.Context,
	name string, args *AviatrixSite2CloudArgs, opts ...pulumi.ResourceOption) (*AviatrixSite2Cloud, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConnectionName == nil {
		return nil, errors.New("invalid value for required argument 'ConnectionName'")
	}
	if args.ConnectionType == nil {
		return nil, errors.New("invalid value for required argument 'ConnectionType'")
	}
	if args.PrimaryCloudGatewayName == nil {
		return nil, errors.New("invalid value for required argument 'PrimaryCloudGatewayName'")
	}
	if args.RemoteGatewayIp == nil {
		return nil, errors.New("invalid value for required argument 'RemoteGatewayIp'")
	}
	if args.RemoteGatewayType == nil {
		return nil, errors.New("invalid value for required argument 'RemoteGatewayType'")
	}
	if args.TunnelType == nil {
		return nil, errors.New("invalid value for required argument 'TunnelType'")
	}
	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	if args.BackupPreSharedKey != nil {
		args.BackupPreSharedKey = pulumi.ToSecret(args.BackupPreSharedKey).(pulumi.StringPtrOutput)
	}
	if args.PreSharedKey != nil {
		args.PreSharedKey = pulumi.ToSecret(args.PreSharedKey).(pulumi.StringPtrOutput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"backupPreSharedKey",
		"preSharedKey",
	})
	opts = append(opts, secrets)
	opts = pkgResourceDefaultOpts(opts)
	var resource AviatrixSite2Cloud
	err := ctx.RegisterResource("aviatrix:index/aviatrixSite2Cloud:AviatrixSite2Cloud", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAviatrixSite2Cloud gets an existing AviatrixSite2Cloud resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAviatrixSite2Cloud(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AviatrixSite2CloudState, opts ...pulumi.ResourceOption) (*AviatrixSite2Cloud, error) {
	var resource AviatrixSite2Cloud
	err := ctx.ReadResource("aviatrix:index/aviatrixSite2Cloud:AviatrixSite2Cloud", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AviatrixSite2Cloud resources.
type aviatrixSite2CloudState struct {
	// Authentication Type. Valid values: 'PSK' and 'Cert'. Default value: 'PSK'.
	AuthType *string `pulumi:"authType"`
	// Backup gateway name. **NOTE: Please see notes here regarding HA requirements.**
	BackupGatewayName *string `pulumi:"backupGatewayName"`
	// Backup local tunnel IP address. Only valid when HA enabled route based connection. Available as of provider version R2.19+.
	BackupLocalTunnelIp *string `pulumi:"backupLocalTunnelIp"`
	// Backup Pre-Shared Key.
	BackupPreSharedKey *string `pulumi:"backupPreSharedKey"`
	// Backup Remote Gateway IP. **NOTE: Please see notes here regarding HA requirements.**
	BackupRemoteGatewayIp *string `pulumi:"backupRemoteGatewayIp"`
	// Latitude of backup remote gateway. Does not support refresh.
	BackupRemoteGatewayLatitude *float64 `pulumi:"backupRemoteGatewayLatitude"`
	// Longitude of backup remote gateway. Does not support refresh.
	BackupRemoteGatewayLongitude *float64 `pulumi:"backupRemoteGatewayLongitude"`
	// Backup remote identifier. Required for Cert based authentication type with HA enabled. Example: "gw-10-10-0-116".
	BackupRemoteIdentifier *string `pulumi:"backupRemoteIdentifier"`
	// Backup remote tunnel IP address. Only valid when HA enabled route based connection. Available as of provider version R2.19+.
	BackupRemoteTunnelIp *string `pulumi:"backupRemoteTunnelIp"`
	// Name of Remote CA Certificate Tag for creating Site2Cloud tunnels. Required for Cert based authentication type.
	CaCertTagName *string `pulumi:"caCertTagName"`
	// Site2Cloud connection name.
	ConnectionName *string `pulumi:"connectionName"`
	// Connection type. Valid Values: "mapped", "unmapped".
	ConnectionType *string `pulumi:"connectionType"`
	// Switch to enable custom/non-default algorithms for IPSec Authentication/Encryption. Valid values: true, false. **NOTE: Please see notes here for more information.**
	CustomAlgorithms *bool `pulumi:"customAlgorithms"`
	// Enable custom mapped connection. Default value: false. Valid values: true/false. Available in provider version R2.17.1+.
	CustomMapped *bool `pulumi:"customMapped"`
	// Enable/disable active active HA for an existing site2cloud connection. Valid values: true, false. Default value: false.
	EnableActiveActive *bool `pulumi:"enableActiveActive"`
	// Enable/disable Deed Peer Detection for an existing site2cloud connection. Default value: true. **NOTE: Please see notes here in regards to any deltas found in your state with the addition of this argument in R1.9**
	EnableDeadPeerDetection *bool `pulumi:"enableDeadPeerDetection"`
	// Enable Event Triggered HA. Default value: false. Valid values: true or false. Available as of provider version R2.19+.
	EnableEventTriggeredHa *bool `pulumi:"enableEventTriggeredHa"`
	// Switch to enable IKEv2. Valid values: true, false. Default value: false.
	EnableIkev2 *bool `pulumi:"enableIkev2"`
	// Enable single IP HA feature. Available as of provider version 2.19+.
	EnableSingleIpHa *bool `pulumi:"enableSingleIpHa"`
	// Enable spoke gateway with mapped site2cloud configurations to forward traffic from site2cloud connection to Aviatrix Transit Gateway. Default value: false. Valid values: true or false. Available in provider version 2.17.2+.
	ForwardTrafficToTransit *bool `pulumi:"forwardTrafficToTransit"`
	// Specify whether or not to enable HA. Valid Values: true, false. **NOTE: Please see notes here regarding HA requirements.**
	HaEnabled *bool `pulumi:"haEnabled"`
	// List of Local Initiated Traffic Destination Real CIDRs.
	LocalDestinationRealCidrs []string `pulumi:"localDestinationRealCidrs"`
	// List of Local Initiated Traffic Destination Virtual CIDRs.
	LocalDestinationVirtualCidrs []string `pulumi:"localDestinationVirtualCidrs"`
	// List of Local Initiated Traffic Source Real CIDRs.
	LocalSourceRealCidrs []string `pulumi:"localSourceRealCidrs"`
	// List of Local Initiated Traffic Source Virtual CIDRs.
	LocalSourceVirtualCidrs []string `pulumi:"localSourceVirtualCidrs"`
	// Local subnet CIDR. **Required for connection type "mapped", except for `customMapped` connection.**
	LocalSubnetCidr *string `pulumi:"localSubnetCidr"`
	// Local subnet CIDR (Virtual). **Required for connection type "mapped", except for `customMapped` connection.**
	LocalSubnetVirtual *string `pulumi:"localSubnetVirtual"`
	// Local tunnel IP address. Only valid for route based connection. Available as of provider version R2.19+.
	LocalTunnelIp *string `pulumi:"localTunnelIp"`
	// Phase one Authentication. Valid values: "SHA-1", "SHA-256", "SHA-384" and "SHA-512". Default value: "SHA-256".
	Phase1Authentication *string `pulumi:"phase1Authentication"`
	// Phase one DH Groups. Valid values: "1", "2", "5", "14", "15", "16", "17", "18", "19", "20" and "21". Default value: "14".
	Phase1DhGroups *string `pulumi:"phase1DhGroups"`
	// Phase one Encryption. Valid values: "3DES", "AES-128-CBC", "AES-192-CBC", "AES-256-CBC", "AES-128-GCM-64", "AES-128-GCM-96", "AES-128-GCM-128", "AES-256-GCM-64", "AES-256-GCM-96", and "AES-256-GCM-128". Default value: "AES-256-CBC".
	Phase1Encryption *string `pulumi:"phase1Encryption"`
	// Phase 1 remote identifier of the IPsec tunnel. This can be configured to be either the public IP address or the private IP address of the peer terminating the IPsec tunnel. Example: ["1.2.3.4"] when HA is disabled, ["1.2.3.4", "5.6.7.8"] when HA is enabled. Available as of provider version R2.19+.
	Phase1RemoteIdentifiers []string `pulumi:"phase1RemoteIdentifiers"`
	// Phase two Authentication. Valid values: "NO-AUTH", "HMAC-SHA-1", "HMAC-SHA-256", "HMAC-SHA-384" and "HMAC-SHA-512". Default value: "HMAC-SHA-256".
	Phase2Authentication *string `pulumi:"phase2Authentication"`
	// Phase two DH Groups. Valid values: "1", "2", "5", "14", "15", "16", "17", "18", "19", "20" and "21". Default value: "14".
	Phase2DhGroups *string `pulumi:"phase2DhGroups"`
	// Phase two Encryption. Valid values: "3DES", "AES-128-CBC", "AES-192-CBC", "AES-256-CBC", "AES-128-GCM-64", "AES-128-GCM-96", "AES-128-GCM-128", "AES-256-GCM-64", "AES-256-GCM-96", "AES-256-GCM-128" and "NULL-ENCR". Default value: "AES-256-CBC".
	Phase2Encryption *string `pulumi:"phase2Encryption"`
	// Pre-Shared Key.
	PreSharedKey *string `pulumi:"preSharedKey"`
	// Primary cloud gateway name.
	PrimaryCloudGatewayName *string `pulumi:"primaryCloudGatewayName"`
	// Private route encryption switch. Valid values: true, false.
	PrivateRouteEncryption *bool `pulumi:"privateRouteEncryption"`
	// List of  Remote Initiated Traffic Destination Real CIDRs.
	RemoteDestinationRealCidrs []string `pulumi:"remoteDestinationRealCidrs"`
	// List of Remote Initiated Traffic Destination Virtual CIDRs.
	RemoteDestinationVirtualCidrs []string `pulumi:"remoteDestinationVirtualCidrs"`
	// Remote gateway IP.
	RemoteGatewayIp *string `pulumi:"remoteGatewayIp"`
	// Latitude of remote gateway. Does not support refresh.
	RemoteGatewayLatitude *float64 `pulumi:"remoteGatewayLatitude"`
	// Longitude of remote gateway. Does not support refresh.
	RemoteGatewayLongitude *float64 `pulumi:"remoteGatewayLongitude"`
	// Remote gateway type. Valid Values: "generic", "avx", "aws", "azure", "sonicwall", "oracle".
	RemoteGatewayType *string `pulumi:"remoteGatewayType"`
	// Remote identifier. Required for Cert based authentication type. Example: "gw-10-10-0-115".
	RemoteIdentifier *string `pulumi:"remoteIdentifier"`
	// List of Remote Initiated Traffic Source Real CIDRs.
	RemoteSourceRealCidrs []string `pulumi:"remoteSourceRealCidrs"`
	// List of Remote Initiated Traffic Source Virtual CIDRs.
	RemoteSourceVirtualCidrs []string `pulumi:"remoteSourceVirtualCidrs"`
	// Remote subnet CIDR. **Not required for customMapped connection.**
	RemoteSubnetCidr *string `pulumi:"remoteSubnetCidr"`
	// Remote subnet CIDR (Virtual). **Required for connection type "mapped", except for `customMapped` connection.**
	RemoteSubnetVirtual *string `pulumi:"remoteSubnetVirtual"`
	// Remote tunnel IP address. Only valid for route based connection. Available as of provider version R2.19+.
	RemoteTunnelIp *string `pulumi:"remoteTunnelIp"`
	// Route tables to modify.
	RouteTableLists []string `pulumi:"routeTableLists"`
	// Specify ssl_server_pool. Default value: "192.168.44.0/24". **NOTE: Please see notes here for more information.**
	SslServerPool *string `pulumi:"sslServerPool"`
	// Site2Cloud tunnel type. Valid Values: "policy", "route".
	TunnelType *string `pulumi:"tunnelType"`
	// VPC ID of the cloud gateway.
	VpcId *string `pulumi:"vpcId"`
}

type AviatrixSite2CloudState struct {
	// Authentication Type. Valid values: 'PSK' and 'Cert'. Default value: 'PSK'.
	AuthType pulumi.StringPtrInput
	// Backup gateway name. **NOTE: Please see notes here regarding HA requirements.**
	BackupGatewayName pulumi.StringPtrInput
	// Backup local tunnel IP address. Only valid when HA enabled route based connection. Available as of provider version R2.19+.
	BackupLocalTunnelIp pulumi.StringPtrInput
	// Backup Pre-Shared Key.
	BackupPreSharedKey pulumi.StringPtrInput
	// Backup Remote Gateway IP. **NOTE: Please see notes here regarding HA requirements.**
	BackupRemoteGatewayIp pulumi.StringPtrInput
	// Latitude of backup remote gateway. Does not support refresh.
	BackupRemoteGatewayLatitude pulumi.Float64PtrInput
	// Longitude of backup remote gateway. Does not support refresh.
	BackupRemoteGatewayLongitude pulumi.Float64PtrInput
	// Backup remote identifier. Required for Cert based authentication type with HA enabled. Example: "gw-10-10-0-116".
	BackupRemoteIdentifier pulumi.StringPtrInput
	// Backup remote tunnel IP address. Only valid when HA enabled route based connection. Available as of provider version R2.19+.
	BackupRemoteTunnelIp pulumi.StringPtrInput
	// Name of Remote CA Certificate Tag for creating Site2Cloud tunnels. Required for Cert based authentication type.
	CaCertTagName pulumi.StringPtrInput
	// Site2Cloud connection name.
	ConnectionName pulumi.StringPtrInput
	// Connection type. Valid Values: "mapped", "unmapped".
	ConnectionType pulumi.StringPtrInput
	// Switch to enable custom/non-default algorithms for IPSec Authentication/Encryption. Valid values: true, false. **NOTE: Please see notes here for more information.**
	CustomAlgorithms pulumi.BoolPtrInput
	// Enable custom mapped connection. Default value: false. Valid values: true/false. Available in provider version R2.17.1+.
	CustomMapped pulumi.BoolPtrInput
	// Enable/disable active active HA for an existing site2cloud connection. Valid values: true, false. Default value: false.
	EnableActiveActive pulumi.BoolPtrInput
	// Enable/disable Deed Peer Detection for an existing site2cloud connection. Default value: true. **NOTE: Please see notes here in regards to any deltas found in your state with the addition of this argument in R1.9**
	EnableDeadPeerDetection pulumi.BoolPtrInput
	// Enable Event Triggered HA. Default value: false. Valid values: true or false. Available as of provider version R2.19+.
	EnableEventTriggeredHa pulumi.BoolPtrInput
	// Switch to enable IKEv2. Valid values: true, false. Default value: false.
	EnableIkev2 pulumi.BoolPtrInput
	// Enable single IP HA feature. Available as of provider version 2.19+.
	EnableSingleIpHa pulumi.BoolPtrInput
	// Enable spoke gateway with mapped site2cloud configurations to forward traffic from site2cloud connection to Aviatrix Transit Gateway. Default value: false. Valid values: true or false. Available in provider version 2.17.2+.
	ForwardTrafficToTransit pulumi.BoolPtrInput
	// Specify whether or not to enable HA. Valid Values: true, false. **NOTE: Please see notes here regarding HA requirements.**
	HaEnabled pulumi.BoolPtrInput
	// List of Local Initiated Traffic Destination Real CIDRs.
	LocalDestinationRealCidrs pulumi.StringArrayInput
	// List of Local Initiated Traffic Destination Virtual CIDRs.
	LocalDestinationVirtualCidrs pulumi.StringArrayInput
	// List of Local Initiated Traffic Source Real CIDRs.
	LocalSourceRealCidrs pulumi.StringArrayInput
	// List of Local Initiated Traffic Source Virtual CIDRs.
	LocalSourceVirtualCidrs pulumi.StringArrayInput
	// Local subnet CIDR. **Required for connection type "mapped", except for `customMapped` connection.**
	LocalSubnetCidr pulumi.StringPtrInput
	// Local subnet CIDR (Virtual). **Required for connection type "mapped", except for `customMapped` connection.**
	LocalSubnetVirtual pulumi.StringPtrInput
	// Local tunnel IP address. Only valid for route based connection. Available as of provider version R2.19+.
	LocalTunnelIp pulumi.StringPtrInput
	// Phase one Authentication. Valid values: "SHA-1", "SHA-256", "SHA-384" and "SHA-512". Default value: "SHA-256".
	Phase1Authentication pulumi.StringPtrInput
	// Phase one DH Groups. Valid values: "1", "2", "5", "14", "15", "16", "17", "18", "19", "20" and "21". Default value: "14".
	Phase1DhGroups pulumi.StringPtrInput
	// Phase one Encryption. Valid values: "3DES", "AES-128-CBC", "AES-192-CBC", "AES-256-CBC", "AES-128-GCM-64", "AES-128-GCM-96", "AES-128-GCM-128", "AES-256-GCM-64", "AES-256-GCM-96", and "AES-256-GCM-128". Default value: "AES-256-CBC".
	Phase1Encryption pulumi.StringPtrInput
	// Phase 1 remote identifier of the IPsec tunnel. This can be configured to be either the public IP address or the private IP address of the peer terminating the IPsec tunnel. Example: ["1.2.3.4"] when HA is disabled, ["1.2.3.4", "5.6.7.8"] when HA is enabled. Available as of provider version R2.19+.
	Phase1RemoteIdentifiers pulumi.StringArrayInput
	// Phase two Authentication. Valid values: "NO-AUTH", "HMAC-SHA-1", "HMAC-SHA-256", "HMAC-SHA-384" and "HMAC-SHA-512". Default value: "HMAC-SHA-256".
	Phase2Authentication pulumi.StringPtrInput
	// Phase two DH Groups. Valid values: "1", "2", "5", "14", "15", "16", "17", "18", "19", "20" and "21". Default value: "14".
	Phase2DhGroups pulumi.StringPtrInput
	// Phase two Encryption. Valid values: "3DES", "AES-128-CBC", "AES-192-CBC", "AES-256-CBC", "AES-128-GCM-64", "AES-128-GCM-96", "AES-128-GCM-128", "AES-256-GCM-64", "AES-256-GCM-96", "AES-256-GCM-128" and "NULL-ENCR". Default value: "AES-256-CBC".
	Phase2Encryption pulumi.StringPtrInput
	// Pre-Shared Key.
	PreSharedKey pulumi.StringPtrInput
	// Primary cloud gateway name.
	PrimaryCloudGatewayName pulumi.StringPtrInput
	// Private route encryption switch. Valid values: true, false.
	PrivateRouteEncryption pulumi.BoolPtrInput
	// List of  Remote Initiated Traffic Destination Real CIDRs.
	RemoteDestinationRealCidrs pulumi.StringArrayInput
	// List of Remote Initiated Traffic Destination Virtual CIDRs.
	RemoteDestinationVirtualCidrs pulumi.StringArrayInput
	// Remote gateway IP.
	RemoteGatewayIp pulumi.StringPtrInput
	// Latitude of remote gateway. Does not support refresh.
	RemoteGatewayLatitude pulumi.Float64PtrInput
	// Longitude of remote gateway. Does not support refresh.
	RemoteGatewayLongitude pulumi.Float64PtrInput
	// Remote gateway type. Valid Values: "generic", "avx", "aws", "azure", "sonicwall", "oracle".
	RemoteGatewayType pulumi.StringPtrInput
	// Remote identifier. Required for Cert based authentication type. Example: "gw-10-10-0-115".
	RemoteIdentifier pulumi.StringPtrInput
	// List of Remote Initiated Traffic Source Real CIDRs.
	RemoteSourceRealCidrs pulumi.StringArrayInput
	// List of Remote Initiated Traffic Source Virtual CIDRs.
	RemoteSourceVirtualCidrs pulumi.StringArrayInput
	// Remote subnet CIDR. **Not required for customMapped connection.**
	RemoteSubnetCidr pulumi.StringPtrInput
	// Remote subnet CIDR (Virtual). **Required for connection type "mapped", except for `customMapped` connection.**
	RemoteSubnetVirtual pulumi.StringPtrInput
	// Remote tunnel IP address. Only valid for route based connection. Available as of provider version R2.19+.
	RemoteTunnelIp pulumi.StringPtrInput
	// Route tables to modify.
	RouteTableLists pulumi.StringArrayInput
	// Specify ssl_server_pool. Default value: "192.168.44.0/24". **NOTE: Please see notes here for more information.**
	SslServerPool pulumi.StringPtrInput
	// Site2Cloud tunnel type. Valid Values: "policy", "route".
	TunnelType pulumi.StringPtrInput
	// VPC ID of the cloud gateway.
	VpcId pulumi.StringPtrInput
}

func (AviatrixSite2CloudState) ElementType() reflect.Type {
	return reflect.TypeOf((*aviatrixSite2CloudState)(nil)).Elem()
}

type aviatrixSite2CloudArgs struct {
	// Authentication Type. Valid values: 'PSK' and 'Cert'. Default value: 'PSK'.
	AuthType *string `pulumi:"authType"`
	// Backup gateway name. **NOTE: Please see notes here regarding HA requirements.**
	BackupGatewayName *string `pulumi:"backupGatewayName"`
	// Backup local tunnel IP address. Only valid when HA enabled route based connection. Available as of provider version R2.19+.
	BackupLocalTunnelIp *string `pulumi:"backupLocalTunnelIp"`
	// Backup Pre-Shared Key.
	BackupPreSharedKey *string `pulumi:"backupPreSharedKey"`
	// Backup Remote Gateway IP. **NOTE: Please see notes here regarding HA requirements.**
	BackupRemoteGatewayIp *string `pulumi:"backupRemoteGatewayIp"`
	// Latitude of backup remote gateway. Does not support refresh.
	BackupRemoteGatewayLatitude *float64 `pulumi:"backupRemoteGatewayLatitude"`
	// Longitude of backup remote gateway. Does not support refresh.
	BackupRemoteGatewayLongitude *float64 `pulumi:"backupRemoteGatewayLongitude"`
	// Backup remote identifier. Required for Cert based authentication type with HA enabled. Example: "gw-10-10-0-116".
	BackupRemoteIdentifier *string `pulumi:"backupRemoteIdentifier"`
	// Backup remote tunnel IP address. Only valid when HA enabled route based connection. Available as of provider version R2.19+.
	BackupRemoteTunnelIp *string `pulumi:"backupRemoteTunnelIp"`
	// Name of Remote CA Certificate Tag for creating Site2Cloud tunnels. Required for Cert based authentication type.
	CaCertTagName *string `pulumi:"caCertTagName"`
	// Site2Cloud connection name.
	ConnectionName string `pulumi:"connectionName"`
	// Connection type. Valid Values: "mapped", "unmapped".
	ConnectionType string `pulumi:"connectionType"`
	// Switch to enable custom/non-default algorithms for IPSec Authentication/Encryption. Valid values: true, false. **NOTE: Please see notes here for more information.**
	CustomAlgorithms *bool `pulumi:"customAlgorithms"`
	// Enable custom mapped connection. Default value: false. Valid values: true/false. Available in provider version R2.17.1+.
	CustomMapped *bool `pulumi:"customMapped"`
	// Enable/disable active active HA for an existing site2cloud connection. Valid values: true, false. Default value: false.
	EnableActiveActive *bool `pulumi:"enableActiveActive"`
	// Enable/disable Deed Peer Detection for an existing site2cloud connection. Default value: true. **NOTE: Please see notes here in regards to any deltas found in your state with the addition of this argument in R1.9**
	EnableDeadPeerDetection *bool `pulumi:"enableDeadPeerDetection"`
	// Enable Event Triggered HA. Default value: false. Valid values: true or false. Available as of provider version R2.19+.
	EnableEventTriggeredHa *bool `pulumi:"enableEventTriggeredHa"`
	// Switch to enable IKEv2. Valid values: true, false. Default value: false.
	EnableIkev2 *bool `pulumi:"enableIkev2"`
	// Enable single IP HA feature. Available as of provider version 2.19+.
	EnableSingleIpHa *bool `pulumi:"enableSingleIpHa"`
	// Enable spoke gateway with mapped site2cloud configurations to forward traffic from site2cloud connection to Aviatrix Transit Gateway. Default value: false. Valid values: true or false. Available in provider version 2.17.2+.
	ForwardTrafficToTransit *bool `pulumi:"forwardTrafficToTransit"`
	// Specify whether or not to enable HA. Valid Values: true, false. **NOTE: Please see notes here regarding HA requirements.**
	HaEnabled *bool `pulumi:"haEnabled"`
	// List of Local Initiated Traffic Destination Real CIDRs.
	LocalDestinationRealCidrs []string `pulumi:"localDestinationRealCidrs"`
	// List of Local Initiated Traffic Destination Virtual CIDRs.
	LocalDestinationVirtualCidrs []string `pulumi:"localDestinationVirtualCidrs"`
	// List of Local Initiated Traffic Source Real CIDRs.
	LocalSourceRealCidrs []string `pulumi:"localSourceRealCidrs"`
	// List of Local Initiated Traffic Source Virtual CIDRs.
	LocalSourceVirtualCidrs []string `pulumi:"localSourceVirtualCidrs"`
	// Local subnet CIDR. **Required for connection type "mapped", except for `customMapped` connection.**
	LocalSubnetCidr *string `pulumi:"localSubnetCidr"`
	// Local subnet CIDR (Virtual). **Required for connection type "mapped", except for `customMapped` connection.**
	LocalSubnetVirtual *string `pulumi:"localSubnetVirtual"`
	// Local tunnel IP address. Only valid for route based connection. Available as of provider version R2.19+.
	LocalTunnelIp *string `pulumi:"localTunnelIp"`
	// Phase one Authentication. Valid values: "SHA-1", "SHA-256", "SHA-384" and "SHA-512". Default value: "SHA-256".
	Phase1Authentication *string `pulumi:"phase1Authentication"`
	// Phase one DH Groups. Valid values: "1", "2", "5", "14", "15", "16", "17", "18", "19", "20" and "21". Default value: "14".
	Phase1DhGroups *string `pulumi:"phase1DhGroups"`
	// Phase one Encryption. Valid values: "3DES", "AES-128-CBC", "AES-192-CBC", "AES-256-CBC", "AES-128-GCM-64", "AES-128-GCM-96", "AES-128-GCM-128", "AES-256-GCM-64", "AES-256-GCM-96", and "AES-256-GCM-128". Default value: "AES-256-CBC".
	Phase1Encryption *string `pulumi:"phase1Encryption"`
	// Phase 1 remote identifier of the IPsec tunnel. This can be configured to be either the public IP address or the private IP address of the peer terminating the IPsec tunnel. Example: ["1.2.3.4"] when HA is disabled, ["1.2.3.4", "5.6.7.8"] when HA is enabled. Available as of provider version R2.19+.
	Phase1RemoteIdentifiers []string `pulumi:"phase1RemoteIdentifiers"`
	// Phase two Authentication. Valid values: "NO-AUTH", "HMAC-SHA-1", "HMAC-SHA-256", "HMAC-SHA-384" and "HMAC-SHA-512". Default value: "HMAC-SHA-256".
	Phase2Authentication *string `pulumi:"phase2Authentication"`
	// Phase two DH Groups. Valid values: "1", "2", "5", "14", "15", "16", "17", "18", "19", "20" and "21". Default value: "14".
	Phase2DhGroups *string `pulumi:"phase2DhGroups"`
	// Phase two Encryption. Valid values: "3DES", "AES-128-CBC", "AES-192-CBC", "AES-256-CBC", "AES-128-GCM-64", "AES-128-GCM-96", "AES-128-GCM-128", "AES-256-GCM-64", "AES-256-GCM-96", "AES-256-GCM-128" and "NULL-ENCR". Default value: "AES-256-CBC".
	Phase2Encryption *string `pulumi:"phase2Encryption"`
	// Pre-Shared Key.
	PreSharedKey *string `pulumi:"preSharedKey"`
	// Primary cloud gateway name.
	PrimaryCloudGatewayName string `pulumi:"primaryCloudGatewayName"`
	// Private route encryption switch. Valid values: true, false.
	PrivateRouteEncryption *bool `pulumi:"privateRouteEncryption"`
	// List of  Remote Initiated Traffic Destination Real CIDRs.
	RemoteDestinationRealCidrs []string `pulumi:"remoteDestinationRealCidrs"`
	// List of Remote Initiated Traffic Destination Virtual CIDRs.
	RemoteDestinationVirtualCidrs []string `pulumi:"remoteDestinationVirtualCidrs"`
	// Remote gateway IP.
	RemoteGatewayIp string `pulumi:"remoteGatewayIp"`
	// Latitude of remote gateway. Does not support refresh.
	RemoteGatewayLatitude *float64 `pulumi:"remoteGatewayLatitude"`
	// Longitude of remote gateway. Does not support refresh.
	RemoteGatewayLongitude *float64 `pulumi:"remoteGatewayLongitude"`
	// Remote gateway type. Valid Values: "generic", "avx", "aws", "azure", "sonicwall", "oracle".
	RemoteGatewayType string `pulumi:"remoteGatewayType"`
	// Remote identifier. Required for Cert based authentication type. Example: "gw-10-10-0-115".
	RemoteIdentifier *string `pulumi:"remoteIdentifier"`
	// List of Remote Initiated Traffic Source Real CIDRs.
	RemoteSourceRealCidrs []string `pulumi:"remoteSourceRealCidrs"`
	// List of Remote Initiated Traffic Source Virtual CIDRs.
	RemoteSourceVirtualCidrs []string `pulumi:"remoteSourceVirtualCidrs"`
	// Remote subnet CIDR. **Not required for customMapped connection.**
	RemoteSubnetCidr *string `pulumi:"remoteSubnetCidr"`
	// Remote subnet CIDR (Virtual). **Required for connection type "mapped", except for `customMapped` connection.**
	RemoteSubnetVirtual *string `pulumi:"remoteSubnetVirtual"`
	// Remote tunnel IP address. Only valid for route based connection. Available as of provider version R2.19+.
	RemoteTunnelIp *string `pulumi:"remoteTunnelIp"`
	// Route tables to modify.
	RouteTableLists []string `pulumi:"routeTableLists"`
	// Specify ssl_server_pool. Default value: "192.168.44.0/24". **NOTE: Please see notes here for more information.**
	SslServerPool *string `pulumi:"sslServerPool"`
	// Site2Cloud tunnel type. Valid Values: "policy", "route".
	TunnelType string `pulumi:"tunnelType"`
	// VPC ID of the cloud gateway.
	VpcId string `pulumi:"vpcId"`
}

// The set of arguments for constructing a AviatrixSite2Cloud resource.
type AviatrixSite2CloudArgs struct {
	// Authentication Type. Valid values: 'PSK' and 'Cert'. Default value: 'PSK'.
	AuthType pulumi.StringPtrInput
	// Backup gateway name. **NOTE: Please see notes here regarding HA requirements.**
	BackupGatewayName pulumi.StringPtrInput
	// Backup local tunnel IP address. Only valid when HA enabled route based connection. Available as of provider version R2.19+.
	BackupLocalTunnelIp pulumi.StringPtrInput
	// Backup Pre-Shared Key.
	BackupPreSharedKey pulumi.StringPtrInput
	// Backup Remote Gateway IP. **NOTE: Please see notes here regarding HA requirements.**
	BackupRemoteGatewayIp pulumi.StringPtrInput
	// Latitude of backup remote gateway. Does not support refresh.
	BackupRemoteGatewayLatitude pulumi.Float64PtrInput
	// Longitude of backup remote gateway. Does not support refresh.
	BackupRemoteGatewayLongitude pulumi.Float64PtrInput
	// Backup remote identifier. Required for Cert based authentication type with HA enabled. Example: "gw-10-10-0-116".
	BackupRemoteIdentifier pulumi.StringPtrInput
	// Backup remote tunnel IP address. Only valid when HA enabled route based connection. Available as of provider version R2.19+.
	BackupRemoteTunnelIp pulumi.StringPtrInput
	// Name of Remote CA Certificate Tag for creating Site2Cloud tunnels. Required for Cert based authentication type.
	CaCertTagName pulumi.StringPtrInput
	// Site2Cloud connection name.
	ConnectionName pulumi.StringInput
	// Connection type. Valid Values: "mapped", "unmapped".
	ConnectionType pulumi.StringInput
	// Switch to enable custom/non-default algorithms for IPSec Authentication/Encryption. Valid values: true, false. **NOTE: Please see notes here for more information.**
	CustomAlgorithms pulumi.BoolPtrInput
	// Enable custom mapped connection. Default value: false. Valid values: true/false. Available in provider version R2.17.1+.
	CustomMapped pulumi.BoolPtrInput
	// Enable/disable active active HA for an existing site2cloud connection. Valid values: true, false. Default value: false.
	EnableActiveActive pulumi.BoolPtrInput
	// Enable/disable Deed Peer Detection for an existing site2cloud connection. Default value: true. **NOTE: Please see notes here in regards to any deltas found in your state with the addition of this argument in R1.9**
	EnableDeadPeerDetection pulumi.BoolPtrInput
	// Enable Event Triggered HA. Default value: false. Valid values: true or false. Available as of provider version R2.19+.
	EnableEventTriggeredHa pulumi.BoolPtrInput
	// Switch to enable IKEv2. Valid values: true, false. Default value: false.
	EnableIkev2 pulumi.BoolPtrInput
	// Enable single IP HA feature. Available as of provider version 2.19+.
	EnableSingleIpHa pulumi.BoolPtrInput
	// Enable spoke gateway with mapped site2cloud configurations to forward traffic from site2cloud connection to Aviatrix Transit Gateway. Default value: false. Valid values: true or false. Available in provider version 2.17.2+.
	ForwardTrafficToTransit pulumi.BoolPtrInput
	// Specify whether or not to enable HA. Valid Values: true, false. **NOTE: Please see notes here regarding HA requirements.**
	HaEnabled pulumi.BoolPtrInput
	// List of Local Initiated Traffic Destination Real CIDRs.
	LocalDestinationRealCidrs pulumi.StringArrayInput
	// List of Local Initiated Traffic Destination Virtual CIDRs.
	LocalDestinationVirtualCidrs pulumi.StringArrayInput
	// List of Local Initiated Traffic Source Real CIDRs.
	LocalSourceRealCidrs pulumi.StringArrayInput
	// List of Local Initiated Traffic Source Virtual CIDRs.
	LocalSourceVirtualCidrs pulumi.StringArrayInput
	// Local subnet CIDR. **Required for connection type "mapped", except for `customMapped` connection.**
	LocalSubnetCidr pulumi.StringPtrInput
	// Local subnet CIDR (Virtual). **Required for connection type "mapped", except for `customMapped` connection.**
	LocalSubnetVirtual pulumi.StringPtrInput
	// Local tunnel IP address. Only valid for route based connection. Available as of provider version R2.19+.
	LocalTunnelIp pulumi.StringPtrInput
	// Phase one Authentication. Valid values: "SHA-1", "SHA-256", "SHA-384" and "SHA-512". Default value: "SHA-256".
	Phase1Authentication pulumi.StringPtrInput
	// Phase one DH Groups. Valid values: "1", "2", "5", "14", "15", "16", "17", "18", "19", "20" and "21". Default value: "14".
	Phase1DhGroups pulumi.StringPtrInput
	// Phase one Encryption. Valid values: "3DES", "AES-128-CBC", "AES-192-CBC", "AES-256-CBC", "AES-128-GCM-64", "AES-128-GCM-96", "AES-128-GCM-128", "AES-256-GCM-64", "AES-256-GCM-96", and "AES-256-GCM-128". Default value: "AES-256-CBC".
	Phase1Encryption pulumi.StringPtrInput
	// Phase 1 remote identifier of the IPsec tunnel. This can be configured to be either the public IP address or the private IP address of the peer terminating the IPsec tunnel. Example: ["1.2.3.4"] when HA is disabled, ["1.2.3.4", "5.6.7.8"] when HA is enabled. Available as of provider version R2.19+.
	Phase1RemoteIdentifiers pulumi.StringArrayInput
	// Phase two Authentication. Valid values: "NO-AUTH", "HMAC-SHA-1", "HMAC-SHA-256", "HMAC-SHA-384" and "HMAC-SHA-512". Default value: "HMAC-SHA-256".
	Phase2Authentication pulumi.StringPtrInput
	// Phase two DH Groups. Valid values: "1", "2", "5", "14", "15", "16", "17", "18", "19", "20" and "21". Default value: "14".
	Phase2DhGroups pulumi.StringPtrInput
	// Phase two Encryption. Valid values: "3DES", "AES-128-CBC", "AES-192-CBC", "AES-256-CBC", "AES-128-GCM-64", "AES-128-GCM-96", "AES-128-GCM-128", "AES-256-GCM-64", "AES-256-GCM-96", "AES-256-GCM-128" and "NULL-ENCR". Default value: "AES-256-CBC".
	Phase2Encryption pulumi.StringPtrInput
	// Pre-Shared Key.
	PreSharedKey pulumi.StringPtrInput
	// Primary cloud gateway name.
	PrimaryCloudGatewayName pulumi.StringInput
	// Private route encryption switch. Valid values: true, false.
	PrivateRouteEncryption pulumi.BoolPtrInput
	// List of  Remote Initiated Traffic Destination Real CIDRs.
	RemoteDestinationRealCidrs pulumi.StringArrayInput
	// List of Remote Initiated Traffic Destination Virtual CIDRs.
	RemoteDestinationVirtualCidrs pulumi.StringArrayInput
	// Remote gateway IP.
	RemoteGatewayIp pulumi.StringInput
	// Latitude of remote gateway. Does not support refresh.
	RemoteGatewayLatitude pulumi.Float64PtrInput
	// Longitude of remote gateway. Does not support refresh.
	RemoteGatewayLongitude pulumi.Float64PtrInput
	// Remote gateway type. Valid Values: "generic", "avx", "aws", "azure", "sonicwall", "oracle".
	RemoteGatewayType pulumi.StringInput
	// Remote identifier. Required for Cert based authentication type. Example: "gw-10-10-0-115".
	RemoteIdentifier pulumi.StringPtrInput
	// List of Remote Initiated Traffic Source Real CIDRs.
	RemoteSourceRealCidrs pulumi.StringArrayInput
	// List of Remote Initiated Traffic Source Virtual CIDRs.
	RemoteSourceVirtualCidrs pulumi.StringArrayInput
	// Remote subnet CIDR. **Not required for customMapped connection.**
	RemoteSubnetCidr pulumi.StringPtrInput
	// Remote subnet CIDR (Virtual). **Required for connection type "mapped", except for `customMapped` connection.**
	RemoteSubnetVirtual pulumi.StringPtrInput
	// Remote tunnel IP address. Only valid for route based connection. Available as of provider version R2.19+.
	RemoteTunnelIp pulumi.StringPtrInput
	// Route tables to modify.
	RouteTableLists pulumi.StringArrayInput
	// Specify ssl_server_pool. Default value: "192.168.44.0/24". **NOTE: Please see notes here for more information.**
	SslServerPool pulumi.StringPtrInput
	// Site2Cloud tunnel type. Valid Values: "policy", "route".
	TunnelType pulumi.StringInput
	// VPC ID of the cloud gateway.
	VpcId pulumi.StringInput
}

func (AviatrixSite2CloudArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*aviatrixSite2CloudArgs)(nil)).Elem()
}

type AviatrixSite2CloudInput interface {
	pulumi.Input

	ToAviatrixSite2CloudOutput() AviatrixSite2CloudOutput
	ToAviatrixSite2CloudOutputWithContext(ctx context.Context) AviatrixSite2CloudOutput
}

func (*AviatrixSite2Cloud) ElementType() reflect.Type {
	return reflect.TypeOf((**AviatrixSite2Cloud)(nil)).Elem()
}

func (i *AviatrixSite2Cloud) ToAviatrixSite2CloudOutput() AviatrixSite2CloudOutput {
	return i.ToAviatrixSite2CloudOutputWithContext(context.Background())
}

func (i *AviatrixSite2Cloud) ToAviatrixSite2CloudOutputWithContext(ctx context.Context) AviatrixSite2CloudOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixSite2CloudOutput)
}

// AviatrixSite2CloudArrayInput is an input type that accepts AviatrixSite2CloudArray and AviatrixSite2CloudArrayOutput values.
// You can construct a concrete instance of `AviatrixSite2CloudArrayInput` via:
//
//	AviatrixSite2CloudArray{ AviatrixSite2CloudArgs{...} }
type AviatrixSite2CloudArrayInput interface {
	pulumi.Input

	ToAviatrixSite2CloudArrayOutput() AviatrixSite2CloudArrayOutput
	ToAviatrixSite2CloudArrayOutputWithContext(context.Context) AviatrixSite2CloudArrayOutput
}

type AviatrixSite2CloudArray []AviatrixSite2CloudInput

func (AviatrixSite2CloudArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AviatrixSite2Cloud)(nil)).Elem()
}

func (i AviatrixSite2CloudArray) ToAviatrixSite2CloudArrayOutput() AviatrixSite2CloudArrayOutput {
	return i.ToAviatrixSite2CloudArrayOutputWithContext(context.Background())
}

func (i AviatrixSite2CloudArray) ToAviatrixSite2CloudArrayOutputWithContext(ctx context.Context) AviatrixSite2CloudArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixSite2CloudArrayOutput)
}

// AviatrixSite2CloudMapInput is an input type that accepts AviatrixSite2CloudMap and AviatrixSite2CloudMapOutput values.
// You can construct a concrete instance of `AviatrixSite2CloudMapInput` via:
//
//	AviatrixSite2CloudMap{ "key": AviatrixSite2CloudArgs{...} }
type AviatrixSite2CloudMapInput interface {
	pulumi.Input

	ToAviatrixSite2CloudMapOutput() AviatrixSite2CloudMapOutput
	ToAviatrixSite2CloudMapOutputWithContext(context.Context) AviatrixSite2CloudMapOutput
}

type AviatrixSite2CloudMap map[string]AviatrixSite2CloudInput

func (AviatrixSite2CloudMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AviatrixSite2Cloud)(nil)).Elem()
}

func (i AviatrixSite2CloudMap) ToAviatrixSite2CloudMapOutput() AviatrixSite2CloudMapOutput {
	return i.ToAviatrixSite2CloudMapOutputWithContext(context.Background())
}

func (i AviatrixSite2CloudMap) ToAviatrixSite2CloudMapOutputWithContext(ctx context.Context) AviatrixSite2CloudMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixSite2CloudMapOutput)
}

type AviatrixSite2CloudOutput struct{ *pulumi.OutputState }

func (AviatrixSite2CloudOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AviatrixSite2Cloud)(nil)).Elem()
}

func (o AviatrixSite2CloudOutput) ToAviatrixSite2CloudOutput() AviatrixSite2CloudOutput {
	return o
}

func (o AviatrixSite2CloudOutput) ToAviatrixSite2CloudOutputWithContext(ctx context.Context) AviatrixSite2CloudOutput {
	return o
}

// Authentication Type. Valid values: 'PSK' and 'Cert'. Default value: 'PSK'.
func (o AviatrixSite2CloudOutput) AuthType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixSite2Cloud) pulumi.StringPtrOutput { return v.AuthType }).(pulumi.StringPtrOutput)
}

// Backup gateway name. **NOTE: Please see notes here regarding HA requirements.**
func (o AviatrixSite2CloudOutput) BackupGatewayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixSite2Cloud) pulumi.StringPtrOutput { return v.BackupGatewayName }).(pulumi.StringPtrOutput)
}

// Backup local tunnel IP address. Only valid when HA enabled route based connection. Available as of provider version R2.19+.
func (o AviatrixSite2CloudOutput) BackupLocalTunnelIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixSite2Cloud) pulumi.StringPtrOutput { return v.BackupLocalTunnelIp }).(pulumi.StringPtrOutput)
}

// Backup Pre-Shared Key.
func (o AviatrixSite2CloudOutput) BackupPreSharedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixSite2Cloud) pulumi.StringPtrOutput { return v.BackupPreSharedKey }).(pulumi.StringPtrOutput)
}

// Backup Remote Gateway IP. **NOTE: Please see notes here regarding HA requirements.**
func (o AviatrixSite2CloudOutput) BackupRemoteGatewayIp() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixSite2Cloud) pulumi.StringOutput { return v.BackupRemoteGatewayIp }).(pulumi.StringOutput)
}

// Latitude of backup remote gateway. Does not support refresh.
func (o AviatrixSite2CloudOutput) BackupRemoteGatewayLatitude() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AviatrixSite2Cloud) pulumi.Float64PtrOutput { return v.BackupRemoteGatewayLatitude }).(pulumi.Float64PtrOutput)
}

// Longitude of backup remote gateway. Does not support refresh.
func (o AviatrixSite2CloudOutput) BackupRemoteGatewayLongitude() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AviatrixSite2Cloud) pulumi.Float64PtrOutput { return v.BackupRemoteGatewayLongitude }).(pulumi.Float64PtrOutput)
}

// Backup remote identifier. Required for Cert based authentication type with HA enabled. Example: "gw-10-10-0-116".
func (o AviatrixSite2CloudOutput) BackupRemoteIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixSite2Cloud) pulumi.StringPtrOutput { return v.BackupRemoteIdentifier }).(pulumi.StringPtrOutput)
}

// Backup remote tunnel IP address. Only valid when HA enabled route based connection. Available as of provider version R2.19+.
func (o AviatrixSite2CloudOutput) BackupRemoteTunnelIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixSite2Cloud) pulumi.StringPtrOutput { return v.BackupRemoteTunnelIp }).(pulumi.StringPtrOutput)
}

// Name of Remote CA Certificate Tag for creating Site2Cloud tunnels. Required for Cert based authentication type.
func (o AviatrixSite2CloudOutput) CaCertTagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixSite2Cloud) pulumi.StringPtrOutput { return v.CaCertTagName }).(pulumi.StringPtrOutput)
}

// Site2Cloud connection name.
func (o AviatrixSite2CloudOutput) ConnectionName() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixSite2Cloud) pulumi.StringOutput { return v.ConnectionName }).(pulumi.StringOutput)
}

// Connection type. Valid Values: "mapped", "unmapped".
func (o AviatrixSite2CloudOutput) ConnectionType() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixSite2Cloud) pulumi.StringOutput { return v.ConnectionType }).(pulumi.StringOutput)
}

// Switch to enable custom/non-default algorithms for IPSec Authentication/Encryption. Valid values: true, false. **NOTE: Please see notes here for more information.**
func (o AviatrixSite2CloudOutput) CustomAlgorithms() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AviatrixSite2Cloud) pulumi.BoolPtrOutput { return v.CustomAlgorithms }).(pulumi.BoolPtrOutput)
}

// Enable custom mapped connection. Default value: false. Valid values: true/false. Available in provider version R2.17.1+.
func (o AviatrixSite2CloudOutput) CustomMapped() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AviatrixSite2Cloud) pulumi.BoolPtrOutput { return v.CustomMapped }).(pulumi.BoolPtrOutput)
}

// Enable/disable active active HA for an existing site2cloud connection. Valid values: true, false. Default value: false.
func (o AviatrixSite2CloudOutput) EnableActiveActive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AviatrixSite2Cloud) pulumi.BoolPtrOutput { return v.EnableActiveActive }).(pulumi.BoolPtrOutput)
}

// Enable/disable Deed Peer Detection for an existing site2cloud connection. Default value: true. **NOTE: Please see notes here in regards to any deltas found in your state with the addition of this argument in R1.9**
func (o AviatrixSite2CloudOutput) EnableDeadPeerDetection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AviatrixSite2Cloud) pulumi.BoolPtrOutput { return v.EnableDeadPeerDetection }).(pulumi.BoolPtrOutput)
}

// Enable Event Triggered HA. Default value: false. Valid values: true or false. Available as of provider version R2.19+.
func (o AviatrixSite2CloudOutput) EnableEventTriggeredHa() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AviatrixSite2Cloud) pulumi.BoolPtrOutput { return v.EnableEventTriggeredHa }).(pulumi.BoolPtrOutput)
}

// Switch to enable IKEv2. Valid values: true, false. Default value: false.
func (o AviatrixSite2CloudOutput) EnableIkev2() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AviatrixSite2Cloud) pulumi.BoolPtrOutput { return v.EnableIkev2 }).(pulumi.BoolPtrOutput)
}

// Enable single IP HA feature. Available as of provider version 2.19+.
func (o AviatrixSite2CloudOutput) EnableSingleIpHa() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AviatrixSite2Cloud) pulumi.BoolPtrOutput { return v.EnableSingleIpHa }).(pulumi.BoolPtrOutput)
}

// Enable spoke gateway with mapped site2cloud configurations to forward traffic from site2cloud connection to Aviatrix Transit Gateway. Default value: false. Valid values: true or false. Available in provider version 2.17.2+.
func (o AviatrixSite2CloudOutput) ForwardTrafficToTransit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AviatrixSite2Cloud) pulumi.BoolPtrOutput { return v.ForwardTrafficToTransit }).(pulumi.BoolPtrOutput)
}

// Specify whether or not to enable HA. Valid Values: true, false. **NOTE: Please see notes here regarding HA requirements.**
func (o AviatrixSite2CloudOutput) HaEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AviatrixSite2Cloud) pulumi.BoolPtrOutput { return v.HaEnabled }).(pulumi.BoolPtrOutput)
}

// List of Local Initiated Traffic Destination Real CIDRs.
func (o AviatrixSite2CloudOutput) LocalDestinationRealCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AviatrixSite2Cloud) pulumi.StringArrayOutput { return v.LocalDestinationRealCidrs }).(pulumi.StringArrayOutput)
}

// List of Local Initiated Traffic Destination Virtual CIDRs.
func (o AviatrixSite2CloudOutput) LocalDestinationVirtualCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AviatrixSite2Cloud) pulumi.StringArrayOutput { return v.LocalDestinationVirtualCidrs }).(pulumi.StringArrayOutput)
}

// List of Local Initiated Traffic Source Real CIDRs.
func (o AviatrixSite2CloudOutput) LocalSourceRealCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AviatrixSite2Cloud) pulumi.StringArrayOutput { return v.LocalSourceRealCidrs }).(pulumi.StringArrayOutput)
}

// List of Local Initiated Traffic Source Virtual CIDRs.
func (o AviatrixSite2CloudOutput) LocalSourceVirtualCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AviatrixSite2Cloud) pulumi.StringArrayOutput { return v.LocalSourceVirtualCidrs }).(pulumi.StringArrayOutput)
}

// Local subnet CIDR. **Required for connection type "mapped", except for `customMapped` connection.**
func (o AviatrixSite2CloudOutput) LocalSubnetCidr() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixSite2Cloud) pulumi.StringOutput { return v.LocalSubnetCidr }).(pulumi.StringOutput)
}

// Local subnet CIDR (Virtual). **Required for connection type "mapped", except for `customMapped` connection.**
func (o AviatrixSite2CloudOutput) LocalSubnetVirtual() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixSite2Cloud) pulumi.StringPtrOutput { return v.LocalSubnetVirtual }).(pulumi.StringPtrOutput)
}

// Local tunnel IP address. Only valid for route based connection. Available as of provider version R2.19+.
func (o AviatrixSite2CloudOutput) LocalTunnelIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixSite2Cloud) pulumi.StringPtrOutput { return v.LocalTunnelIp }).(pulumi.StringPtrOutput)
}

// Phase one Authentication. Valid values: "SHA-1", "SHA-256", "SHA-384" and "SHA-512". Default value: "SHA-256".
func (o AviatrixSite2CloudOutput) Phase1Authentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixSite2Cloud) pulumi.StringPtrOutput { return v.Phase1Authentication }).(pulumi.StringPtrOutput)
}

// Phase one DH Groups. Valid values: "1", "2", "5", "14", "15", "16", "17", "18", "19", "20" and "21". Default value: "14".
func (o AviatrixSite2CloudOutput) Phase1DhGroups() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixSite2Cloud) pulumi.StringPtrOutput { return v.Phase1DhGroups }).(pulumi.StringPtrOutput)
}

// Phase one Encryption. Valid values: "3DES", "AES-128-CBC", "AES-192-CBC", "AES-256-CBC", "AES-128-GCM-64", "AES-128-GCM-96", "AES-128-GCM-128", "AES-256-GCM-64", "AES-256-GCM-96", and "AES-256-GCM-128". Default value: "AES-256-CBC".
func (o AviatrixSite2CloudOutput) Phase1Encryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixSite2Cloud) pulumi.StringPtrOutput { return v.Phase1Encryption }).(pulumi.StringPtrOutput)
}

// Phase 1 remote identifier of the IPsec tunnel. This can be configured to be either the public IP address or the private IP address of the peer terminating the IPsec tunnel. Example: ["1.2.3.4"] when HA is disabled, ["1.2.3.4", "5.6.7.8"] when HA is enabled. Available as of provider version R2.19+.
func (o AviatrixSite2CloudOutput) Phase1RemoteIdentifiers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AviatrixSite2Cloud) pulumi.StringArrayOutput { return v.Phase1RemoteIdentifiers }).(pulumi.StringArrayOutput)
}

// Phase two Authentication. Valid values: "NO-AUTH", "HMAC-SHA-1", "HMAC-SHA-256", "HMAC-SHA-384" and "HMAC-SHA-512". Default value: "HMAC-SHA-256".
func (o AviatrixSite2CloudOutput) Phase2Authentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixSite2Cloud) pulumi.StringPtrOutput { return v.Phase2Authentication }).(pulumi.StringPtrOutput)
}

// Phase two DH Groups. Valid values: "1", "2", "5", "14", "15", "16", "17", "18", "19", "20" and "21". Default value: "14".
func (o AviatrixSite2CloudOutput) Phase2DhGroups() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixSite2Cloud) pulumi.StringPtrOutput { return v.Phase2DhGroups }).(pulumi.StringPtrOutput)
}

// Phase two Encryption. Valid values: "3DES", "AES-128-CBC", "AES-192-CBC", "AES-256-CBC", "AES-128-GCM-64", "AES-128-GCM-96", "AES-128-GCM-128", "AES-256-GCM-64", "AES-256-GCM-96", "AES-256-GCM-128" and "NULL-ENCR". Default value: "AES-256-CBC".
func (o AviatrixSite2CloudOutput) Phase2Encryption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixSite2Cloud) pulumi.StringPtrOutput { return v.Phase2Encryption }).(pulumi.StringPtrOutput)
}

// Pre-Shared Key.
func (o AviatrixSite2CloudOutput) PreSharedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixSite2Cloud) pulumi.StringPtrOutput { return v.PreSharedKey }).(pulumi.StringPtrOutput)
}

// Primary cloud gateway name.
func (o AviatrixSite2CloudOutput) PrimaryCloudGatewayName() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixSite2Cloud) pulumi.StringOutput { return v.PrimaryCloudGatewayName }).(pulumi.StringOutput)
}

// Private route encryption switch. Valid values: true, false.
func (o AviatrixSite2CloudOutput) PrivateRouteEncryption() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AviatrixSite2Cloud) pulumi.BoolPtrOutput { return v.PrivateRouteEncryption }).(pulumi.BoolPtrOutput)
}

// List of  Remote Initiated Traffic Destination Real CIDRs.
func (o AviatrixSite2CloudOutput) RemoteDestinationRealCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AviatrixSite2Cloud) pulumi.StringArrayOutput { return v.RemoteDestinationRealCidrs }).(pulumi.StringArrayOutput)
}

// List of Remote Initiated Traffic Destination Virtual CIDRs.
func (o AviatrixSite2CloudOutput) RemoteDestinationVirtualCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AviatrixSite2Cloud) pulumi.StringArrayOutput { return v.RemoteDestinationVirtualCidrs }).(pulumi.StringArrayOutput)
}

// Remote gateway IP.
func (o AviatrixSite2CloudOutput) RemoteGatewayIp() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixSite2Cloud) pulumi.StringOutput { return v.RemoteGatewayIp }).(pulumi.StringOutput)
}

// Latitude of remote gateway. Does not support refresh.
func (o AviatrixSite2CloudOutput) RemoteGatewayLatitude() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AviatrixSite2Cloud) pulumi.Float64PtrOutput { return v.RemoteGatewayLatitude }).(pulumi.Float64PtrOutput)
}

// Longitude of remote gateway. Does not support refresh.
func (o AviatrixSite2CloudOutput) RemoteGatewayLongitude() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AviatrixSite2Cloud) pulumi.Float64PtrOutput { return v.RemoteGatewayLongitude }).(pulumi.Float64PtrOutput)
}

// Remote gateway type. Valid Values: "generic", "avx", "aws", "azure", "sonicwall", "oracle".
func (o AviatrixSite2CloudOutput) RemoteGatewayType() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixSite2Cloud) pulumi.StringOutput { return v.RemoteGatewayType }).(pulumi.StringOutput)
}

// Remote identifier. Required for Cert based authentication type. Example: "gw-10-10-0-115".
func (o AviatrixSite2CloudOutput) RemoteIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixSite2Cloud) pulumi.StringPtrOutput { return v.RemoteIdentifier }).(pulumi.StringPtrOutput)
}

// List of Remote Initiated Traffic Source Real CIDRs.
func (o AviatrixSite2CloudOutput) RemoteSourceRealCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AviatrixSite2Cloud) pulumi.StringArrayOutput { return v.RemoteSourceRealCidrs }).(pulumi.StringArrayOutput)
}

// List of Remote Initiated Traffic Source Virtual CIDRs.
func (o AviatrixSite2CloudOutput) RemoteSourceVirtualCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AviatrixSite2Cloud) pulumi.StringArrayOutput { return v.RemoteSourceVirtualCidrs }).(pulumi.StringArrayOutput)
}

// Remote subnet CIDR. **Not required for customMapped connection.**
func (o AviatrixSite2CloudOutput) RemoteSubnetCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixSite2Cloud) pulumi.StringPtrOutput { return v.RemoteSubnetCidr }).(pulumi.StringPtrOutput)
}

// Remote subnet CIDR (Virtual). **Required for connection type "mapped", except for `customMapped` connection.**
func (o AviatrixSite2CloudOutput) RemoteSubnetVirtual() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixSite2Cloud) pulumi.StringPtrOutput { return v.RemoteSubnetVirtual }).(pulumi.StringPtrOutput)
}

// Remote tunnel IP address. Only valid for route based connection. Available as of provider version R2.19+.
func (o AviatrixSite2CloudOutput) RemoteTunnelIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixSite2Cloud) pulumi.StringPtrOutput { return v.RemoteTunnelIp }).(pulumi.StringPtrOutput)
}

// Route tables to modify.
func (o AviatrixSite2CloudOutput) RouteTableLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AviatrixSite2Cloud) pulumi.StringArrayOutput { return v.RouteTableLists }).(pulumi.StringArrayOutput)
}

// Specify ssl_server_pool. Default value: "192.168.44.0/24". **NOTE: Please see notes here for more information.**
func (o AviatrixSite2CloudOutput) SslServerPool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixSite2Cloud) pulumi.StringPtrOutput { return v.SslServerPool }).(pulumi.StringPtrOutput)
}

// Site2Cloud tunnel type. Valid Values: "policy", "route".
func (o AviatrixSite2CloudOutput) TunnelType() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixSite2Cloud) pulumi.StringOutput { return v.TunnelType }).(pulumi.StringOutput)
}

// VPC ID of the cloud gateway.
func (o AviatrixSite2CloudOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixSite2Cloud) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

type AviatrixSite2CloudArrayOutput struct{ *pulumi.OutputState }

func (AviatrixSite2CloudArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AviatrixSite2Cloud)(nil)).Elem()
}

func (o AviatrixSite2CloudArrayOutput) ToAviatrixSite2CloudArrayOutput() AviatrixSite2CloudArrayOutput {
	return o
}

func (o AviatrixSite2CloudArrayOutput) ToAviatrixSite2CloudArrayOutputWithContext(ctx context.Context) AviatrixSite2CloudArrayOutput {
	return o
}

func (o AviatrixSite2CloudArrayOutput) Index(i pulumi.IntInput) AviatrixSite2CloudOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AviatrixSite2Cloud {
		return vs[0].([]*AviatrixSite2Cloud)[vs[1].(int)]
	}).(AviatrixSite2CloudOutput)
}

type AviatrixSite2CloudMapOutput struct{ *pulumi.OutputState }

func (AviatrixSite2CloudMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AviatrixSite2Cloud)(nil)).Elem()
}

func (o AviatrixSite2CloudMapOutput) ToAviatrixSite2CloudMapOutput() AviatrixSite2CloudMapOutput {
	return o
}

func (o AviatrixSite2CloudMapOutput) ToAviatrixSite2CloudMapOutputWithContext(ctx context.Context) AviatrixSite2CloudMapOutput {
	return o
}

func (o AviatrixSite2CloudMapOutput) MapIndex(k pulumi.StringInput) AviatrixSite2CloudOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AviatrixSite2Cloud {
		return vs[0].(map[string]*AviatrixSite2Cloud)[vs[1].(string)]
	}).(AviatrixSite2CloudOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixSite2CloudInput)(nil)).Elem(), &AviatrixSite2Cloud{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixSite2CloudArrayInput)(nil)).Elem(), AviatrixSite2CloudArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixSite2CloudMapInput)(nil)).Elem(), AviatrixSite2CloudMap{})
	pulumi.RegisterOutputType(AviatrixSite2CloudOutput{})
	pulumi.RegisterOutputType(AviatrixSite2CloudArrayOutput{})
	pulumi.RegisterOutputType(AviatrixSite2CloudMapOutput{})
}
