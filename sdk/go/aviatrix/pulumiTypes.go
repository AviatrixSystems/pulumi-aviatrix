// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aviatrix

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AviatrixAppDomainSelector struct {
	MatchExpressions []AviatrixAppDomainSelectorMatchExpression `pulumi:"matchExpressions"`
}

// AviatrixAppDomainSelectorInput is an input type that accepts AviatrixAppDomainSelectorArgs and AviatrixAppDomainSelectorOutput values.
// You can construct a concrete instance of `AviatrixAppDomainSelectorInput` via:
//
//	AviatrixAppDomainSelectorArgs{...}
type AviatrixAppDomainSelectorInput interface {
	pulumi.Input

	ToAviatrixAppDomainSelectorOutput() AviatrixAppDomainSelectorOutput
	ToAviatrixAppDomainSelectorOutputWithContext(context.Context) AviatrixAppDomainSelectorOutput
}

type AviatrixAppDomainSelectorArgs struct {
	MatchExpressions AviatrixAppDomainSelectorMatchExpressionArrayInput `pulumi:"matchExpressions"`
}

func (AviatrixAppDomainSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AviatrixAppDomainSelector)(nil)).Elem()
}

func (i AviatrixAppDomainSelectorArgs) ToAviatrixAppDomainSelectorOutput() AviatrixAppDomainSelectorOutput {
	return i.ToAviatrixAppDomainSelectorOutputWithContext(context.Background())
}

func (i AviatrixAppDomainSelectorArgs) ToAviatrixAppDomainSelectorOutputWithContext(ctx context.Context) AviatrixAppDomainSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixAppDomainSelectorOutput)
}

func (i AviatrixAppDomainSelectorArgs) ToAviatrixAppDomainSelectorPtrOutput() AviatrixAppDomainSelectorPtrOutput {
	return i.ToAviatrixAppDomainSelectorPtrOutputWithContext(context.Background())
}

func (i AviatrixAppDomainSelectorArgs) ToAviatrixAppDomainSelectorPtrOutputWithContext(ctx context.Context) AviatrixAppDomainSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixAppDomainSelectorOutput).ToAviatrixAppDomainSelectorPtrOutputWithContext(ctx)
}

// AviatrixAppDomainSelectorPtrInput is an input type that accepts AviatrixAppDomainSelectorArgs, AviatrixAppDomainSelectorPtr and AviatrixAppDomainSelectorPtrOutput values.
// You can construct a concrete instance of `AviatrixAppDomainSelectorPtrInput` via:
//
//	        AviatrixAppDomainSelectorArgs{...}
//
//	or:
//
//	        nil
type AviatrixAppDomainSelectorPtrInput interface {
	pulumi.Input

	ToAviatrixAppDomainSelectorPtrOutput() AviatrixAppDomainSelectorPtrOutput
	ToAviatrixAppDomainSelectorPtrOutputWithContext(context.Context) AviatrixAppDomainSelectorPtrOutput
}

type aviatrixAppDomainSelectorPtrType AviatrixAppDomainSelectorArgs

func AviatrixAppDomainSelectorPtr(v *AviatrixAppDomainSelectorArgs) AviatrixAppDomainSelectorPtrInput {
	return (*aviatrixAppDomainSelectorPtrType)(v)
}

func (*aviatrixAppDomainSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AviatrixAppDomainSelector)(nil)).Elem()
}

func (i *aviatrixAppDomainSelectorPtrType) ToAviatrixAppDomainSelectorPtrOutput() AviatrixAppDomainSelectorPtrOutput {
	return i.ToAviatrixAppDomainSelectorPtrOutputWithContext(context.Background())
}

func (i *aviatrixAppDomainSelectorPtrType) ToAviatrixAppDomainSelectorPtrOutputWithContext(ctx context.Context) AviatrixAppDomainSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixAppDomainSelectorPtrOutput)
}

type AviatrixAppDomainSelectorOutput struct{ *pulumi.OutputState }

func (AviatrixAppDomainSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AviatrixAppDomainSelector)(nil)).Elem()
}

func (o AviatrixAppDomainSelectorOutput) ToAviatrixAppDomainSelectorOutput() AviatrixAppDomainSelectorOutput {
	return o
}

func (o AviatrixAppDomainSelectorOutput) ToAviatrixAppDomainSelectorOutputWithContext(ctx context.Context) AviatrixAppDomainSelectorOutput {
	return o
}

func (o AviatrixAppDomainSelectorOutput) ToAviatrixAppDomainSelectorPtrOutput() AviatrixAppDomainSelectorPtrOutput {
	return o.ToAviatrixAppDomainSelectorPtrOutputWithContext(context.Background())
}

func (o AviatrixAppDomainSelectorOutput) ToAviatrixAppDomainSelectorPtrOutputWithContext(ctx context.Context) AviatrixAppDomainSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AviatrixAppDomainSelector) *AviatrixAppDomainSelector {
		return &v
	}).(AviatrixAppDomainSelectorPtrOutput)
}

func (o AviatrixAppDomainSelectorOutput) MatchExpressions() AviatrixAppDomainSelectorMatchExpressionArrayOutput {
	return o.ApplyT(func(v AviatrixAppDomainSelector) []AviatrixAppDomainSelectorMatchExpression {
		return v.MatchExpressions
	}).(AviatrixAppDomainSelectorMatchExpressionArrayOutput)
}

type AviatrixAppDomainSelectorPtrOutput struct{ *pulumi.OutputState }

func (AviatrixAppDomainSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AviatrixAppDomainSelector)(nil)).Elem()
}

func (o AviatrixAppDomainSelectorPtrOutput) ToAviatrixAppDomainSelectorPtrOutput() AviatrixAppDomainSelectorPtrOutput {
	return o
}

func (o AviatrixAppDomainSelectorPtrOutput) ToAviatrixAppDomainSelectorPtrOutputWithContext(ctx context.Context) AviatrixAppDomainSelectorPtrOutput {
	return o
}

func (o AviatrixAppDomainSelectorPtrOutput) Elem() AviatrixAppDomainSelectorOutput {
	return o.ApplyT(func(v *AviatrixAppDomainSelector) AviatrixAppDomainSelector {
		if v != nil {
			return *v
		}
		var ret AviatrixAppDomainSelector
		return ret
	}).(AviatrixAppDomainSelectorOutput)
}

func (o AviatrixAppDomainSelectorPtrOutput) MatchExpressions() AviatrixAppDomainSelectorMatchExpressionArrayOutput {
	return o.ApplyT(func(v *AviatrixAppDomainSelector) []AviatrixAppDomainSelectorMatchExpression {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(AviatrixAppDomainSelectorMatchExpressionArrayOutput)
}

type AviatrixAppDomainSelectorMatchExpression struct {
	AccountId   *string           `pulumi:"accountId"`
	AccountName *string           `pulumi:"accountName"`
	Cidr        *string           `pulumi:"cidr"`
	Region      *string           `pulumi:"region"`
	ResId       *string           `pulumi:"resId"`
	Tags        map[string]string `pulumi:"tags"`
	Type        *string           `pulumi:"type"`
	Zone        *string           `pulumi:"zone"`
}

// AviatrixAppDomainSelectorMatchExpressionInput is an input type that accepts AviatrixAppDomainSelectorMatchExpressionArgs and AviatrixAppDomainSelectorMatchExpressionOutput values.
// You can construct a concrete instance of `AviatrixAppDomainSelectorMatchExpressionInput` via:
//
//	AviatrixAppDomainSelectorMatchExpressionArgs{...}
type AviatrixAppDomainSelectorMatchExpressionInput interface {
	pulumi.Input

	ToAviatrixAppDomainSelectorMatchExpressionOutput() AviatrixAppDomainSelectorMatchExpressionOutput
	ToAviatrixAppDomainSelectorMatchExpressionOutputWithContext(context.Context) AviatrixAppDomainSelectorMatchExpressionOutput
}

type AviatrixAppDomainSelectorMatchExpressionArgs struct {
	AccountId   pulumi.StringPtrInput `pulumi:"accountId"`
	AccountName pulumi.StringPtrInput `pulumi:"accountName"`
	Cidr        pulumi.StringPtrInput `pulumi:"cidr"`
	Region      pulumi.StringPtrInput `pulumi:"region"`
	ResId       pulumi.StringPtrInput `pulumi:"resId"`
	Tags        pulumi.StringMapInput `pulumi:"tags"`
	Type        pulumi.StringPtrInput `pulumi:"type"`
	Zone        pulumi.StringPtrInput `pulumi:"zone"`
}

func (AviatrixAppDomainSelectorMatchExpressionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AviatrixAppDomainSelectorMatchExpression)(nil)).Elem()
}

func (i AviatrixAppDomainSelectorMatchExpressionArgs) ToAviatrixAppDomainSelectorMatchExpressionOutput() AviatrixAppDomainSelectorMatchExpressionOutput {
	return i.ToAviatrixAppDomainSelectorMatchExpressionOutputWithContext(context.Background())
}

func (i AviatrixAppDomainSelectorMatchExpressionArgs) ToAviatrixAppDomainSelectorMatchExpressionOutputWithContext(ctx context.Context) AviatrixAppDomainSelectorMatchExpressionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixAppDomainSelectorMatchExpressionOutput)
}

// AviatrixAppDomainSelectorMatchExpressionArrayInput is an input type that accepts AviatrixAppDomainSelectorMatchExpressionArray and AviatrixAppDomainSelectorMatchExpressionArrayOutput values.
// You can construct a concrete instance of `AviatrixAppDomainSelectorMatchExpressionArrayInput` via:
//
//	AviatrixAppDomainSelectorMatchExpressionArray{ AviatrixAppDomainSelectorMatchExpressionArgs{...} }
type AviatrixAppDomainSelectorMatchExpressionArrayInput interface {
	pulumi.Input

	ToAviatrixAppDomainSelectorMatchExpressionArrayOutput() AviatrixAppDomainSelectorMatchExpressionArrayOutput
	ToAviatrixAppDomainSelectorMatchExpressionArrayOutputWithContext(context.Context) AviatrixAppDomainSelectorMatchExpressionArrayOutput
}

type AviatrixAppDomainSelectorMatchExpressionArray []AviatrixAppDomainSelectorMatchExpressionInput

func (AviatrixAppDomainSelectorMatchExpressionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AviatrixAppDomainSelectorMatchExpression)(nil)).Elem()
}

func (i AviatrixAppDomainSelectorMatchExpressionArray) ToAviatrixAppDomainSelectorMatchExpressionArrayOutput() AviatrixAppDomainSelectorMatchExpressionArrayOutput {
	return i.ToAviatrixAppDomainSelectorMatchExpressionArrayOutputWithContext(context.Background())
}

func (i AviatrixAppDomainSelectorMatchExpressionArray) ToAviatrixAppDomainSelectorMatchExpressionArrayOutputWithContext(ctx context.Context) AviatrixAppDomainSelectorMatchExpressionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixAppDomainSelectorMatchExpressionArrayOutput)
}

type AviatrixAppDomainSelectorMatchExpressionOutput struct{ *pulumi.OutputState }

func (AviatrixAppDomainSelectorMatchExpressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AviatrixAppDomainSelectorMatchExpression)(nil)).Elem()
}

func (o AviatrixAppDomainSelectorMatchExpressionOutput) ToAviatrixAppDomainSelectorMatchExpressionOutput() AviatrixAppDomainSelectorMatchExpressionOutput {
	return o
}

func (o AviatrixAppDomainSelectorMatchExpressionOutput) ToAviatrixAppDomainSelectorMatchExpressionOutputWithContext(ctx context.Context) AviatrixAppDomainSelectorMatchExpressionOutput {
	return o
}

func (o AviatrixAppDomainSelectorMatchExpressionOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AviatrixAppDomainSelectorMatchExpression) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

func (o AviatrixAppDomainSelectorMatchExpressionOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AviatrixAppDomainSelectorMatchExpression) *string { return v.AccountName }).(pulumi.StringPtrOutput)
}

func (o AviatrixAppDomainSelectorMatchExpressionOutput) Cidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AviatrixAppDomainSelectorMatchExpression) *string { return v.Cidr }).(pulumi.StringPtrOutput)
}

func (o AviatrixAppDomainSelectorMatchExpressionOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AviatrixAppDomainSelectorMatchExpression) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o AviatrixAppDomainSelectorMatchExpressionOutput) ResId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AviatrixAppDomainSelectorMatchExpression) *string { return v.ResId }).(pulumi.StringPtrOutput)
}

func (o AviatrixAppDomainSelectorMatchExpressionOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v AviatrixAppDomainSelectorMatchExpression) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func (o AviatrixAppDomainSelectorMatchExpressionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AviatrixAppDomainSelectorMatchExpression) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o AviatrixAppDomainSelectorMatchExpressionOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AviatrixAppDomainSelectorMatchExpression) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type AviatrixAppDomainSelectorMatchExpressionArrayOutput struct{ *pulumi.OutputState }

func (AviatrixAppDomainSelectorMatchExpressionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AviatrixAppDomainSelectorMatchExpression)(nil)).Elem()
}

func (o AviatrixAppDomainSelectorMatchExpressionArrayOutput) ToAviatrixAppDomainSelectorMatchExpressionArrayOutput() AviatrixAppDomainSelectorMatchExpressionArrayOutput {
	return o
}

func (o AviatrixAppDomainSelectorMatchExpressionArrayOutput) ToAviatrixAppDomainSelectorMatchExpressionArrayOutputWithContext(ctx context.Context) AviatrixAppDomainSelectorMatchExpressionArrayOutput {
	return o
}

func (o AviatrixAppDomainSelectorMatchExpressionArrayOutput) Index(i pulumi.IntInput) AviatrixAppDomainSelectorMatchExpressionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AviatrixAppDomainSelectorMatchExpression {
		return vs[0].([]AviatrixAppDomainSelectorMatchExpression)[vs[1].(int)]
	}).(AviatrixAppDomainSelectorMatchExpressionOutput)
}

type AviatrixAwsTgwSecurityDomainType struct {
	// Deprecated: Please set `manage_vpc_attachment` to false, and use the standalone aviatrix_aws_tgw_vpc_attachment resource instead.
	AttachedVpcs       []AviatrixAwsTgwSecurityDomainAttachedVpc `pulumi:"attachedVpcs"`
	AviatrixFirewall   *bool                                     `pulumi:"aviatrixFirewall"`
	ConnectedDomains   []string                                  `pulumi:"connectedDomains"`
	NativeEgress       *bool                                     `pulumi:"nativeEgress"`
	NativeFirewall     *bool                                     `pulumi:"nativeFirewall"`
	SecurityDomainName string                                    `pulumi:"securityDomainName"`
}

// AviatrixAwsTgwSecurityDomainTypeInput is an input type that accepts AviatrixAwsTgwSecurityDomainTypeArgs and AviatrixAwsTgwSecurityDomainTypeOutput values.
// You can construct a concrete instance of `AviatrixAwsTgwSecurityDomainTypeInput` via:
//
//	AviatrixAwsTgwSecurityDomainTypeArgs{...}
type AviatrixAwsTgwSecurityDomainTypeInput interface {
	pulumi.Input

	ToAviatrixAwsTgwSecurityDomainTypeOutput() AviatrixAwsTgwSecurityDomainTypeOutput
	ToAviatrixAwsTgwSecurityDomainTypeOutputWithContext(context.Context) AviatrixAwsTgwSecurityDomainTypeOutput
}

type AviatrixAwsTgwSecurityDomainTypeArgs struct {
	// Deprecated: Please set `manage_vpc_attachment` to false, and use the standalone aviatrix_aws_tgw_vpc_attachment resource instead.
	AttachedVpcs       AviatrixAwsTgwSecurityDomainAttachedVpcArrayInput `pulumi:"attachedVpcs"`
	AviatrixFirewall   pulumi.BoolPtrInput                               `pulumi:"aviatrixFirewall"`
	ConnectedDomains   pulumi.StringArrayInput                           `pulumi:"connectedDomains"`
	NativeEgress       pulumi.BoolPtrInput                               `pulumi:"nativeEgress"`
	NativeFirewall     pulumi.BoolPtrInput                               `pulumi:"nativeFirewall"`
	SecurityDomainName pulumi.StringInput                                `pulumi:"securityDomainName"`
}

func (AviatrixAwsTgwSecurityDomainTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AviatrixAwsTgwSecurityDomainType)(nil)).Elem()
}

func (i AviatrixAwsTgwSecurityDomainTypeArgs) ToAviatrixAwsTgwSecurityDomainTypeOutput() AviatrixAwsTgwSecurityDomainTypeOutput {
	return i.ToAviatrixAwsTgwSecurityDomainTypeOutputWithContext(context.Background())
}

func (i AviatrixAwsTgwSecurityDomainTypeArgs) ToAviatrixAwsTgwSecurityDomainTypeOutputWithContext(ctx context.Context) AviatrixAwsTgwSecurityDomainTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixAwsTgwSecurityDomainTypeOutput)
}

// AviatrixAwsTgwSecurityDomainTypeArrayInput is an input type that accepts AviatrixAwsTgwSecurityDomainTypeArray and AviatrixAwsTgwSecurityDomainTypeArrayOutput values.
// You can construct a concrete instance of `AviatrixAwsTgwSecurityDomainTypeArrayInput` via:
//
//	AviatrixAwsTgwSecurityDomainTypeArray{ AviatrixAwsTgwSecurityDomainTypeArgs{...} }
type AviatrixAwsTgwSecurityDomainTypeArrayInput interface {
	pulumi.Input

	ToAviatrixAwsTgwSecurityDomainTypeArrayOutput() AviatrixAwsTgwSecurityDomainTypeArrayOutput
	ToAviatrixAwsTgwSecurityDomainTypeArrayOutputWithContext(context.Context) AviatrixAwsTgwSecurityDomainTypeArrayOutput
}

type AviatrixAwsTgwSecurityDomainTypeArray []AviatrixAwsTgwSecurityDomainTypeInput

func (AviatrixAwsTgwSecurityDomainTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AviatrixAwsTgwSecurityDomainType)(nil)).Elem()
}

func (i AviatrixAwsTgwSecurityDomainTypeArray) ToAviatrixAwsTgwSecurityDomainTypeArrayOutput() AviatrixAwsTgwSecurityDomainTypeArrayOutput {
	return i.ToAviatrixAwsTgwSecurityDomainTypeArrayOutputWithContext(context.Background())
}

func (i AviatrixAwsTgwSecurityDomainTypeArray) ToAviatrixAwsTgwSecurityDomainTypeArrayOutputWithContext(ctx context.Context) AviatrixAwsTgwSecurityDomainTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixAwsTgwSecurityDomainTypeArrayOutput)
}

type AviatrixAwsTgwSecurityDomainTypeOutput struct{ *pulumi.OutputState }

func (AviatrixAwsTgwSecurityDomainTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AviatrixAwsTgwSecurityDomainType)(nil)).Elem()
}

func (o AviatrixAwsTgwSecurityDomainTypeOutput) ToAviatrixAwsTgwSecurityDomainTypeOutput() AviatrixAwsTgwSecurityDomainTypeOutput {
	return o
}

func (o AviatrixAwsTgwSecurityDomainTypeOutput) ToAviatrixAwsTgwSecurityDomainTypeOutputWithContext(ctx context.Context) AviatrixAwsTgwSecurityDomainTypeOutput {
	return o
}

// Deprecated: Please set `manage_vpc_attachment` to false, and use the standalone aviatrix_aws_tgw_vpc_attachment resource instead.
func (o AviatrixAwsTgwSecurityDomainTypeOutput) AttachedVpcs() AviatrixAwsTgwSecurityDomainAttachedVpcArrayOutput {
	return o.ApplyT(func(v AviatrixAwsTgwSecurityDomainType) []AviatrixAwsTgwSecurityDomainAttachedVpc {
		return v.AttachedVpcs
	}).(AviatrixAwsTgwSecurityDomainAttachedVpcArrayOutput)
}

func (o AviatrixAwsTgwSecurityDomainTypeOutput) AviatrixFirewall() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AviatrixAwsTgwSecurityDomainType) *bool { return v.AviatrixFirewall }).(pulumi.BoolPtrOutput)
}

func (o AviatrixAwsTgwSecurityDomainTypeOutput) ConnectedDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AviatrixAwsTgwSecurityDomainType) []string { return v.ConnectedDomains }).(pulumi.StringArrayOutput)
}

func (o AviatrixAwsTgwSecurityDomainTypeOutput) NativeEgress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AviatrixAwsTgwSecurityDomainType) *bool { return v.NativeEgress }).(pulumi.BoolPtrOutput)
}

func (o AviatrixAwsTgwSecurityDomainTypeOutput) NativeFirewall() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AviatrixAwsTgwSecurityDomainType) *bool { return v.NativeFirewall }).(pulumi.BoolPtrOutput)
}

func (o AviatrixAwsTgwSecurityDomainTypeOutput) SecurityDomainName() pulumi.StringOutput {
	return o.ApplyT(func(v AviatrixAwsTgwSecurityDomainType) string { return v.SecurityDomainName }).(pulumi.StringOutput)
}

type AviatrixAwsTgwSecurityDomainTypeArrayOutput struct{ *pulumi.OutputState }

func (AviatrixAwsTgwSecurityDomainTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AviatrixAwsTgwSecurityDomainType)(nil)).Elem()
}

func (o AviatrixAwsTgwSecurityDomainTypeArrayOutput) ToAviatrixAwsTgwSecurityDomainTypeArrayOutput() AviatrixAwsTgwSecurityDomainTypeArrayOutput {
	return o
}

func (o AviatrixAwsTgwSecurityDomainTypeArrayOutput) ToAviatrixAwsTgwSecurityDomainTypeArrayOutputWithContext(ctx context.Context) AviatrixAwsTgwSecurityDomainTypeArrayOutput {
	return o
}

func (o AviatrixAwsTgwSecurityDomainTypeArrayOutput) Index(i pulumi.IntInput) AviatrixAwsTgwSecurityDomainTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AviatrixAwsTgwSecurityDomainType {
		return vs[0].([]AviatrixAwsTgwSecurityDomainType)[vs[1].(int)]
	}).(AviatrixAwsTgwSecurityDomainTypeOutput)
}

type AviatrixAwsTgwSecurityDomainAttachedVpc struct {
	CustomizedRouteAdvertisement *string `pulumi:"customizedRouteAdvertisement"`
	CustomizedRoutes             *string `pulumi:"customizedRoutes"`
	DisableLocalRoutePropagation *bool   `pulumi:"disableLocalRoutePropagation"`
	RouteTables                  *string `pulumi:"routeTables"`
	Subnets                      *string `pulumi:"subnets"`
	VpcAccountName               string  `pulumi:"vpcAccountName"`
	VpcId                        string  `pulumi:"vpcId"`
	VpcRegion                    string  `pulumi:"vpcRegion"`
}

// AviatrixAwsTgwSecurityDomainAttachedVpcInput is an input type that accepts AviatrixAwsTgwSecurityDomainAttachedVpcArgs and AviatrixAwsTgwSecurityDomainAttachedVpcOutput values.
// You can construct a concrete instance of `AviatrixAwsTgwSecurityDomainAttachedVpcInput` via:
//
//	AviatrixAwsTgwSecurityDomainAttachedVpcArgs{...}
type AviatrixAwsTgwSecurityDomainAttachedVpcInput interface {
	pulumi.Input

	ToAviatrixAwsTgwSecurityDomainAttachedVpcOutput() AviatrixAwsTgwSecurityDomainAttachedVpcOutput
	ToAviatrixAwsTgwSecurityDomainAttachedVpcOutputWithContext(context.Context) AviatrixAwsTgwSecurityDomainAttachedVpcOutput
}

type AviatrixAwsTgwSecurityDomainAttachedVpcArgs struct {
	CustomizedRouteAdvertisement pulumi.StringPtrInput `pulumi:"customizedRouteAdvertisement"`
	CustomizedRoutes             pulumi.StringPtrInput `pulumi:"customizedRoutes"`
	DisableLocalRoutePropagation pulumi.BoolPtrInput   `pulumi:"disableLocalRoutePropagation"`
	RouteTables                  pulumi.StringPtrInput `pulumi:"routeTables"`
	Subnets                      pulumi.StringPtrInput `pulumi:"subnets"`
	VpcAccountName               pulumi.StringInput    `pulumi:"vpcAccountName"`
	VpcId                        pulumi.StringInput    `pulumi:"vpcId"`
	VpcRegion                    pulumi.StringInput    `pulumi:"vpcRegion"`
}

func (AviatrixAwsTgwSecurityDomainAttachedVpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AviatrixAwsTgwSecurityDomainAttachedVpc)(nil)).Elem()
}

func (i AviatrixAwsTgwSecurityDomainAttachedVpcArgs) ToAviatrixAwsTgwSecurityDomainAttachedVpcOutput() AviatrixAwsTgwSecurityDomainAttachedVpcOutput {
	return i.ToAviatrixAwsTgwSecurityDomainAttachedVpcOutputWithContext(context.Background())
}

func (i AviatrixAwsTgwSecurityDomainAttachedVpcArgs) ToAviatrixAwsTgwSecurityDomainAttachedVpcOutputWithContext(ctx context.Context) AviatrixAwsTgwSecurityDomainAttachedVpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixAwsTgwSecurityDomainAttachedVpcOutput)
}

// AviatrixAwsTgwSecurityDomainAttachedVpcArrayInput is an input type that accepts AviatrixAwsTgwSecurityDomainAttachedVpcArray and AviatrixAwsTgwSecurityDomainAttachedVpcArrayOutput values.
// You can construct a concrete instance of `AviatrixAwsTgwSecurityDomainAttachedVpcArrayInput` via:
//
//	AviatrixAwsTgwSecurityDomainAttachedVpcArray{ AviatrixAwsTgwSecurityDomainAttachedVpcArgs{...} }
type AviatrixAwsTgwSecurityDomainAttachedVpcArrayInput interface {
	pulumi.Input

	ToAviatrixAwsTgwSecurityDomainAttachedVpcArrayOutput() AviatrixAwsTgwSecurityDomainAttachedVpcArrayOutput
	ToAviatrixAwsTgwSecurityDomainAttachedVpcArrayOutputWithContext(context.Context) AviatrixAwsTgwSecurityDomainAttachedVpcArrayOutput
}

type AviatrixAwsTgwSecurityDomainAttachedVpcArray []AviatrixAwsTgwSecurityDomainAttachedVpcInput

func (AviatrixAwsTgwSecurityDomainAttachedVpcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AviatrixAwsTgwSecurityDomainAttachedVpc)(nil)).Elem()
}

func (i AviatrixAwsTgwSecurityDomainAttachedVpcArray) ToAviatrixAwsTgwSecurityDomainAttachedVpcArrayOutput() AviatrixAwsTgwSecurityDomainAttachedVpcArrayOutput {
	return i.ToAviatrixAwsTgwSecurityDomainAttachedVpcArrayOutputWithContext(context.Background())
}

func (i AviatrixAwsTgwSecurityDomainAttachedVpcArray) ToAviatrixAwsTgwSecurityDomainAttachedVpcArrayOutputWithContext(ctx context.Context) AviatrixAwsTgwSecurityDomainAttachedVpcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixAwsTgwSecurityDomainAttachedVpcArrayOutput)
}

type AviatrixAwsTgwSecurityDomainAttachedVpcOutput struct{ *pulumi.OutputState }

func (AviatrixAwsTgwSecurityDomainAttachedVpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AviatrixAwsTgwSecurityDomainAttachedVpc)(nil)).Elem()
}

func (o AviatrixAwsTgwSecurityDomainAttachedVpcOutput) ToAviatrixAwsTgwSecurityDomainAttachedVpcOutput() AviatrixAwsTgwSecurityDomainAttachedVpcOutput {
	return o
}

func (o AviatrixAwsTgwSecurityDomainAttachedVpcOutput) ToAviatrixAwsTgwSecurityDomainAttachedVpcOutputWithContext(ctx context.Context) AviatrixAwsTgwSecurityDomainAttachedVpcOutput {
	return o
}

func (o AviatrixAwsTgwSecurityDomainAttachedVpcOutput) CustomizedRouteAdvertisement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AviatrixAwsTgwSecurityDomainAttachedVpc) *string { return v.CustomizedRouteAdvertisement }).(pulumi.StringPtrOutput)
}

func (o AviatrixAwsTgwSecurityDomainAttachedVpcOutput) CustomizedRoutes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AviatrixAwsTgwSecurityDomainAttachedVpc) *string { return v.CustomizedRoutes }).(pulumi.StringPtrOutput)
}

func (o AviatrixAwsTgwSecurityDomainAttachedVpcOutput) DisableLocalRoutePropagation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AviatrixAwsTgwSecurityDomainAttachedVpc) *bool { return v.DisableLocalRoutePropagation }).(pulumi.BoolPtrOutput)
}

func (o AviatrixAwsTgwSecurityDomainAttachedVpcOutput) RouteTables() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AviatrixAwsTgwSecurityDomainAttachedVpc) *string { return v.RouteTables }).(pulumi.StringPtrOutput)
}

func (o AviatrixAwsTgwSecurityDomainAttachedVpcOutput) Subnets() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AviatrixAwsTgwSecurityDomainAttachedVpc) *string { return v.Subnets }).(pulumi.StringPtrOutput)
}

func (o AviatrixAwsTgwSecurityDomainAttachedVpcOutput) VpcAccountName() pulumi.StringOutput {
	return o.ApplyT(func(v AviatrixAwsTgwSecurityDomainAttachedVpc) string { return v.VpcAccountName }).(pulumi.StringOutput)
}

func (o AviatrixAwsTgwSecurityDomainAttachedVpcOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v AviatrixAwsTgwSecurityDomainAttachedVpc) string { return v.VpcId }).(pulumi.StringOutput)
}

func (o AviatrixAwsTgwSecurityDomainAttachedVpcOutput) VpcRegion() pulumi.StringOutput {
	return o.ApplyT(func(v AviatrixAwsTgwSecurityDomainAttachedVpc) string { return v.VpcRegion }).(pulumi.StringOutput)
}

type AviatrixAwsTgwSecurityDomainAttachedVpcArrayOutput struct{ *pulumi.OutputState }

func (AviatrixAwsTgwSecurityDomainAttachedVpcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AviatrixAwsTgwSecurityDomainAttachedVpc)(nil)).Elem()
}

func (o AviatrixAwsTgwSecurityDomainAttachedVpcArrayOutput) ToAviatrixAwsTgwSecurityDomainAttachedVpcArrayOutput() AviatrixAwsTgwSecurityDomainAttachedVpcArrayOutput {
	return o
}

func (o AviatrixAwsTgwSecurityDomainAttachedVpcArrayOutput) ToAviatrixAwsTgwSecurityDomainAttachedVpcArrayOutputWithContext(ctx context.Context) AviatrixAwsTgwSecurityDomainAttachedVpcArrayOutput {
	return o
}

func (o AviatrixAwsTgwSecurityDomainAttachedVpcArrayOutput) Index(i pulumi.IntInput) AviatrixAwsTgwSecurityDomainAttachedVpcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AviatrixAwsTgwSecurityDomainAttachedVpc {
		return vs[0].([]AviatrixAwsTgwSecurityDomainAttachedVpc)[vs[1].(int)]
	}).(AviatrixAwsTgwSecurityDomainAttachedVpcOutput)
}

type AviatrixAwsTgwVpnConnVpnTunnelData struct {
	LastStatusChangeTime *string `pulumi:"lastStatusChangeTime"`
	RouteCount           *int    `pulumi:"routeCount"`
	Status               *string `pulumi:"status"`
	StatusMessage        *string `pulumi:"statusMessage"`
	TgwAsn               *string `pulumi:"tgwAsn"`
	TunnelName           *string `pulumi:"tunnelName"`
	VpnInsideAddress     *string `pulumi:"vpnInsideAddress"`
	VpnOutsideAddress    *string `pulumi:"vpnOutsideAddress"`
}

// AviatrixAwsTgwVpnConnVpnTunnelDataInput is an input type that accepts AviatrixAwsTgwVpnConnVpnTunnelDataArgs and AviatrixAwsTgwVpnConnVpnTunnelDataOutput values.
// You can construct a concrete instance of `AviatrixAwsTgwVpnConnVpnTunnelDataInput` via:
//
//	AviatrixAwsTgwVpnConnVpnTunnelDataArgs{...}
type AviatrixAwsTgwVpnConnVpnTunnelDataInput interface {
	pulumi.Input

	ToAviatrixAwsTgwVpnConnVpnTunnelDataOutput() AviatrixAwsTgwVpnConnVpnTunnelDataOutput
	ToAviatrixAwsTgwVpnConnVpnTunnelDataOutputWithContext(context.Context) AviatrixAwsTgwVpnConnVpnTunnelDataOutput
}

type AviatrixAwsTgwVpnConnVpnTunnelDataArgs struct {
	LastStatusChangeTime pulumi.StringPtrInput `pulumi:"lastStatusChangeTime"`
	RouteCount           pulumi.IntPtrInput    `pulumi:"routeCount"`
	Status               pulumi.StringPtrInput `pulumi:"status"`
	StatusMessage        pulumi.StringPtrInput `pulumi:"statusMessage"`
	TgwAsn               pulumi.StringPtrInput `pulumi:"tgwAsn"`
	TunnelName           pulumi.StringPtrInput `pulumi:"tunnelName"`
	VpnInsideAddress     pulumi.StringPtrInput `pulumi:"vpnInsideAddress"`
	VpnOutsideAddress    pulumi.StringPtrInput `pulumi:"vpnOutsideAddress"`
}

func (AviatrixAwsTgwVpnConnVpnTunnelDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AviatrixAwsTgwVpnConnVpnTunnelData)(nil)).Elem()
}

func (i AviatrixAwsTgwVpnConnVpnTunnelDataArgs) ToAviatrixAwsTgwVpnConnVpnTunnelDataOutput() AviatrixAwsTgwVpnConnVpnTunnelDataOutput {
	return i.ToAviatrixAwsTgwVpnConnVpnTunnelDataOutputWithContext(context.Background())
}

func (i AviatrixAwsTgwVpnConnVpnTunnelDataArgs) ToAviatrixAwsTgwVpnConnVpnTunnelDataOutputWithContext(ctx context.Context) AviatrixAwsTgwVpnConnVpnTunnelDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixAwsTgwVpnConnVpnTunnelDataOutput)
}

// AviatrixAwsTgwVpnConnVpnTunnelDataArrayInput is an input type that accepts AviatrixAwsTgwVpnConnVpnTunnelDataArray and AviatrixAwsTgwVpnConnVpnTunnelDataArrayOutput values.
// You can construct a concrete instance of `AviatrixAwsTgwVpnConnVpnTunnelDataArrayInput` via:
//
//	AviatrixAwsTgwVpnConnVpnTunnelDataArray{ AviatrixAwsTgwVpnConnVpnTunnelDataArgs{...} }
type AviatrixAwsTgwVpnConnVpnTunnelDataArrayInput interface {
	pulumi.Input

	ToAviatrixAwsTgwVpnConnVpnTunnelDataArrayOutput() AviatrixAwsTgwVpnConnVpnTunnelDataArrayOutput
	ToAviatrixAwsTgwVpnConnVpnTunnelDataArrayOutputWithContext(context.Context) AviatrixAwsTgwVpnConnVpnTunnelDataArrayOutput
}

type AviatrixAwsTgwVpnConnVpnTunnelDataArray []AviatrixAwsTgwVpnConnVpnTunnelDataInput

func (AviatrixAwsTgwVpnConnVpnTunnelDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AviatrixAwsTgwVpnConnVpnTunnelData)(nil)).Elem()
}

func (i AviatrixAwsTgwVpnConnVpnTunnelDataArray) ToAviatrixAwsTgwVpnConnVpnTunnelDataArrayOutput() AviatrixAwsTgwVpnConnVpnTunnelDataArrayOutput {
	return i.ToAviatrixAwsTgwVpnConnVpnTunnelDataArrayOutputWithContext(context.Background())
}

func (i AviatrixAwsTgwVpnConnVpnTunnelDataArray) ToAviatrixAwsTgwVpnConnVpnTunnelDataArrayOutputWithContext(ctx context.Context) AviatrixAwsTgwVpnConnVpnTunnelDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixAwsTgwVpnConnVpnTunnelDataArrayOutput)
}

type AviatrixAwsTgwVpnConnVpnTunnelDataOutput struct{ *pulumi.OutputState }

func (AviatrixAwsTgwVpnConnVpnTunnelDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AviatrixAwsTgwVpnConnVpnTunnelData)(nil)).Elem()
}

func (o AviatrixAwsTgwVpnConnVpnTunnelDataOutput) ToAviatrixAwsTgwVpnConnVpnTunnelDataOutput() AviatrixAwsTgwVpnConnVpnTunnelDataOutput {
	return o
}

func (o AviatrixAwsTgwVpnConnVpnTunnelDataOutput) ToAviatrixAwsTgwVpnConnVpnTunnelDataOutputWithContext(ctx context.Context) AviatrixAwsTgwVpnConnVpnTunnelDataOutput {
	return o
}

func (o AviatrixAwsTgwVpnConnVpnTunnelDataOutput) LastStatusChangeTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AviatrixAwsTgwVpnConnVpnTunnelData) *string { return v.LastStatusChangeTime }).(pulumi.StringPtrOutput)
}

func (o AviatrixAwsTgwVpnConnVpnTunnelDataOutput) RouteCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AviatrixAwsTgwVpnConnVpnTunnelData) *int { return v.RouteCount }).(pulumi.IntPtrOutput)
}

func (o AviatrixAwsTgwVpnConnVpnTunnelDataOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AviatrixAwsTgwVpnConnVpnTunnelData) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o AviatrixAwsTgwVpnConnVpnTunnelDataOutput) StatusMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AviatrixAwsTgwVpnConnVpnTunnelData) *string { return v.StatusMessage }).(pulumi.StringPtrOutput)
}

func (o AviatrixAwsTgwVpnConnVpnTunnelDataOutput) TgwAsn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AviatrixAwsTgwVpnConnVpnTunnelData) *string { return v.TgwAsn }).(pulumi.StringPtrOutput)
}

func (o AviatrixAwsTgwVpnConnVpnTunnelDataOutput) TunnelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AviatrixAwsTgwVpnConnVpnTunnelData) *string { return v.TunnelName }).(pulumi.StringPtrOutput)
}

func (o AviatrixAwsTgwVpnConnVpnTunnelDataOutput) VpnInsideAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AviatrixAwsTgwVpnConnVpnTunnelData) *string { return v.VpnInsideAddress }).(pulumi.StringPtrOutput)
}

func (o AviatrixAwsTgwVpnConnVpnTunnelDataOutput) VpnOutsideAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AviatrixAwsTgwVpnConnVpnTunnelData) *string { return v.VpnOutsideAddress }).(pulumi.StringPtrOutput)
}

type AviatrixAwsTgwVpnConnVpnTunnelDataArrayOutput struct{ *pulumi.OutputState }

func (AviatrixAwsTgwVpnConnVpnTunnelDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AviatrixAwsTgwVpnConnVpnTunnelData)(nil)).Elem()
}

func (o AviatrixAwsTgwVpnConnVpnTunnelDataArrayOutput) ToAviatrixAwsTgwVpnConnVpnTunnelDataArrayOutput() AviatrixAwsTgwVpnConnVpnTunnelDataArrayOutput {
	return o
}

func (o AviatrixAwsTgwVpnConnVpnTunnelDataArrayOutput) ToAviatrixAwsTgwVpnConnVpnTunnelDataArrayOutputWithContext(ctx context.Context) AviatrixAwsTgwVpnConnVpnTunnelDataArrayOutput {
	return o
}

func (o AviatrixAwsTgwVpnConnVpnTunnelDataArrayOutput) Index(i pulumi.IntInput) AviatrixAwsTgwVpnConnVpnTunnelDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AviatrixAwsTgwVpnConnVpnTunnelData {
		return vs[0].([]AviatrixAwsTgwVpnConnVpnTunnelData)[vs[1].(int)]
	}).(AviatrixAwsTgwVpnConnVpnTunnelDataOutput)
}

type AviatrixVpcPrivateSubnet struct {
	Cidr     *string `pulumi:"cidr"`
	Name     *string `pulumi:"name"`
	SubnetId *string `pulumi:"subnetId"`
}

// AviatrixVpcPrivateSubnetInput is an input type that accepts AviatrixVpcPrivateSubnetArgs and AviatrixVpcPrivateSubnetOutput values.
// You can construct a concrete instance of `AviatrixVpcPrivateSubnetInput` via:
//
//	AviatrixVpcPrivateSubnetArgs{...}
type AviatrixVpcPrivateSubnetInput interface {
	pulumi.Input

	ToAviatrixVpcPrivateSubnetOutput() AviatrixVpcPrivateSubnetOutput
	ToAviatrixVpcPrivateSubnetOutputWithContext(context.Context) AviatrixVpcPrivateSubnetOutput
}

type AviatrixVpcPrivateSubnetArgs struct {
	Cidr     pulumi.StringPtrInput `pulumi:"cidr"`
	Name     pulumi.StringPtrInput `pulumi:"name"`
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
}

func (AviatrixVpcPrivateSubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AviatrixVpcPrivateSubnet)(nil)).Elem()
}

func (i AviatrixVpcPrivateSubnetArgs) ToAviatrixVpcPrivateSubnetOutput() AviatrixVpcPrivateSubnetOutput {
	return i.ToAviatrixVpcPrivateSubnetOutputWithContext(context.Background())
}

func (i AviatrixVpcPrivateSubnetArgs) ToAviatrixVpcPrivateSubnetOutputWithContext(ctx context.Context) AviatrixVpcPrivateSubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixVpcPrivateSubnetOutput)
}

// AviatrixVpcPrivateSubnetArrayInput is an input type that accepts AviatrixVpcPrivateSubnetArray and AviatrixVpcPrivateSubnetArrayOutput values.
// You can construct a concrete instance of `AviatrixVpcPrivateSubnetArrayInput` via:
//
//	AviatrixVpcPrivateSubnetArray{ AviatrixVpcPrivateSubnetArgs{...} }
type AviatrixVpcPrivateSubnetArrayInput interface {
	pulumi.Input

	ToAviatrixVpcPrivateSubnetArrayOutput() AviatrixVpcPrivateSubnetArrayOutput
	ToAviatrixVpcPrivateSubnetArrayOutputWithContext(context.Context) AviatrixVpcPrivateSubnetArrayOutput
}

type AviatrixVpcPrivateSubnetArray []AviatrixVpcPrivateSubnetInput

func (AviatrixVpcPrivateSubnetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AviatrixVpcPrivateSubnet)(nil)).Elem()
}

func (i AviatrixVpcPrivateSubnetArray) ToAviatrixVpcPrivateSubnetArrayOutput() AviatrixVpcPrivateSubnetArrayOutput {
	return i.ToAviatrixVpcPrivateSubnetArrayOutputWithContext(context.Background())
}

func (i AviatrixVpcPrivateSubnetArray) ToAviatrixVpcPrivateSubnetArrayOutputWithContext(ctx context.Context) AviatrixVpcPrivateSubnetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixVpcPrivateSubnetArrayOutput)
}

type AviatrixVpcPrivateSubnetOutput struct{ *pulumi.OutputState }

func (AviatrixVpcPrivateSubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AviatrixVpcPrivateSubnet)(nil)).Elem()
}

func (o AviatrixVpcPrivateSubnetOutput) ToAviatrixVpcPrivateSubnetOutput() AviatrixVpcPrivateSubnetOutput {
	return o
}

func (o AviatrixVpcPrivateSubnetOutput) ToAviatrixVpcPrivateSubnetOutputWithContext(ctx context.Context) AviatrixVpcPrivateSubnetOutput {
	return o
}

func (o AviatrixVpcPrivateSubnetOutput) Cidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AviatrixVpcPrivateSubnet) *string { return v.Cidr }).(pulumi.StringPtrOutput)
}

func (o AviatrixVpcPrivateSubnetOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AviatrixVpcPrivateSubnet) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o AviatrixVpcPrivateSubnetOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AviatrixVpcPrivateSubnet) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

type AviatrixVpcPrivateSubnetArrayOutput struct{ *pulumi.OutputState }

func (AviatrixVpcPrivateSubnetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AviatrixVpcPrivateSubnet)(nil)).Elem()
}

func (o AviatrixVpcPrivateSubnetArrayOutput) ToAviatrixVpcPrivateSubnetArrayOutput() AviatrixVpcPrivateSubnetArrayOutput {
	return o
}

func (o AviatrixVpcPrivateSubnetArrayOutput) ToAviatrixVpcPrivateSubnetArrayOutputWithContext(ctx context.Context) AviatrixVpcPrivateSubnetArrayOutput {
	return o
}

func (o AviatrixVpcPrivateSubnetArrayOutput) Index(i pulumi.IntInput) AviatrixVpcPrivateSubnetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AviatrixVpcPrivateSubnet {
		return vs[0].([]AviatrixVpcPrivateSubnet)[vs[1].(int)]
	}).(AviatrixVpcPrivateSubnetOutput)
}

type AviatrixVpcPublicSubnet struct {
	Cidr     *string `pulumi:"cidr"`
	Name     *string `pulumi:"name"`
	SubnetId *string `pulumi:"subnetId"`
}

// AviatrixVpcPublicSubnetInput is an input type that accepts AviatrixVpcPublicSubnetArgs and AviatrixVpcPublicSubnetOutput values.
// You can construct a concrete instance of `AviatrixVpcPublicSubnetInput` via:
//
//	AviatrixVpcPublicSubnetArgs{...}
type AviatrixVpcPublicSubnetInput interface {
	pulumi.Input

	ToAviatrixVpcPublicSubnetOutput() AviatrixVpcPublicSubnetOutput
	ToAviatrixVpcPublicSubnetOutputWithContext(context.Context) AviatrixVpcPublicSubnetOutput
}

type AviatrixVpcPublicSubnetArgs struct {
	Cidr     pulumi.StringPtrInput `pulumi:"cidr"`
	Name     pulumi.StringPtrInput `pulumi:"name"`
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
}

func (AviatrixVpcPublicSubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AviatrixVpcPublicSubnet)(nil)).Elem()
}

func (i AviatrixVpcPublicSubnetArgs) ToAviatrixVpcPublicSubnetOutput() AviatrixVpcPublicSubnetOutput {
	return i.ToAviatrixVpcPublicSubnetOutputWithContext(context.Background())
}

func (i AviatrixVpcPublicSubnetArgs) ToAviatrixVpcPublicSubnetOutputWithContext(ctx context.Context) AviatrixVpcPublicSubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixVpcPublicSubnetOutput)
}

// AviatrixVpcPublicSubnetArrayInput is an input type that accepts AviatrixVpcPublicSubnetArray and AviatrixVpcPublicSubnetArrayOutput values.
// You can construct a concrete instance of `AviatrixVpcPublicSubnetArrayInput` via:
//
//	AviatrixVpcPublicSubnetArray{ AviatrixVpcPublicSubnetArgs{...} }
type AviatrixVpcPublicSubnetArrayInput interface {
	pulumi.Input

	ToAviatrixVpcPublicSubnetArrayOutput() AviatrixVpcPublicSubnetArrayOutput
	ToAviatrixVpcPublicSubnetArrayOutputWithContext(context.Context) AviatrixVpcPublicSubnetArrayOutput
}

type AviatrixVpcPublicSubnetArray []AviatrixVpcPublicSubnetInput

func (AviatrixVpcPublicSubnetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AviatrixVpcPublicSubnet)(nil)).Elem()
}

func (i AviatrixVpcPublicSubnetArray) ToAviatrixVpcPublicSubnetArrayOutput() AviatrixVpcPublicSubnetArrayOutput {
	return i.ToAviatrixVpcPublicSubnetArrayOutputWithContext(context.Background())
}

func (i AviatrixVpcPublicSubnetArray) ToAviatrixVpcPublicSubnetArrayOutputWithContext(ctx context.Context) AviatrixVpcPublicSubnetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixVpcPublicSubnetArrayOutput)
}

type AviatrixVpcPublicSubnetOutput struct{ *pulumi.OutputState }

func (AviatrixVpcPublicSubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AviatrixVpcPublicSubnet)(nil)).Elem()
}

func (o AviatrixVpcPublicSubnetOutput) ToAviatrixVpcPublicSubnetOutput() AviatrixVpcPublicSubnetOutput {
	return o
}

func (o AviatrixVpcPublicSubnetOutput) ToAviatrixVpcPublicSubnetOutputWithContext(ctx context.Context) AviatrixVpcPublicSubnetOutput {
	return o
}

func (o AviatrixVpcPublicSubnetOutput) Cidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AviatrixVpcPublicSubnet) *string { return v.Cidr }).(pulumi.StringPtrOutput)
}

func (o AviatrixVpcPublicSubnetOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AviatrixVpcPublicSubnet) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o AviatrixVpcPublicSubnetOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AviatrixVpcPublicSubnet) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

type AviatrixVpcPublicSubnetArrayOutput struct{ *pulumi.OutputState }

func (AviatrixVpcPublicSubnetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AviatrixVpcPublicSubnet)(nil)).Elem()
}

func (o AviatrixVpcPublicSubnetArrayOutput) ToAviatrixVpcPublicSubnetArrayOutput() AviatrixVpcPublicSubnetArrayOutput {
	return o
}

func (o AviatrixVpcPublicSubnetArrayOutput) ToAviatrixVpcPublicSubnetArrayOutputWithContext(ctx context.Context) AviatrixVpcPublicSubnetArrayOutput {
	return o
}

func (o AviatrixVpcPublicSubnetArrayOutput) Index(i pulumi.IntInput) AviatrixVpcPublicSubnetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AviatrixVpcPublicSubnet {
		return vs[0].([]AviatrixVpcPublicSubnet)[vs[1].(int)]
	}).(AviatrixVpcPublicSubnetOutput)
}

type AviatrixVpcSubnet struct {
	Cidr     *string `pulumi:"cidr"`
	Name     *string `pulumi:"name"`
	Region   *string `pulumi:"region"`
	SubnetId *string `pulumi:"subnetId"`
}

// AviatrixVpcSubnetInput is an input type that accepts AviatrixVpcSubnetArgs and AviatrixVpcSubnetOutput values.
// You can construct a concrete instance of `AviatrixVpcSubnetInput` via:
//
//	AviatrixVpcSubnetArgs{...}
type AviatrixVpcSubnetInput interface {
	pulumi.Input

	ToAviatrixVpcSubnetOutput() AviatrixVpcSubnetOutput
	ToAviatrixVpcSubnetOutputWithContext(context.Context) AviatrixVpcSubnetOutput
}

type AviatrixVpcSubnetArgs struct {
	Cidr     pulumi.StringPtrInput `pulumi:"cidr"`
	Name     pulumi.StringPtrInput `pulumi:"name"`
	Region   pulumi.StringPtrInput `pulumi:"region"`
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
}

func (AviatrixVpcSubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AviatrixVpcSubnet)(nil)).Elem()
}

func (i AviatrixVpcSubnetArgs) ToAviatrixVpcSubnetOutput() AviatrixVpcSubnetOutput {
	return i.ToAviatrixVpcSubnetOutputWithContext(context.Background())
}

func (i AviatrixVpcSubnetArgs) ToAviatrixVpcSubnetOutputWithContext(ctx context.Context) AviatrixVpcSubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixVpcSubnetOutput)
}

// AviatrixVpcSubnetArrayInput is an input type that accepts AviatrixVpcSubnetArray and AviatrixVpcSubnetArrayOutput values.
// You can construct a concrete instance of `AviatrixVpcSubnetArrayInput` via:
//
//	AviatrixVpcSubnetArray{ AviatrixVpcSubnetArgs{...} }
type AviatrixVpcSubnetArrayInput interface {
	pulumi.Input

	ToAviatrixVpcSubnetArrayOutput() AviatrixVpcSubnetArrayOutput
	ToAviatrixVpcSubnetArrayOutputWithContext(context.Context) AviatrixVpcSubnetArrayOutput
}

type AviatrixVpcSubnetArray []AviatrixVpcSubnetInput

func (AviatrixVpcSubnetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AviatrixVpcSubnet)(nil)).Elem()
}

func (i AviatrixVpcSubnetArray) ToAviatrixVpcSubnetArrayOutput() AviatrixVpcSubnetArrayOutput {
	return i.ToAviatrixVpcSubnetArrayOutputWithContext(context.Background())
}

func (i AviatrixVpcSubnetArray) ToAviatrixVpcSubnetArrayOutputWithContext(ctx context.Context) AviatrixVpcSubnetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixVpcSubnetArrayOutput)
}

type AviatrixVpcSubnetOutput struct{ *pulumi.OutputState }

func (AviatrixVpcSubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AviatrixVpcSubnet)(nil)).Elem()
}

func (o AviatrixVpcSubnetOutput) ToAviatrixVpcSubnetOutput() AviatrixVpcSubnetOutput {
	return o
}

func (o AviatrixVpcSubnetOutput) ToAviatrixVpcSubnetOutputWithContext(ctx context.Context) AviatrixVpcSubnetOutput {
	return o
}

func (o AviatrixVpcSubnetOutput) Cidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AviatrixVpcSubnet) *string { return v.Cidr }).(pulumi.StringPtrOutput)
}

func (o AviatrixVpcSubnetOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AviatrixVpcSubnet) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o AviatrixVpcSubnetOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AviatrixVpcSubnet) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o AviatrixVpcSubnetOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AviatrixVpcSubnet) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

type AviatrixVpcSubnetArrayOutput struct{ *pulumi.OutputState }

func (AviatrixVpcSubnetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AviatrixVpcSubnet)(nil)).Elem()
}

func (o AviatrixVpcSubnetArrayOutput) ToAviatrixVpcSubnetArrayOutput() AviatrixVpcSubnetArrayOutput {
	return o
}

func (o AviatrixVpcSubnetArrayOutput) ToAviatrixVpcSubnetArrayOutputWithContext(ctx context.Context) AviatrixVpcSubnetArrayOutput {
	return o
}

func (o AviatrixVpcSubnetArrayOutput) Index(i pulumi.IntInput) AviatrixVpcSubnetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AviatrixVpcSubnet {
		return vs[0].([]AviatrixVpcSubnet)[vs[1].(int)]
	}).(AviatrixVpcSubnetOutput)
}

type ProviderIgnoreTags struct {
	KeyPrefixes []string `pulumi:"keyPrefixes"`
	Keys        []string `pulumi:"keys"`
}

// ProviderIgnoreTagsInput is an input type that accepts ProviderIgnoreTagsArgs and ProviderIgnoreTagsOutput values.
// You can construct a concrete instance of `ProviderIgnoreTagsInput` via:
//
//	ProviderIgnoreTagsArgs{...}
type ProviderIgnoreTagsInput interface {
	pulumi.Input

	ToProviderIgnoreTagsOutput() ProviderIgnoreTagsOutput
	ToProviderIgnoreTagsOutputWithContext(context.Context) ProviderIgnoreTagsOutput
}

type ProviderIgnoreTagsArgs struct {
	KeyPrefixes pulumi.StringArrayInput `pulumi:"keyPrefixes"`
	Keys        pulumi.StringArrayInput `pulumi:"keys"`
}

func (ProviderIgnoreTagsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderIgnoreTags)(nil)).Elem()
}

func (i ProviderIgnoreTagsArgs) ToProviderIgnoreTagsOutput() ProviderIgnoreTagsOutput {
	return i.ToProviderIgnoreTagsOutputWithContext(context.Background())
}

func (i ProviderIgnoreTagsArgs) ToProviderIgnoreTagsOutputWithContext(ctx context.Context) ProviderIgnoreTagsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderIgnoreTagsOutput)
}

func (i ProviderIgnoreTagsArgs) ToProviderIgnoreTagsPtrOutput() ProviderIgnoreTagsPtrOutput {
	return i.ToProviderIgnoreTagsPtrOutputWithContext(context.Background())
}

func (i ProviderIgnoreTagsArgs) ToProviderIgnoreTagsPtrOutputWithContext(ctx context.Context) ProviderIgnoreTagsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderIgnoreTagsOutput).ToProviderIgnoreTagsPtrOutputWithContext(ctx)
}

// ProviderIgnoreTagsPtrInput is an input type that accepts ProviderIgnoreTagsArgs, ProviderIgnoreTagsPtr and ProviderIgnoreTagsPtrOutput values.
// You can construct a concrete instance of `ProviderIgnoreTagsPtrInput` via:
//
//	        ProviderIgnoreTagsArgs{...}
//
//	or:
//
//	        nil
type ProviderIgnoreTagsPtrInput interface {
	pulumi.Input

	ToProviderIgnoreTagsPtrOutput() ProviderIgnoreTagsPtrOutput
	ToProviderIgnoreTagsPtrOutputWithContext(context.Context) ProviderIgnoreTagsPtrOutput
}

type providerIgnoreTagsPtrType ProviderIgnoreTagsArgs

func ProviderIgnoreTagsPtr(v *ProviderIgnoreTagsArgs) ProviderIgnoreTagsPtrInput {
	return (*providerIgnoreTagsPtrType)(v)
}

func (*providerIgnoreTagsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderIgnoreTags)(nil)).Elem()
}

func (i *providerIgnoreTagsPtrType) ToProviderIgnoreTagsPtrOutput() ProviderIgnoreTagsPtrOutput {
	return i.ToProviderIgnoreTagsPtrOutputWithContext(context.Background())
}

func (i *providerIgnoreTagsPtrType) ToProviderIgnoreTagsPtrOutputWithContext(ctx context.Context) ProviderIgnoreTagsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderIgnoreTagsPtrOutput)
}

type ProviderIgnoreTagsOutput struct{ *pulumi.OutputState }

func (ProviderIgnoreTagsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderIgnoreTags)(nil)).Elem()
}

func (o ProviderIgnoreTagsOutput) ToProviderIgnoreTagsOutput() ProviderIgnoreTagsOutput {
	return o
}

func (o ProviderIgnoreTagsOutput) ToProviderIgnoreTagsOutputWithContext(ctx context.Context) ProviderIgnoreTagsOutput {
	return o
}

func (o ProviderIgnoreTagsOutput) ToProviderIgnoreTagsPtrOutput() ProviderIgnoreTagsPtrOutput {
	return o.ToProviderIgnoreTagsPtrOutputWithContext(context.Background())
}

func (o ProviderIgnoreTagsOutput) ToProviderIgnoreTagsPtrOutputWithContext(ctx context.Context) ProviderIgnoreTagsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProviderIgnoreTags) *ProviderIgnoreTags {
		return &v
	}).(ProviderIgnoreTagsPtrOutput)
}

func (o ProviderIgnoreTagsOutput) KeyPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProviderIgnoreTags) []string { return v.KeyPrefixes }).(pulumi.StringArrayOutput)
}

func (o ProviderIgnoreTagsOutput) Keys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProviderIgnoreTags) []string { return v.Keys }).(pulumi.StringArrayOutput)
}

type ProviderIgnoreTagsPtrOutput struct{ *pulumi.OutputState }

func (ProviderIgnoreTagsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderIgnoreTags)(nil)).Elem()
}

func (o ProviderIgnoreTagsPtrOutput) ToProviderIgnoreTagsPtrOutput() ProviderIgnoreTagsPtrOutput {
	return o
}

func (o ProviderIgnoreTagsPtrOutput) ToProviderIgnoreTagsPtrOutputWithContext(ctx context.Context) ProviderIgnoreTagsPtrOutput {
	return o
}

func (o ProviderIgnoreTagsPtrOutput) Elem() ProviderIgnoreTagsOutput {
	return o.ApplyT(func(v *ProviderIgnoreTags) ProviderIgnoreTags {
		if v != nil {
			return *v
		}
		var ret ProviderIgnoreTags
		return ret
	}).(ProviderIgnoreTagsOutput)
}

func (o ProviderIgnoreTagsPtrOutput) KeyPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProviderIgnoreTags) []string {
		if v == nil {
			return nil
		}
		return v.KeyPrefixes
	}).(pulumi.StringArrayOutput)
}

func (o ProviderIgnoreTagsPtrOutput) Keys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProviderIgnoreTags) []string {
		if v == nil {
			return nil
		}
		return v.Keys
	}).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixAppDomainSelectorInput)(nil)).Elem(), AviatrixAppDomainSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixAppDomainSelectorPtrInput)(nil)).Elem(), AviatrixAppDomainSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixAppDomainSelectorMatchExpressionInput)(nil)).Elem(), AviatrixAppDomainSelectorMatchExpressionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixAppDomainSelectorMatchExpressionArrayInput)(nil)).Elem(), AviatrixAppDomainSelectorMatchExpressionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixAwsTgwSecurityDomainTypeInput)(nil)).Elem(), AviatrixAwsTgwSecurityDomainTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixAwsTgwSecurityDomainTypeArrayInput)(nil)).Elem(), AviatrixAwsTgwSecurityDomainTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixAwsTgwSecurityDomainAttachedVpcInput)(nil)).Elem(), AviatrixAwsTgwSecurityDomainAttachedVpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixAwsTgwSecurityDomainAttachedVpcArrayInput)(nil)).Elem(), AviatrixAwsTgwSecurityDomainAttachedVpcArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixAwsTgwVpnConnVpnTunnelDataInput)(nil)).Elem(), AviatrixAwsTgwVpnConnVpnTunnelDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixAwsTgwVpnConnVpnTunnelDataArrayInput)(nil)).Elem(), AviatrixAwsTgwVpnConnVpnTunnelDataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixVpcPrivateSubnetInput)(nil)).Elem(), AviatrixVpcPrivateSubnetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixVpcPrivateSubnetArrayInput)(nil)).Elem(), AviatrixVpcPrivateSubnetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixVpcPublicSubnetInput)(nil)).Elem(), AviatrixVpcPublicSubnetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixVpcPublicSubnetArrayInput)(nil)).Elem(), AviatrixVpcPublicSubnetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixVpcSubnetInput)(nil)).Elem(), AviatrixVpcSubnetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixVpcSubnetArrayInput)(nil)).Elem(), AviatrixVpcSubnetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderIgnoreTagsInput)(nil)).Elem(), ProviderIgnoreTagsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderIgnoreTagsPtrInput)(nil)).Elem(), ProviderIgnoreTagsArgs{})
	pulumi.RegisterOutputType(AviatrixAppDomainSelectorOutput{})
	pulumi.RegisterOutputType(AviatrixAppDomainSelectorPtrOutput{})
	pulumi.RegisterOutputType(AviatrixAppDomainSelectorMatchExpressionOutput{})
	pulumi.RegisterOutputType(AviatrixAppDomainSelectorMatchExpressionArrayOutput{})
	pulumi.RegisterOutputType(AviatrixAwsTgwSecurityDomainTypeOutput{})
	pulumi.RegisterOutputType(AviatrixAwsTgwSecurityDomainTypeArrayOutput{})
	pulumi.RegisterOutputType(AviatrixAwsTgwSecurityDomainAttachedVpcOutput{})
	pulumi.RegisterOutputType(AviatrixAwsTgwSecurityDomainAttachedVpcArrayOutput{})
	pulumi.RegisterOutputType(AviatrixAwsTgwVpnConnVpnTunnelDataOutput{})
	pulumi.RegisterOutputType(AviatrixAwsTgwVpnConnVpnTunnelDataArrayOutput{})
	pulumi.RegisterOutputType(AviatrixVpcPrivateSubnetOutput{})
	pulumi.RegisterOutputType(AviatrixVpcPrivateSubnetArrayOutput{})
	pulumi.RegisterOutputType(AviatrixVpcPublicSubnetOutput{})
	pulumi.RegisterOutputType(AviatrixVpcPublicSubnetArrayOutput{})
	pulumi.RegisterOutputType(AviatrixVpcSubnetOutput{})
	pulumi.RegisterOutputType(AviatrixVpcSubnetArrayOutput{})
	pulumi.RegisterOutputType(ProviderIgnoreTagsOutput{})
	pulumi.RegisterOutputType(ProviderIgnoreTagsPtrOutput{})
}
