// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aviatrix

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AviatrixAwsTgwSecurityDomainConn struct {
	pulumi.CustomResourceState

	// Security domain name 1.
	DomainName1 pulumi.StringOutput `pulumi:"domainName1"`
	// Security domain name 2.
	DomainName2 pulumi.StringOutput `pulumi:"domainName2"`
	// AWS TGW name.
	TgwName pulumi.StringOutput `pulumi:"tgwName"`
}

// NewAviatrixAwsTgwSecurityDomainConn registers a new resource with the given unique name, arguments, and options.
func NewAviatrixAwsTgwSecurityDomainConn(ctx *pulumi.Context,
	name string, args *AviatrixAwsTgwSecurityDomainConnArgs, opts ...pulumi.ResourceOption) (*AviatrixAwsTgwSecurityDomainConn, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DomainName1 == nil {
		return nil, errors.New("invalid value for required argument 'DomainName1'")
	}
	if args.DomainName2 == nil {
		return nil, errors.New("invalid value for required argument 'DomainName2'")
	}
	if args.TgwName == nil {
		return nil, errors.New("invalid value for required argument 'TgwName'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource AviatrixAwsTgwSecurityDomainConn
	err := ctx.RegisterResource("aviatrix:index/aviatrixAwsTgwSecurityDomainConn:AviatrixAwsTgwSecurityDomainConn", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAviatrixAwsTgwSecurityDomainConn gets an existing AviatrixAwsTgwSecurityDomainConn resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAviatrixAwsTgwSecurityDomainConn(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AviatrixAwsTgwSecurityDomainConnState, opts ...pulumi.ResourceOption) (*AviatrixAwsTgwSecurityDomainConn, error) {
	var resource AviatrixAwsTgwSecurityDomainConn
	err := ctx.ReadResource("aviatrix:index/aviatrixAwsTgwSecurityDomainConn:AviatrixAwsTgwSecurityDomainConn", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AviatrixAwsTgwSecurityDomainConn resources.
type aviatrixAwsTgwSecurityDomainConnState struct {
	// Security domain name 1.
	DomainName1 *string `pulumi:"domainName1"`
	// Security domain name 2.
	DomainName2 *string `pulumi:"domainName2"`
	// AWS TGW name.
	TgwName *string `pulumi:"tgwName"`
}

type AviatrixAwsTgwSecurityDomainConnState struct {
	// Security domain name 1.
	DomainName1 pulumi.StringPtrInput
	// Security domain name 2.
	DomainName2 pulumi.StringPtrInput
	// AWS TGW name.
	TgwName pulumi.StringPtrInput
}

func (AviatrixAwsTgwSecurityDomainConnState) ElementType() reflect.Type {
	return reflect.TypeOf((*aviatrixAwsTgwSecurityDomainConnState)(nil)).Elem()
}

type aviatrixAwsTgwSecurityDomainConnArgs struct {
	// Security domain name 1.
	DomainName1 string `pulumi:"domainName1"`
	// Security domain name 2.
	DomainName2 string `pulumi:"domainName2"`
	// AWS TGW name.
	TgwName string `pulumi:"tgwName"`
}

// The set of arguments for constructing a AviatrixAwsTgwSecurityDomainConn resource.
type AviatrixAwsTgwSecurityDomainConnArgs struct {
	// Security domain name 1.
	DomainName1 pulumi.StringInput
	// Security domain name 2.
	DomainName2 pulumi.StringInput
	// AWS TGW name.
	TgwName pulumi.StringInput
}

func (AviatrixAwsTgwSecurityDomainConnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*aviatrixAwsTgwSecurityDomainConnArgs)(nil)).Elem()
}

type AviatrixAwsTgwSecurityDomainConnInput interface {
	pulumi.Input

	ToAviatrixAwsTgwSecurityDomainConnOutput() AviatrixAwsTgwSecurityDomainConnOutput
	ToAviatrixAwsTgwSecurityDomainConnOutputWithContext(ctx context.Context) AviatrixAwsTgwSecurityDomainConnOutput
}

func (*AviatrixAwsTgwSecurityDomainConn) ElementType() reflect.Type {
	return reflect.TypeOf((**AviatrixAwsTgwSecurityDomainConn)(nil)).Elem()
}

func (i *AviatrixAwsTgwSecurityDomainConn) ToAviatrixAwsTgwSecurityDomainConnOutput() AviatrixAwsTgwSecurityDomainConnOutput {
	return i.ToAviatrixAwsTgwSecurityDomainConnOutputWithContext(context.Background())
}

func (i *AviatrixAwsTgwSecurityDomainConn) ToAviatrixAwsTgwSecurityDomainConnOutputWithContext(ctx context.Context) AviatrixAwsTgwSecurityDomainConnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixAwsTgwSecurityDomainConnOutput)
}

// AviatrixAwsTgwSecurityDomainConnArrayInput is an input type that accepts AviatrixAwsTgwSecurityDomainConnArray and AviatrixAwsTgwSecurityDomainConnArrayOutput values.
// You can construct a concrete instance of `AviatrixAwsTgwSecurityDomainConnArrayInput` via:
//
//	AviatrixAwsTgwSecurityDomainConnArray{ AviatrixAwsTgwSecurityDomainConnArgs{...} }
type AviatrixAwsTgwSecurityDomainConnArrayInput interface {
	pulumi.Input

	ToAviatrixAwsTgwSecurityDomainConnArrayOutput() AviatrixAwsTgwSecurityDomainConnArrayOutput
	ToAviatrixAwsTgwSecurityDomainConnArrayOutputWithContext(context.Context) AviatrixAwsTgwSecurityDomainConnArrayOutput
}

type AviatrixAwsTgwSecurityDomainConnArray []AviatrixAwsTgwSecurityDomainConnInput

func (AviatrixAwsTgwSecurityDomainConnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AviatrixAwsTgwSecurityDomainConn)(nil)).Elem()
}

func (i AviatrixAwsTgwSecurityDomainConnArray) ToAviatrixAwsTgwSecurityDomainConnArrayOutput() AviatrixAwsTgwSecurityDomainConnArrayOutput {
	return i.ToAviatrixAwsTgwSecurityDomainConnArrayOutputWithContext(context.Background())
}

func (i AviatrixAwsTgwSecurityDomainConnArray) ToAviatrixAwsTgwSecurityDomainConnArrayOutputWithContext(ctx context.Context) AviatrixAwsTgwSecurityDomainConnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixAwsTgwSecurityDomainConnArrayOutput)
}

// AviatrixAwsTgwSecurityDomainConnMapInput is an input type that accepts AviatrixAwsTgwSecurityDomainConnMap and AviatrixAwsTgwSecurityDomainConnMapOutput values.
// You can construct a concrete instance of `AviatrixAwsTgwSecurityDomainConnMapInput` via:
//
//	AviatrixAwsTgwSecurityDomainConnMap{ "key": AviatrixAwsTgwSecurityDomainConnArgs{...} }
type AviatrixAwsTgwSecurityDomainConnMapInput interface {
	pulumi.Input

	ToAviatrixAwsTgwSecurityDomainConnMapOutput() AviatrixAwsTgwSecurityDomainConnMapOutput
	ToAviatrixAwsTgwSecurityDomainConnMapOutputWithContext(context.Context) AviatrixAwsTgwSecurityDomainConnMapOutput
}

type AviatrixAwsTgwSecurityDomainConnMap map[string]AviatrixAwsTgwSecurityDomainConnInput

func (AviatrixAwsTgwSecurityDomainConnMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AviatrixAwsTgwSecurityDomainConn)(nil)).Elem()
}

func (i AviatrixAwsTgwSecurityDomainConnMap) ToAviatrixAwsTgwSecurityDomainConnMapOutput() AviatrixAwsTgwSecurityDomainConnMapOutput {
	return i.ToAviatrixAwsTgwSecurityDomainConnMapOutputWithContext(context.Background())
}

func (i AviatrixAwsTgwSecurityDomainConnMap) ToAviatrixAwsTgwSecurityDomainConnMapOutputWithContext(ctx context.Context) AviatrixAwsTgwSecurityDomainConnMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixAwsTgwSecurityDomainConnMapOutput)
}

type AviatrixAwsTgwSecurityDomainConnOutput struct{ *pulumi.OutputState }

func (AviatrixAwsTgwSecurityDomainConnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AviatrixAwsTgwSecurityDomainConn)(nil)).Elem()
}

func (o AviatrixAwsTgwSecurityDomainConnOutput) ToAviatrixAwsTgwSecurityDomainConnOutput() AviatrixAwsTgwSecurityDomainConnOutput {
	return o
}

func (o AviatrixAwsTgwSecurityDomainConnOutput) ToAviatrixAwsTgwSecurityDomainConnOutputWithContext(ctx context.Context) AviatrixAwsTgwSecurityDomainConnOutput {
	return o
}

// Security domain name 1.
func (o AviatrixAwsTgwSecurityDomainConnOutput) DomainName1() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixAwsTgwSecurityDomainConn) pulumi.StringOutput { return v.DomainName1 }).(pulumi.StringOutput)
}

// Security domain name 2.
func (o AviatrixAwsTgwSecurityDomainConnOutput) DomainName2() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixAwsTgwSecurityDomainConn) pulumi.StringOutput { return v.DomainName2 }).(pulumi.StringOutput)
}

// AWS TGW name.
func (o AviatrixAwsTgwSecurityDomainConnOutput) TgwName() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixAwsTgwSecurityDomainConn) pulumi.StringOutput { return v.TgwName }).(pulumi.StringOutput)
}

type AviatrixAwsTgwSecurityDomainConnArrayOutput struct{ *pulumi.OutputState }

func (AviatrixAwsTgwSecurityDomainConnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AviatrixAwsTgwSecurityDomainConn)(nil)).Elem()
}

func (o AviatrixAwsTgwSecurityDomainConnArrayOutput) ToAviatrixAwsTgwSecurityDomainConnArrayOutput() AviatrixAwsTgwSecurityDomainConnArrayOutput {
	return o
}

func (o AviatrixAwsTgwSecurityDomainConnArrayOutput) ToAviatrixAwsTgwSecurityDomainConnArrayOutputWithContext(ctx context.Context) AviatrixAwsTgwSecurityDomainConnArrayOutput {
	return o
}

func (o AviatrixAwsTgwSecurityDomainConnArrayOutput) Index(i pulumi.IntInput) AviatrixAwsTgwSecurityDomainConnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AviatrixAwsTgwSecurityDomainConn {
		return vs[0].([]*AviatrixAwsTgwSecurityDomainConn)[vs[1].(int)]
	}).(AviatrixAwsTgwSecurityDomainConnOutput)
}

type AviatrixAwsTgwSecurityDomainConnMapOutput struct{ *pulumi.OutputState }

func (AviatrixAwsTgwSecurityDomainConnMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AviatrixAwsTgwSecurityDomainConn)(nil)).Elem()
}

func (o AviatrixAwsTgwSecurityDomainConnMapOutput) ToAviatrixAwsTgwSecurityDomainConnMapOutput() AviatrixAwsTgwSecurityDomainConnMapOutput {
	return o
}

func (o AviatrixAwsTgwSecurityDomainConnMapOutput) ToAviatrixAwsTgwSecurityDomainConnMapOutputWithContext(ctx context.Context) AviatrixAwsTgwSecurityDomainConnMapOutput {
	return o
}

func (o AviatrixAwsTgwSecurityDomainConnMapOutput) MapIndex(k pulumi.StringInput) AviatrixAwsTgwSecurityDomainConnOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AviatrixAwsTgwSecurityDomainConn {
		return vs[0].(map[string]*AviatrixAwsTgwSecurityDomainConn)[vs[1].(string)]
	}).(AviatrixAwsTgwSecurityDomainConnOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixAwsTgwSecurityDomainConnInput)(nil)).Elem(), &AviatrixAwsTgwSecurityDomainConn{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixAwsTgwSecurityDomainConnArrayInput)(nil)).Elem(), AviatrixAwsTgwSecurityDomainConnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixAwsTgwSecurityDomainConnMapInput)(nil)).Elem(), AviatrixAwsTgwSecurityDomainConnMap{})
	pulumi.RegisterOutputType(AviatrixAwsTgwSecurityDomainConnOutput{})
	pulumi.RegisterOutputType(AviatrixAwsTgwSecurityDomainConnArrayOutput{})
	pulumi.RegisterOutputType(AviatrixAwsTgwSecurityDomainConnMapOutput{})
}
