// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aviatrix

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The **aviatrix_firewall_tag** resource allows the creation and management of [Aviatrix Stateful Firewall tags](https://docs.aviatrix.com/HowTos/tag_firewall.html) for tag-based security for gateways.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/astipkovits/pulumi-aviatrix/sdk/go/aviatrix"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := aviatrix.NewAviatrixFirewallTag(ctx, "testFirewallTag", &aviatrix.AviatrixFirewallTagArgs{
//				CidrLists: AviatrixFirewallTagCidrListArray{
//					&AviatrixFirewallTagCidrListArgs{
//						Cidr:        pulumi.String("10.1.0.0/24"),
//						CidrTagName: pulumi.String("a1"),
//					},
//					&AviatrixFirewallTagCidrListArgs{
//						Cidr:        pulumi.String("10.2.0.0/24"),
//						CidrTagName: pulumi.String("b1"),
//					},
//				},
//				FirewallTag: pulumi.String("test-firewall-tag"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// **firewall_tag** can be imported using the `firewall_tag`, e.g.
//
// ```sh
//
//	$ pulumi import aviatrix:index/aviatrixFirewallTag:AviatrixFirewallTag test firewall_tag
//
// ```
type AviatrixFirewallTag struct {
	pulumi.CustomResourceState

	// Dynamic block representing a CIDR to filter, and a name to identify it:
	CidrLists AviatrixFirewallTagCidrListArrayOutput `pulumi:"cidrLists"`
	// Name of the stateful firewall tag to be created.
	FirewallTag pulumi.StringOutput `pulumi:"firewallTag"`
}

// NewAviatrixFirewallTag registers a new resource with the given unique name, arguments, and options.
func NewAviatrixFirewallTag(ctx *pulumi.Context,
	name string, args *AviatrixFirewallTagArgs, opts ...pulumi.ResourceOption) (*AviatrixFirewallTag, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FirewallTag == nil {
		return nil, errors.New("invalid value for required argument 'FirewallTag'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource AviatrixFirewallTag
	err := ctx.RegisterResource("aviatrix:index/aviatrixFirewallTag:AviatrixFirewallTag", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAviatrixFirewallTag gets an existing AviatrixFirewallTag resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAviatrixFirewallTag(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AviatrixFirewallTagState, opts ...pulumi.ResourceOption) (*AviatrixFirewallTag, error) {
	var resource AviatrixFirewallTag
	err := ctx.ReadResource("aviatrix:index/aviatrixFirewallTag:AviatrixFirewallTag", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AviatrixFirewallTag resources.
type aviatrixFirewallTagState struct {
	// Dynamic block representing a CIDR to filter, and a name to identify it:
	CidrLists []AviatrixFirewallTagCidrList `pulumi:"cidrLists"`
	// Name of the stateful firewall tag to be created.
	FirewallTag *string `pulumi:"firewallTag"`
}

type AviatrixFirewallTagState struct {
	// Dynamic block representing a CIDR to filter, and a name to identify it:
	CidrLists AviatrixFirewallTagCidrListArrayInput
	// Name of the stateful firewall tag to be created.
	FirewallTag pulumi.StringPtrInput
}

func (AviatrixFirewallTagState) ElementType() reflect.Type {
	return reflect.TypeOf((*aviatrixFirewallTagState)(nil)).Elem()
}

type aviatrixFirewallTagArgs struct {
	// Dynamic block representing a CIDR to filter, and a name to identify it:
	CidrLists []AviatrixFirewallTagCidrList `pulumi:"cidrLists"`
	// Name of the stateful firewall tag to be created.
	FirewallTag string `pulumi:"firewallTag"`
}

// The set of arguments for constructing a AviatrixFirewallTag resource.
type AviatrixFirewallTagArgs struct {
	// Dynamic block representing a CIDR to filter, and a name to identify it:
	CidrLists AviatrixFirewallTagCidrListArrayInput
	// Name of the stateful firewall tag to be created.
	FirewallTag pulumi.StringInput
}

func (AviatrixFirewallTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*aviatrixFirewallTagArgs)(nil)).Elem()
}

type AviatrixFirewallTagInput interface {
	pulumi.Input

	ToAviatrixFirewallTagOutput() AviatrixFirewallTagOutput
	ToAviatrixFirewallTagOutputWithContext(ctx context.Context) AviatrixFirewallTagOutput
}

func (*AviatrixFirewallTag) ElementType() reflect.Type {
	return reflect.TypeOf((**AviatrixFirewallTag)(nil)).Elem()
}

func (i *AviatrixFirewallTag) ToAviatrixFirewallTagOutput() AviatrixFirewallTagOutput {
	return i.ToAviatrixFirewallTagOutputWithContext(context.Background())
}

func (i *AviatrixFirewallTag) ToAviatrixFirewallTagOutputWithContext(ctx context.Context) AviatrixFirewallTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixFirewallTagOutput)
}

// AviatrixFirewallTagArrayInput is an input type that accepts AviatrixFirewallTagArray and AviatrixFirewallTagArrayOutput values.
// You can construct a concrete instance of `AviatrixFirewallTagArrayInput` via:
//
//	AviatrixFirewallTagArray{ AviatrixFirewallTagArgs{...} }
type AviatrixFirewallTagArrayInput interface {
	pulumi.Input

	ToAviatrixFirewallTagArrayOutput() AviatrixFirewallTagArrayOutput
	ToAviatrixFirewallTagArrayOutputWithContext(context.Context) AviatrixFirewallTagArrayOutput
}

type AviatrixFirewallTagArray []AviatrixFirewallTagInput

func (AviatrixFirewallTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AviatrixFirewallTag)(nil)).Elem()
}

func (i AviatrixFirewallTagArray) ToAviatrixFirewallTagArrayOutput() AviatrixFirewallTagArrayOutput {
	return i.ToAviatrixFirewallTagArrayOutputWithContext(context.Background())
}

func (i AviatrixFirewallTagArray) ToAviatrixFirewallTagArrayOutputWithContext(ctx context.Context) AviatrixFirewallTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixFirewallTagArrayOutput)
}

// AviatrixFirewallTagMapInput is an input type that accepts AviatrixFirewallTagMap and AviatrixFirewallTagMapOutput values.
// You can construct a concrete instance of `AviatrixFirewallTagMapInput` via:
//
//	AviatrixFirewallTagMap{ "key": AviatrixFirewallTagArgs{...} }
type AviatrixFirewallTagMapInput interface {
	pulumi.Input

	ToAviatrixFirewallTagMapOutput() AviatrixFirewallTagMapOutput
	ToAviatrixFirewallTagMapOutputWithContext(context.Context) AviatrixFirewallTagMapOutput
}

type AviatrixFirewallTagMap map[string]AviatrixFirewallTagInput

func (AviatrixFirewallTagMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AviatrixFirewallTag)(nil)).Elem()
}

func (i AviatrixFirewallTagMap) ToAviatrixFirewallTagMapOutput() AviatrixFirewallTagMapOutput {
	return i.ToAviatrixFirewallTagMapOutputWithContext(context.Background())
}

func (i AviatrixFirewallTagMap) ToAviatrixFirewallTagMapOutputWithContext(ctx context.Context) AviatrixFirewallTagMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixFirewallTagMapOutput)
}

type AviatrixFirewallTagOutput struct{ *pulumi.OutputState }

func (AviatrixFirewallTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AviatrixFirewallTag)(nil)).Elem()
}

func (o AviatrixFirewallTagOutput) ToAviatrixFirewallTagOutput() AviatrixFirewallTagOutput {
	return o
}

func (o AviatrixFirewallTagOutput) ToAviatrixFirewallTagOutputWithContext(ctx context.Context) AviatrixFirewallTagOutput {
	return o
}

// Dynamic block representing a CIDR to filter, and a name to identify it:
func (o AviatrixFirewallTagOutput) CidrLists() AviatrixFirewallTagCidrListArrayOutput {
	return o.ApplyT(func(v *AviatrixFirewallTag) AviatrixFirewallTagCidrListArrayOutput { return v.CidrLists }).(AviatrixFirewallTagCidrListArrayOutput)
}

// Name of the stateful firewall tag to be created.
func (o AviatrixFirewallTagOutput) FirewallTag() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixFirewallTag) pulumi.StringOutput { return v.FirewallTag }).(pulumi.StringOutput)
}

type AviatrixFirewallTagArrayOutput struct{ *pulumi.OutputState }

func (AviatrixFirewallTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AviatrixFirewallTag)(nil)).Elem()
}

func (o AviatrixFirewallTagArrayOutput) ToAviatrixFirewallTagArrayOutput() AviatrixFirewallTagArrayOutput {
	return o
}

func (o AviatrixFirewallTagArrayOutput) ToAviatrixFirewallTagArrayOutputWithContext(ctx context.Context) AviatrixFirewallTagArrayOutput {
	return o
}

func (o AviatrixFirewallTagArrayOutput) Index(i pulumi.IntInput) AviatrixFirewallTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AviatrixFirewallTag {
		return vs[0].([]*AviatrixFirewallTag)[vs[1].(int)]
	}).(AviatrixFirewallTagOutput)
}

type AviatrixFirewallTagMapOutput struct{ *pulumi.OutputState }

func (AviatrixFirewallTagMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AviatrixFirewallTag)(nil)).Elem()
}

func (o AviatrixFirewallTagMapOutput) ToAviatrixFirewallTagMapOutput() AviatrixFirewallTagMapOutput {
	return o
}

func (o AviatrixFirewallTagMapOutput) ToAviatrixFirewallTagMapOutputWithContext(ctx context.Context) AviatrixFirewallTagMapOutput {
	return o
}

func (o AviatrixFirewallTagMapOutput) MapIndex(k pulumi.StringInput) AviatrixFirewallTagOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AviatrixFirewallTag {
		return vs[0].(map[string]*AviatrixFirewallTag)[vs[1].(string)]
	}).(AviatrixFirewallTagOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixFirewallTagInput)(nil)).Elem(), &AviatrixFirewallTag{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixFirewallTagArrayInput)(nil)).Elem(), AviatrixFirewallTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixFirewallTagMapInput)(nil)).Elem(), AviatrixFirewallTagMap{})
	pulumi.RegisterOutputType(AviatrixFirewallTagOutput{})
	pulumi.RegisterOutputType(AviatrixFirewallTagArrayOutput{})
	pulumi.RegisterOutputType(AviatrixFirewallTagMapOutput{})
}
