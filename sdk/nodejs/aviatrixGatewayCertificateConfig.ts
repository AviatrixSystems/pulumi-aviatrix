// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The **aviatrix_gateway_certificate_config** resource allows the management of Aviatrix [gateway certificate](https://docs.aviatrix.com/HowTos/controller_certificate.html#gateway-certificate-management) configuration. Available as of provider version R2.18.1+.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aviatrix from "@astipkovits/aviatrix";
 * import * as fs from "fs";
 *
 * // Aviatrix Gateway Certificate Management
 * const testGatewayCert = new aviatrix.AviatrixGatewayCertificateConfig("testGatewayCert", {
 *     caCertificate: fs.readFileSync("path/to/CA_cert.pem"),
 *     caPrivateKey: fs.readFileSync("path/to/CA_private.key"),
 * });
 * ```
 *
 * ## Import
 *
 * !> **WARNING:** When importing, the provider cannot read your private key or certificate into the state file. After importing, if you do not want to change the values of the CA private key or certificate you must set the attributes `ca_certificate` and `ca_private_key` to the empty string (""). Otherwise, Terraform will see a diff and force replacement. `aviatrix_gateway_certificate_config` can be imported using controller IP with the dots(.) replaces with dashes(-), e.g. controller IP is 10.11.12.13
 *
 * ```sh
 *  $ pulumi import aviatrix:index/aviatrixGatewayCertificateConfig:AviatrixGatewayCertificateConfig test 10-11-12-13
 * ```
 */
export class AviatrixGatewayCertificateConfig extends pulumi.CustomResource {
    /**
     * Get an existing AviatrixGatewayCertificateConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AviatrixGatewayCertificateConfigState, opts?: pulumi.CustomResourceOptions): AviatrixGatewayCertificateConfig {
        return new AviatrixGatewayCertificateConfig(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aviatrix:index/aviatrixGatewayCertificateConfig:AviatrixGatewayCertificateConfig';

    /**
     * Returns true if the given object is an instance of AviatrixGatewayCertificateConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AviatrixGatewayCertificateConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AviatrixGatewayCertificateConfig.__pulumiType;
    }

    /**
     * CA Certificate in PEM format. To read certificate from a file please use the built-in `file` function.
     */
    public readonly caCertificate!: pulumi.Output<string>;
    /**
     * CA Private Key. To read the private key from a file please use the built-in `file` function.
     */
    public readonly caPrivateKey!: pulumi.Output<string>;

    /**
     * Create a AviatrixGatewayCertificateConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AviatrixGatewayCertificateConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AviatrixGatewayCertificateConfigArgs | AviatrixGatewayCertificateConfigState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AviatrixGatewayCertificateConfigState | undefined;
            resourceInputs["caCertificate"] = state ? state.caCertificate : undefined;
            resourceInputs["caPrivateKey"] = state ? state.caPrivateKey : undefined;
        } else {
            const args = argsOrState as AviatrixGatewayCertificateConfigArgs | undefined;
            if ((!args || args.caCertificate === undefined) && !opts.urn) {
                throw new Error("Missing required property 'caCertificate'");
            }
            if ((!args || args.caPrivateKey === undefined) && !opts.urn) {
                throw new Error("Missing required property 'caPrivateKey'");
            }
            resourceInputs["caCertificate"] = args ? args.caCertificate : undefined;
            resourceInputs["caPrivateKey"] = args?.caPrivateKey ? pulumi.secret(args.caPrivateKey) : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["caPrivateKey"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(AviatrixGatewayCertificateConfig.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AviatrixGatewayCertificateConfig resources.
 */
export interface AviatrixGatewayCertificateConfigState {
    /**
     * CA Certificate in PEM format. To read certificate from a file please use the built-in `file` function.
     */
    caCertificate?: pulumi.Input<string>;
    /**
     * CA Private Key. To read the private key from a file please use the built-in `file` function.
     */
    caPrivateKey?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AviatrixGatewayCertificateConfig resource.
 */
export interface AviatrixGatewayCertificateConfigArgs {
    /**
     * CA Certificate in PEM format. To read certificate from a file please use the built-in `file` function.
     */
    caCertificate: pulumi.Input<string>;
    /**
     * CA Private Key. To read the private key from a file please use the built-in `file` function.
     */
    caPrivateKey: pulumi.Input<string>;
}
