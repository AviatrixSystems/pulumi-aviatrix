// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aviatrix

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get the list of device WAN interfaces for use in other resources.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/astipkovits/pulumi-aviatrix/sdk/go/aviatrix"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err = aviatrix.GetAviatrixDeviceInterfaces(ctx, &GetAviatrixDeviceInterfacesArgs{
//				DeviceName: "test-device",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetAviatrixDeviceInterfaces(ctx *pulumi.Context, args *GetAviatrixDeviceInterfacesArgs, opts ...pulumi.InvokeOption) (*GetAviatrixDeviceInterfacesResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetAviatrixDeviceInterfacesResult
	err := ctx.Invoke("aviatrix:index/getAviatrixDeviceInterfaces:getAviatrixDeviceInterfaces", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAviatrixDeviceInterfaces.
type GetAviatrixDeviceInterfacesArgs struct {
	// Device name.
	DeviceName string `pulumi:"deviceName"`
}

// A collection of values returned by getAviatrixDeviceInterfaces.
type GetAviatrixDeviceInterfacesResult struct {
	DeviceName string `pulumi:"deviceName"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// List of WAN interfaces.
	WanInterfaces []GetAviatrixDeviceInterfacesWanInterface `pulumi:"wanInterfaces"`
}

func GetAviatrixDeviceInterfacesOutput(ctx *pulumi.Context, args GetAviatrixDeviceInterfacesOutputArgs, opts ...pulumi.InvokeOption) GetAviatrixDeviceInterfacesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAviatrixDeviceInterfacesResult, error) {
			args := v.(GetAviatrixDeviceInterfacesArgs)
			r, err := GetAviatrixDeviceInterfaces(ctx, &args, opts...)
			var s GetAviatrixDeviceInterfacesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetAviatrixDeviceInterfacesResultOutput)
}

// A collection of arguments for invoking getAviatrixDeviceInterfaces.
type GetAviatrixDeviceInterfacesOutputArgs struct {
	// Device name.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
}

func (GetAviatrixDeviceInterfacesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAviatrixDeviceInterfacesArgs)(nil)).Elem()
}

// A collection of values returned by getAviatrixDeviceInterfaces.
type GetAviatrixDeviceInterfacesResultOutput struct{ *pulumi.OutputState }

func (GetAviatrixDeviceInterfacesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAviatrixDeviceInterfacesResult)(nil)).Elem()
}

func (o GetAviatrixDeviceInterfacesResultOutput) ToGetAviatrixDeviceInterfacesResultOutput() GetAviatrixDeviceInterfacesResultOutput {
	return o
}

func (o GetAviatrixDeviceInterfacesResultOutput) ToGetAviatrixDeviceInterfacesResultOutputWithContext(ctx context.Context) GetAviatrixDeviceInterfacesResultOutput {
	return o
}

func (o GetAviatrixDeviceInterfacesResultOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAviatrixDeviceInterfacesResult) string { return v.DeviceName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAviatrixDeviceInterfacesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAviatrixDeviceInterfacesResult) string { return v.Id }).(pulumi.StringOutput)
}

// List of WAN interfaces.
func (o GetAviatrixDeviceInterfacesResultOutput) WanInterfaces() GetAviatrixDeviceInterfacesWanInterfaceArrayOutput {
	return o.ApplyT(func(v GetAviatrixDeviceInterfacesResult) []GetAviatrixDeviceInterfacesWanInterface {
		return v.WanInterfaces
	}).(GetAviatrixDeviceInterfacesWanInterfaceArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAviatrixDeviceInterfacesResultOutput{})
}
