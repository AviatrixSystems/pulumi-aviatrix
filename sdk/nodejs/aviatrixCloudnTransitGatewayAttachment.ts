// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class AviatrixCloudnTransitGatewayAttachment extends pulumi.CustomResource {
    /**
     * Get an existing AviatrixCloudnTransitGatewayAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AviatrixCloudnTransitGatewayAttachmentState, opts?: pulumi.CustomResourceOptions): AviatrixCloudnTransitGatewayAttachment {
        return new AviatrixCloudnTransitGatewayAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aviatrix:index/aviatrixCloudnTransitGatewayAttachment:AviatrixCloudnTransitGatewayAttachment';

    /**
     * Returns true if the given object is an instance of AviatrixCloudnTransitGatewayAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AviatrixCloudnTransitGatewayAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AviatrixCloudnTransitGatewayAttachment.__pulumiType;
    }

    /**
     * CloudN BGP AS Number.
     */
    public readonly cloudnBgpAsn!: pulumi.Output<string>;
    /**
     * CloudN LAN Interface Neighbor's BGP AS Number.
     */
    public readonly cloudnLanInterfaceNeighborBgpAsn!: pulumi.Output<string>;
    /**
     * CloudN LAN Interface Neighbor's IP.
     */
    public readonly cloudnLanInterfaceNeighborIp!: pulumi.Output<string>;
    /**
     * Connection name.
     */
    public readonly connectionName!: pulumi.Output<string>;
    /**
     * Device name.
     */
    public readonly deviceName!: pulumi.Output<string>;
    /**
     * Enable jumbo frame.
     */
    public readonly enableJumboFrame!: pulumi.Output<boolean | undefined>;
    /**
     * Enable over private network.
     */
    public readonly enableOverPrivateNetwork!: pulumi.Output<boolean | undefined>;
    /**
     * AS path prepend.
     */
    public readonly prependAsPaths!: pulumi.Output<string[] | undefined>;
    /**
     * Transit Gateway BGP AS Number.
     */
    public readonly transitGatewayBgpAsn!: pulumi.Output<string>;
    /**
     * Transit Gateway name.
     */
    public readonly transitGatewayName!: pulumi.Output<string>;

    /**
     * Create a AviatrixCloudnTransitGatewayAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AviatrixCloudnTransitGatewayAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AviatrixCloudnTransitGatewayAttachmentArgs | AviatrixCloudnTransitGatewayAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AviatrixCloudnTransitGatewayAttachmentState | undefined;
            resourceInputs["cloudnBgpAsn"] = state ? state.cloudnBgpAsn : undefined;
            resourceInputs["cloudnLanInterfaceNeighborBgpAsn"] = state ? state.cloudnLanInterfaceNeighborBgpAsn : undefined;
            resourceInputs["cloudnLanInterfaceNeighborIp"] = state ? state.cloudnLanInterfaceNeighborIp : undefined;
            resourceInputs["connectionName"] = state ? state.connectionName : undefined;
            resourceInputs["deviceName"] = state ? state.deviceName : undefined;
            resourceInputs["enableJumboFrame"] = state ? state.enableJumboFrame : undefined;
            resourceInputs["enableOverPrivateNetwork"] = state ? state.enableOverPrivateNetwork : undefined;
            resourceInputs["prependAsPaths"] = state ? state.prependAsPaths : undefined;
            resourceInputs["transitGatewayBgpAsn"] = state ? state.transitGatewayBgpAsn : undefined;
            resourceInputs["transitGatewayName"] = state ? state.transitGatewayName : undefined;
        } else {
            const args = argsOrState as AviatrixCloudnTransitGatewayAttachmentArgs | undefined;
            if ((!args || args.cloudnBgpAsn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cloudnBgpAsn'");
            }
            if ((!args || args.cloudnLanInterfaceNeighborBgpAsn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cloudnLanInterfaceNeighborBgpAsn'");
            }
            if ((!args || args.cloudnLanInterfaceNeighborIp === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cloudnLanInterfaceNeighborIp'");
            }
            if ((!args || args.connectionName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'connectionName'");
            }
            if ((!args || args.deviceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'deviceName'");
            }
            if ((!args || args.transitGatewayBgpAsn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'transitGatewayBgpAsn'");
            }
            if ((!args || args.transitGatewayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'transitGatewayName'");
            }
            resourceInputs["cloudnBgpAsn"] = args ? args.cloudnBgpAsn : undefined;
            resourceInputs["cloudnLanInterfaceNeighborBgpAsn"] = args ? args.cloudnLanInterfaceNeighborBgpAsn : undefined;
            resourceInputs["cloudnLanInterfaceNeighborIp"] = args ? args.cloudnLanInterfaceNeighborIp : undefined;
            resourceInputs["connectionName"] = args ? args.connectionName : undefined;
            resourceInputs["deviceName"] = args ? args.deviceName : undefined;
            resourceInputs["enableJumboFrame"] = args ? args.enableJumboFrame : undefined;
            resourceInputs["enableOverPrivateNetwork"] = args ? args.enableOverPrivateNetwork : undefined;
            resourceInputs["prependAsPaths"] = args ? args.prependAsPaths : undefined;
            resourceInputs["transitGatewayBgpAsn"] = args ? args.transitGatewayBgpAsn : undefined;
            resourceInputs["transitGatewayName"] = args ? args.transitGatewayName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AviatrixCloudnTransitGatewayAttachment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AviatrixCloudnTransitGatewayAttachment resources.
 */
export interface AviatrixCloudnTransitGatewayAttachmentState {
    /**
     * CloudN BGP AS Number.
     */
    cloudnBgpAsn?: pulumi.Input<string>;
    /**
     * CloudN LAN Interface Neighbor's BGP AS Number.
     */
    cloudnLanInterfaceNeighborBgpAsn?: pulumi.Input<string>;
    /**
     * CloudN LAN Interface Neighbor's IP.
     */
    cloudnLanInterfaceNeighborIp?: pulumi.Input<string>;
    /**
     * Connection name.
     */
    connectionName?: pulumi.Input<string>;
    /**
     * Device name.
     */
    deviceName?: pulumi.Input<string>;
    /**
     * Enable jumbo frame.
     */
    enableJumboFrame?: pulumi.Input<boolean>;
    /**
     * Enable over private network.
     */
    enableOverPrivateNetwork?: pulumi.Input<boolean>;
    /**
     * AS path prepend.
     */
    prependAsPaths?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Transit Gateway BGP AS Number.
     */
    transitGatewayBgpAsn?: pulumi.Input<string>;
    /**
     * Transit Gateway name.
     */
    transitGatewayName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AviatrixCloudnTransitGatewayAttachment resource.
 */
export interface AviatrixCloudnTransitGatewayAttachmentArgs {
    /**
     * CloudN BGP AS Number.
     */
    cloudnBgpAsn: pulumi.Input<string>;
    /**
     * CloudN LAN Interface Neighbor's BGP AS Number.
     */
    cloudnLanInterfaceNeighborBgpAsn: pulumi.Input<string>;
    /**
     * CloudN LAN Interface Neighbor's IP.
     */
    cloudnLanInterfaceNeighborIp: pulumi.Input<string>;
    /**
     * Connection name.
     */
    connectionName: pulumi.Input<string>;
    /**
     * Device name.
     */
    deviceName: pulumi.Input<string>;
    /**
     * Enable jumbo frame.
     */
    enableJumboFrame?: pulumi.Input<boolean>;
    /**
     * Enable over private network.
     */
    enableOverPrivateNetwork?: pulumi.Input<boolean>;
    /**
     * AS path prepend.
     */
    prependAsPaths?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Transit Gateway BGP AS Number.
     */
    transitGatewayBgpAsn: pulumi.Input<string>;
    /**
     * Transit Gateway name.
     */
    transitGatewayName: pulumi.Input<string>;
}
