// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aviatrix
{
    public static class GetAviatrixDeviceInterfaces
    {
        public static Task<GetAviatrixDeviceInterfacesResult> InvokeAsync(GetAviatrixDeviceInterfacesArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAviatrixDeviceInterfacesResult>("aviatrix:index/getAviatrixDeviceInterfaces:getAviatrixDeviceInterfaces", args ?? new GetAviatrixDeviceInterfacesArgs(), options.WithDefaults());

        public static Output<GetAviatrixDeviceInterfacesResult> Invoke(GetAviatrixDeviceInterfacesInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetAviatrixDeviceInterfacesResult>("aviatrix:index/getAviatrixDeviceInterfaces:getAviatrixDeviceInterfaces", args ?? new GetAviatrixDeviceInterfacesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAviatrixDeviceInterfacesArgs : global::Pulumi.InvokeArgs
    {
        [Input("deviceName", required: true)]
        public string DeviceName { get; set; } = null!;

        public GetAviatrixDeviceInterfacesArgs()
        {
        }
        public static new GetAviatrixDeviceInterfacesArgs Empty => new GetAviatrixDeviceInterfacesArgs();
    }

    public sealed class GetAviatrixDeviceInterfacesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("deviceName", required: true)]
        public Input<string> DeviceName { get; set; } = null!;

        public GetAviatrixDeviceInterfacesInvokeArgs()
        {
        }
        public static new GetAviatrixDeviceInterfacesInvokeArgs Empty => new GetAviatrixDeviceInterfacesInvokeArgs();
    }


    [OutputType]
    public sealed class GetAviatrixDeviceInterfacesResult
    {
        public readonly string DeviceName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetAviatrixDeviceInterfacesWanInterfaceResult> WanInterfaces;

        [OutputConstructor]
        private GetAviatrixDeviceInterfacesResult(
            string deviceName,

            string id,

            ImmutableArray<Outputs.GetAviatrixDeviceInterfacesWanInterfaceResult> wanInterfaces)
        {
            DeviceName = deviceName;
            Id = id;
            WanInterfaces = wanInterfaces;
        }
    }
}
