// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The **aviatrix_vpn_user** resource creates and manages Aviatrix VPN users.
 *
 * > **NOTE:** As of R2.15, management of user/profile attachment can be set using `manageUserAttachment`. This argument must be to *true* in either **aviatrix_vpn_user** or **aviatrix_vpn_profile**. If attachment is managed in the **aviatrix_vpn_user** (set to *true*), it must be set to *false* in the **aviatrix_vpn_profile** resource and vice versa.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aviatrix from "@pulumi/aviatrix";
 *
 * // Create an Aviatrix VPN User
 * const testVpnUser = new aviatrix.AviatrixVpnUser("test_vpn_user", {
 *     gwName: "gw1",
 *     userEmail: "user@aviatrix.com",
 *     userName: "username1",
 *     vpcId: "vpc-abcd1234",
 * });
 * ```
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aviatrix from "@pulumi/aviatrix";
 *
 * // Create an Aviatrix VPN User under Geo VPN
 * const testVpnUser = new aviatrix.AviatrixVpnUser("test_vpn_user", {
 *     dnsName: "vpn.testuser.com",
 *     userEmail: "user@aviatrix.com",
 *     userName: "username1",
 * });
 * ```
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aviatrix from "@pulumi/aviatrix";
 *
 * // Create an Aviatrix VPN User on GCP
 * // See note below about vpc_id formatting for GCP
 * const testVpnUser = new aviatrix.AviatrixVpnUser("test_vpn_user", {
 *     gwName: "gw1",
 *     userEmail: "user@aviatrix.com",
 *     userName: "username1",
 *     vpcId: pulumi.interpolate`${aviatrix_vpc_test_vpc.vpcId}~-~${aviatrix_account_test_account.gcloudProjectId}`,
 * });
 * ```
 *
 * ## Import
 *
 * **vpn_user** can be imported using the `user_name`, e.g.
 *
 * ```sh
 *  $ pulumi import aviatrix:index/aviatrixVpnUser:AviatrixVpnUser test user_name
 * ```
 */
export class AviatrixVpnUser extends pulumi.CustomResource {
    /**
     * Get an existing AviatrixVpnUser resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AviatrixVpnUserState, opts?: pulumi.CustomResourceOptions): AviatrixVpnUser {
        return new AviatrixVpnUser(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aviatrix:index/aviatrixVpnUser:AviatrixVpnUser';

    /**
     * Returns true if the given object is an instance of AviatrixVpnUser.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AviatrixVpnUser {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AviatrixVpnUser.__pulumiType;
    }

    /**
     * FQDN of a DNS based VPN service such as GeoVPN or UDP load balancer. Example: "vpn.testuser.com".
     */
    public readonly dnsName!: pulumi.Output<string | undefined>;
    /**
     * If ELB is enabled, this will be the name of the ELB, else it will be the name of the Aviatrix VPN gateway. Used together with `vpcId`. Example: "gw1".
     */
    public readonly gwName!: pulumi.Output<string | undefined>;
    /**
     * This parameter is a switch to determine whether or not to manage VPN user attachments to the VPN profile using this resource. If this is set to false, attachment must be managed using the **aviatrix_vpn_profile** resource. Valid values: true, false. Default value: false.
     */
    public readonly manageUserAttachment!: pulumi.Output<boolean | undefined>;
    /**
     * List of VPN profiles for user to attach to. This should be set to null if `manageUserAttachment` is set to false.
     */
    public readonly profiles!: pulumi.Output<string[] | undefined>;
    /**
     * This is the name of the SAML endpoint to which the user is to be associated. This is required if adding user to a SAML gateway/LB.
     */
    public readonly samlEndpoint!: pulumi.Output<string | undefined>;
    /**
     * VPN user's email. Example: "abc@xyz.com".
     */
    public readonly userEmail!: pulumi.Output<string | undefined>;
    /**
     * VPN user name. Example: "user".
     */
    public readonly userName!: pulumi.Output<string>;
    /**
     * VPC ID of Aviatrix VPN gateway. Used together with `gwName`. Example: "vpc-abcd1234".
     */
    public readonly vpcId!: pulumi.Output<string | undefined>;

    /**
     * Create a AviatrixVpnUser resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AviatrixVpnUserArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AviatrixVpnUserArgs | AviatrixVpnUserState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AviatrixVpnUserState | undefined;
            resourceInputs["dnsName"] = state ? state.dnsName : undefined;
            resourceInputs["gwName"] = state ? state.gwName : undefined;
            resourceInputs["manageUserAttachment"] = state ? state.manageUserAttachment : undefined;
            resourceInputs["profiles"] = state ? state.profiles : undefined;
            resourceInputs["samlEndpoint"] = state ? state.samlEndpoint : undefined;
            resourceInputs["userEmail"] = state ? state.userEmail : undefined;
            resourceInputs["userName"] = state ? state.userName : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
        } else {
            const args = argsOrState as AviatrixVpnUserArgs | undefined;
            if ((!args || args.userName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'userName'");
            }
            resourceInputs["dnsName"] = args ? args.dnsName : undefined;
            resourceInputs["gwName"] = args ? args.gwName : undefined;
            resourceInputs["manageUserAttachment"] = args ? args.manageUserAttachment : undefined;
            resourceInputs["profiles"] = args ? args.profiles : undefined;
            resourceInputs["samlEndpoint"] = args ? args.samlEndpoint : undefined;
            resourceInputs["userEmail"] = args ? args.userEmail : undefined;
            resourceInputs["userName"] = args ? args.userName : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AviatrixVpnUser.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AviatrixVpnUser resources.
 */
export interface AviatrixVpnUserState {
    /**
     * FQDN of a DNS based VPN service such as GeoVPN or UDP load balancer. Example: "vpn.testuser.com".
     */
    dnsName?: pulumi.Input<string>;
    /**
     * If ELB is enabled, this will be the name of the ELB, else it will be the name of the Aviatrix VPN gateway. Used together with `vpcId`. Example: "gw1".
     */
    gwName?: pulumi.Input<string>;
    /**
     * This parameter is a switch to determine whether or not to manage VPN user attachments to the VPN profile using this resource. If this is set to false, attachment must be managed using the **aviatrix_vpn_profile** resource. Valid values: true, false. Default value: false.
     */
    manageUserAttachment?: pulumi.Input<boolean>;
    /**
     * List of VPN profiles for user to attach to. This should be set to null if `manageUserAttachment` is set to false.
     */
    profiles?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * This is the name of the SAML endpoint to which the user is to be associated. This is required if adding user to a SAML gateway/LB.
     */
    samlEndpoint?: pulumi.Input<string>;
    /**
     * VPN user's email. Example: "abc@xyz.com".
     */
    userEmail?: pulumi.Input<string>;
    /**
     * VPN user name. Example: "user".
     */
    userName?: pulumi.Input<string>;
    /**
     * VPC ID of Aviatrix VPN gateway. Used together with `gwName`. Example: "vpc-abcd1234".
     */
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AviatrixVpnUser resource.
 */
export interface AviatrixVpnUserArgs {
    /**
     * FQDN of a DNS based VPN service such as GeoVPN or UDP load balancer. Example: "vpn.testuser.com".
     */
    dnsName?: pulumi.Input<string>;
    /**
     * If ELB is enabled, this will be the name of the ELB, else it will be the name of the Aviatrix VPN gateway. Used together with `vpcId`. Example: "gw1".
     */
    gwName?: pulumi.Input<string>;
    /**
     * This parameter is a switch to determine whether or not to manage VPN user attachments to the VPN profile using this resource. If this is set to false, attachment must be managed using the **aviatrix_vpn_profile** resource. Valid values: true, false. Default value: false.
     */
    manageUserAttachment?: pulumi.Input<boolean>;
    /**
     * List of VPN profiles for user to attach to. This should be set to null if `manageUserAttachment` is set to false.
     */
    profiles?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * This is the name of the SAML endpoint to which the user is to be associated. This is required if adding user to a SAML gateway/LB.
     */
    samlEndpoint?: pulumi.Input<string>;
    /**
     * VPN user's email. Example: "abc@xyz.com".
     */
    userEmail?: pulumi.Input<string>;
    /**
     * VPN user name. Example: "user".
     */
    userName: pulumi.Input<string>;
    /**
     * VPC ID of Aviatrix VPN gateway. Used together with `gwName`. Example: "vpc-abcd1234".
     */
    vpcId?: pulumi.Input<string>;
}
