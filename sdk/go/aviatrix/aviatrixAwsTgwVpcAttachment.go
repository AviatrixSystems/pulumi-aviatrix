// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aviatrix

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AviatrixAwsTgwVpcAttachment struct {
	pulumi.CustomResourceState

	// Advanced option. Customized route(s) to be advertised to other VPCs that are connected to the same TGW.
	CustomizedRouteAdvertisement pulumi.StringPtrOutput `pulumi:"customizedRouteAdvertisement"`
	// Advanced option. Customized Spoke VPC Routes. It allows the admin to enter non-RFC1918 routes in the VPC route table
	// targeting the TGW.
	CustomizedRoutes pulumi.StringPtrOutput `pulumi:"customizedRoutes"`
	// Advanced option. If set to true, it disables automatic route propagation of this VPC to other VPCs within the same
	// network domain.
	DisableLocalRoutePropagation pulumi.BoolPtrOutput `pulumi:"disableLocalRoutePropagation"`
	// Edge attachment ID. To allow access to the private IP of the MGMT interface of the Firewalls, set this attribute to
	// enable Management Access From Onprem. This feature advertises the Firewalls private MGMT subnet to your Edge domain.
	EdgeAttachment pulumi.StringPtrOutput `pulumi:"edgeAttachment"`
	// The name of the network domain.
	NetworkDomainName pulumi.StringPtrOutput `pulumi:"networkDomainName"`
	// Region of cloud provider.
	Region pulumi.StringOutput `pulumi:"region"`
	// Advanced option. Route tables separated by ',' to participate in TGW Orchestrator, i.e., learned routes will be
	// propagated to these route tables.
	RouteTables pulumi.StringOutput `pulumi:"routeTables"`
	// The name of the security domain.
	//
	// Deprecated: Please use network_domain_name instead.
	SecurityDomainName pulumi.StringPtrOutput `pulumi:"securityDomainName"`
	// Advanced option. VPC subnets separated by ',' to attach to the VPC. If left blank, Aviatrix Controller automatically
	// selects a subnet representing each AZ for the VPC attachment.
	Subnets pulumi.StringOutput `pulumi:"subnets"`
	// Name of the AWS TGW.
	TgwName pulumi.StringOutput `pulumi:"tgwName"`
	// This parameter represents the name of a Cloud-Account in Aviatrix controller.
	VpcAccountName pulumi.StringOutput `pulumi:"vpcAccountName"`
	// This parameter represents the ID of the VPC.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
}

// NewAviatrixAwsTgwVpcAttachment registers a new resource with the given unique name, arguments, and options.
func NewAviatrixAwsTgwVpcAttachment(ctx *pulumi.Context,
	name string, args *AviatrixAwsTgwVpcAttachmentArgs, opts ...pulumi.ResourceOption) (*AviatrixAwsTgwVpcAttachment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Region == nil {
		return nil, errors.New("invalid value for required argument 'Region'")
	}
	if args.TgwName == nil {
		return nil, errors.New("invalid value for required argument 'TgwName'")
	}
	if args.VpcAccountName == nil {
		return nil, errors.New("invalid value for required argument 'VpcAccountName'")
	}
	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource AviatrixAwsTgwVpcAttachment
	err := ctx.RegisterResource("aviatrix:index/aviatrixAwsTgwVpcAttachment:AviatrixAwsTgwVpcAttachment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAviatrixAwsTgwVpcAttachment gets an existing AviatrixAwsTgwVpcAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAviatrixAwsTgwVpcAttachment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AviatrixAwsTgwVpcAttachmentState, opts ...pulumi.ResourceOption) (*AviatrixAwsTgwVpcAttachment, error) {
	var resource AviatrixAwsTgwVpcAttachment
	err := ctx.ReadResource("aviatrix:index/aviatrixAwsTgwVpcAttachment:AviatrixAwsTgwVpcAttachment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AviatrixAwsTgwVpcAttachment resources.
type aviatrixAwsTgwVpcAttachmentState struct {
	// Advanced option. Customized route(s) to be advertised to other VPCs that are connected to the same TGW.
	CustomizedRouteAdvertisement *string `pulumi:"customizedRouteAdvertisement"`
	// Advanced option. Customized Spoke VPC Routes. It allows the admin to enter non-RFC1918 routes in the VPC route table
	// targeting the TGW.
	CustomizedRoutes *string `pulumi:"customizedRoutes"`
	// Advanced option. If set to true, it disables automatic route propagation of this VPC to other VPCs within the same
	// network domain.
	DisableLocalRoutePropagation *bool `pulumi:"disableLocalRoutePropagation"`
	// Edge attachment ID. To allow access to the private IP of the MGMT interface of the Firewalls, set this attribute to
	// enable Management Access From Onprem. This feature advertises the Firewalls private MGMT subnet to your Edge domain.
	EdgeAttachment *string `pulumi:"edgeAttachment"`
	// The name of the network domain.
	NetworkDomainName *string `pulumi:"networkDomainName"`
	// Region of cloud provider.
	Region *string `pulumi:"region"`
	// Advanced option. Route tables separated by ',' to participate in TGW Orchestrator, i.e., learned routes will be
	// propagated to these route tables.
	RouteTables *string `pulumi:"routeTables"`
	// The name of the security domain.
	//
	// Deprecated: Please use network_domain_name instead.
	SecurityDomainName *string `pulumi:"securityDomainName"`
	// Advanced option. VPC subnets separated by ',' to attach to the VPC. If left blank, Aviatrix Controller automatically
	// selects a subnet representing each AZ for the VPC attachment.
	Subnets *string `pulumi:"subnets"`
	// Name of the AWS TGW.
	TgwName *string `pulumi:"tgwName"`
	// This parameter represents the name of a Cloud-Account in Aviatrix controller.
	VpcAccountName *string `pulumi:"vpcAccountName"`
	// This parameter represents the ID of the VPC.
	VpcId *string `pulumi:"vpcId"`
}

type AviatrixAwsTgwVpcAttachmentState struct {
	// Advanced option. Customized route(s) to be advertised to other VPCs that are connected to the same TGW.
	CustomizedRouteAdvertisement pulumi.StringPtrInput
	// Advanced option. Customized Spoke VPC Routes. It allows the admin to enter non-RFC1918 routes in the VPC route table
	// targeting the TGW.
	CustomizedRoutes pulumi.StringPtrInput
	// Advanced option. If set to true, it disables automatic route propagation of this VPC to other VPCs within the same
	// network domain.
	DisableLocalRoutePropagation pulumi.BoolPtrInput
	// Edge attachment ID. To allow access to the private IP of the MGMT interface of the Firewalls, set this attribute to
	// enable Management Access From Onprem. This feature advertises the Firewalls private MGMT subnet to your Edge domain.
	EdgeAttachment pulumi.StringPtrInput
	// The name of the network domain.
	NetworkDomainName pulumi.StringPtrInput
	// Region of cloud provider.
	Region pulumi.StringPtrInput
	// Advanced option. Route tables separated by ',' to participate in TGW Orchestrator, i.e., learned routes will be
	// propagated to these route tables.
	RouteTables pulumi.StringPtrInput
	// The name of the security domain.
	//
	// Deprecated: Please use network_domain_name instead.
	SecurityDomainName pulumi.StringPtrInput
	// Advanced option. VPC subnets separated by ',' to attach to the VPC. If left blank, Aviatrix Controller automatically
	// selects a subnet representing each AZ for the VPC attachment.
	Subnets pulumi.StringPtrInput
	// Name of the AWS TGW.
	TgwName pulumi.StringPtrInput
	// This parameter represents the name of a Cloud-Account in Aviatrix controller.
	VpcAccountName pulumi.StringPtrInput
	// This parameter represents the ID of the VPC.
	VpcId pulumi.StringPtrInput
}

func (AviatrixAwsTgwVpcAttachmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*aviatrixAwsTgwVpcAttachmentState)(nil)).Elem()
}

type aviatrixAwsTgwVpcAttachmentArgs struct {
	// Advanced option. Customized route(s) to be advertised to other VPCs that are connected to the same TGW.
	CustomizedRouteAdvertisement *string `pulumi:"customizedRouteAdvertisement"`
	// Advanced option. Customized Spoke VPC Routes. It allows the admin to enter non-RFC1918 routes in the VPC route table
	// targeting the TGW.
	CustomizedRoutes *string `pulumi:"customizedRoutes"`
	// Advanced option. If set to true, it disables automatic route propagation of this VPC to other VPCs within the same
	// network domain.
	DisableLocalRoutePropagation *bool `pulumi:"disableLocalRoutePropagation"`
	// Edge attachment ID. To allow access to the private IP of the MGMT interface of the Firewalls, set this attribute to
	// enable Management Access From Onprem. This feature advertises the Firewalls private MGMT subnet to your Edge domain.
	EdgeAttachment *string `pulumi:"edgeAttachment"`
	// The name of the network domain.
	NetworkDomainName *string `pulumi:"networkDomainName"`
	// Region of cloud provider.
	Region string `pulumi:"region"`
	// Advanced option. Route tables separated by ',' to participate in TGW Orchestrator, i.e., learned routes will be
	// propagated to these route tables.
	RouteTables *string `pulumi:"routeTables"`
	// The name of the security domain.
	//
	// Deprecated: Please use network_domain_name instead.
	SecurityDomainName *string `pulumi:"securityDomainName"`
	// Advanced option. VPC subnets separated by ',' to attach to the VPC. If left blank, Aviatrix Controller automatically
	// selects a subnet representing each AZ for the VPC attachment.
	Subnets *string `pulumi:"subnets"`
	// Name of the AWS TGW.
	TgwName string `pulumi:"tgwName"`
	// This parameter represents the name of a Cloud-Account in Aviatrix controller.
	VpcAccountName string `pulumi:"vpcAccountName"`
	// This parameter represents the ID of the VPC.
	VpcId string `pulumi:"vpcId"`
}

// The set of arguments for constructing a AviatrixAwsTgwVpcAttachment resource.
type AviatrixAwsTgwVpcAttachmentArgs struct {
	// Advanced option. Customized route(s) to be advertised to other VPCs that are connected to the same TGW.
	CustomizedRouteAdvertisement pulumi.StringPtrInput
	// Advanced option. Customized Spoke VPC Routes. It allows the admin to enter non-RFC1918 routes in the VPC route table
	// targeting the TGW.
	CustomizedRoutes pulumi.StringPtrInput
	// Advanced option. If set to true, it disables automatic route propagation of this VPC to other VPCs within the same
	// network domain.
	DisableLocalRoutePropagation pulumi.BoolPtrInput
	// Edge attachment ID. To allow access to the private IP of the MGMT interface of the Firewalls, set this attribute to
	// enable Management Access From Onprem. This feature advertises the Firewalls private MGMT subnet to your Edge domain.
	EdgeAttachment pulumi.StringPtrInput
	// The name of the network domain.
	NetworkDomainName pulumi.StringPtrInput
	// Region of cloud provider.
	Region pulumi.StringInput
	// Advanced option. Route tables separated by ',' to participate in TGW Orchestrator, i.e., learned routes will be
	// propagated to these route tables.
	RouteTables pulumi.StringPtrInput
	// The name of the security domain.
	//
	// Deprecated: Please use network_domain_name instead.
	SecurityDomainName pulumi.StringPtrInput
	// Advanced option. VPC subnets separated by ',' to attach to the VPC. If left blank, Aviatrix Controller automatically
	// selects a subnet representing each AZ for the VPC attachment.
	Subnets pulumi.StringPtrInput
	// Name of the AWS TGW.
	TgwName pulumi.StringInput
	// This parameter represents the name of a Cloud-Account in Aviatrix controller.
	VpcAccountName pulumi.StringInput
	// This parameter represents the ID of the VPC.
	VpcId pulumi.StringInput
}

func (AviatrixAwsTgwVpcAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*aviatrixAwsTgwVpcAttachmentArgs)(nil)).Elem()
}

type AviatrixAwsTgwVpcAttachmentInput interface {
	pulumi.Input

	ToAviatrixAwsTgwVpcAttachmentOutput() AviatrixAwsTgwVpcAttachmentOutput
	ToAviatrixAwsTgwVpcAttachmentOutputWithContext(ctx context.Context) AviatrixAwsTgwVpcAttachmentOutput
}

func (*AviatrixAwsTgwVpcAttachment) ElementType() reflect.Type {
	return reflect.TypeOf((**AviatrixAwsTgwVpcAttachment)(nil)).Elem()
}

func (i *AviatrixAwsTgwVpcAttachment) ToAviatrixAwsTgwVpcAttachmentOutput() AviatrixAwsTgwVpcAttachmentOutput {
	return i.ToAviatrixAwsTgwVpcAttachmentOutputWithContext(context.Background())
}

func (i *AviatrixAwsTgwVpcAttachment) ToAviatrixAwsTgwVpcAttachmentOutputWithContext(ctx context.Context) AviatrixAwsTgwVpcAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixAwsTgwVpcAttachmentOutput)
}

// AviatrixAwsTgwVpcAttachmentArrayInput is an input type that accepts AviatrixAwsTgwVpcAttachmentArray and AviatrixAwsTgwVpcAttachmentArrayOutput values.
// You can construct a concrete instance of `AviatrixAwsTgwVpcAttachmentArrayInput` via:
//
//	AviatrixAwsTgwVpcAttachmentArray{ AviatrixAwsTgwVpcAttachmentArgs{...} }
type AviatrixAwsTgwVpcAttachmentArrayInput interface {
	pulumi.Input

	ToAviatrixAwsTgwVpcAttachmentArrayOutput() AviatrixAwsTgwVpcAttachmentArrayOutput
	ToAviatrixAwsTgwVpcAttachmentArrayOutputWithContext(context.Context) AviatrixAwsTgwVpcAttachmentArrayOutput
}

type AviatrixAwsTgwVpcAttachmentArray []AviatrixAwsTgwVpcAttachmentInput

func (AviatrixAwsTgwVpcAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AviatrixAwsTgwVpcAttachment)(nil)).Elem()
}

func (i AviatrixAwsTgwVpcAttachmentArray) ToAviatrixAwsTgwVpcAttachmentArrayOutput() AviatrixAwsTgwVpcAttachmentArrayOutput {
	return i.ToAviatrixAwsTgwVpcAttachmentArrayOutputWithContext(context.Background())
}

func (i AviatrixAwsTgwVpcAttachmentArray) ToAviatrixAwsTgwVpcAttachmentArrayOutputWithContext(ctx context.Context) AviatrixAwsTgwVpcAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixAwsTgwVpcAttachmentArrayOutput)
}

// AviatrixAwsTgwVpcAttachmentMapInput is an input type that accepts AviatrixAwsTgwVpcAttachmentMap and AviatrixAwsTgwVpcAttachmentMapOutput values.
// You can construct a concrete instance of `AviatrixAwsTgwVpcAttachmentMapInput` via:
//
//	AviatrixAwsTgwVpcAttachmentMap{ "key": AviatrixAwsTgwVpcAttachmentArgs{...} }
type AviatrixAwsTgwVpcAttachmentMapInput interface {
	pulumi.Input

	ToAviatrixAwsTgwVpcAttachmentMapOutput() AviatrixAwsTgwVpcAttachmentMapOutput
	ToAviatrixAwsTgwVpcAttachmentMapOutputWithContext(context.Context) AviatrixAwsTgwVpcAttachmentMapOutput
}

type AviatrixAwsTgwVpcAttachmentMap map[string]AviatrixAwsTgwVpcAttachmentInput

func (AviatrixAwsTgwVpcAttachmentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AviatrixAwsTgwVpcAttachment)(nil)).Elem()
}

func (i AviatrixAwsTgwVpcAttachmentMap) ToAviatrixAwsTgwVpcAttachmentMapOutput() AviatrixAwsTgwVpcAttachmentMapOutput {
	return i.ToAviatrixAwsTgwVpcAttachmentMapOutputWithContext(context.Background())
}

func (i AviatrixAwsTgwVpcAttachmentMap) ToAviatrixAwsTgwVpcAttachmentMapOutputWithContext(ctx context.Context) AviatrixAwsTgwVpcAttachmentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixAwsTgwVpcAttachmentMapOutput)
}

type AviatrixAwsTgwVpcAttachmentOutput struct{ *pulumi.OutputState }

func (AviatrixAwsTgwVpcAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AviatrixAwsTgwVpcAttachment)(nil)).Elem()
}

func (o AviatrixAwsTgwVpcAttachmentOutput) ToAviatrixAwsTgwVpcAttachmentOutput() AviatrixAwsTgwVpcAttachmentOutput {
	return o
}

func (o AviatrixAwsTgwVpcAttachmentOutput) ToAviatrixAwsTgwVpcAttachmentOutputWithContext(ctx context.Context) AviatrixAwsTgwVpcAttachmentOutput {
	return o
}

// Advanced option. Customized route(s) to be advertised to other VPCs that are connected to the same TGW.
func (o AviatrixAwsTgwVpcAttachmentOutput) CustomizedRouteAdvertisement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixAwsTgwVpcAttachment) pulumi.StringPtrOutput { return v.CustomizedRouteAdvertisement }).(pulumi.StringPtrOutput)
}

// Advanced option. Customized Spoke VPC Routes. It allows the admin to enter non-RFC1918 routes in the VPC route table
// targeting the TGW.
func (o AviatrixAwsTgwVpcAttachmentOutput) CustomizedRoutes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixAwsTgwVpcAttachment) pulumi.StringPtrOutput { return v.CustomizedRoutes }).(pulumi.StringPtrOutput)
}

// Advanced option. If set to true, it disables automatic route propagation of this VPC to other VPCs within the same
// network domain.
func (o AviatrixAwsTgwVpcAttachmentOutput) DisableLocalRoutePropagation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AviatrixAwsTgwVpcAttachment) pulumi.BoolPtrOutput { return v.DisableLocalRoutePropagation }).(pulumi.BoolPtrOutput)
}

// Edge attachment ID. To allow access to the private IP of the MGMT interface of the Firewalls, set this attribute to
// enable Management Access From Onprem. This feature advertises the Firewalls private MGMT subnet to your Edge domain.
func (o AviatrixAwsTgwVpcAttachmentOutput) EdgeAttachment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixAwsTgwVpcAttachment) pulumi.StringPtrOutput { return v.EdgeAttachment }).(pulumi.StringPtrOutput)
}

// The name of the network domain.
func (o AviatrixAwsTgwVpcAttachmentOutput) NetworkDomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixAwsTgwVpcAttachment) pulumi.StringPtrOutput { return v.NetworkDomainName }).(pulumi.StringPtrOutput)
}

// Region of cloud provider.
func (o AviatrixAwsTgwVpcAttachmentOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixAwsTgwVpcAttachment) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Advanced option. Route tables separated by ',' to participate in TGW Orchestrator, i.e., learned routes will be
// propagated to these route tables.
func (o AviatrixAwsTgwVpcAttachmentOutput) RouteTables() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixAwsTgwVpcAttachment) pulumi.StringOutput { return v.RouteTables }).(pulumi.StringOutput)
}

// The name of the security domain.
//
// Deprecated: Please use network_domain_name instead.
func (o AviatrixAwsTgwVpcAttachmentOutput) SecurityDomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixAwsTgwVpcAttachment) pulumi.StringPtrOutput { return v.SecurityDomainName }).(pulumi.StringPtrOutput)
}

// Advanced option. VPC subnets separated by ',' to attach to the VPC. If left blank, Aviatrix Controller automatically
// selects a subnet representing each AZ for the VPC attachment.
func (o AviatrixAwsTgwVpcAttachmentOutput) Subnets() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixAwsTgwVpcAttachment) pulumi.StringOutput { return v.Subnets }).(pulumi.StringOutput)
}

// Name of the AWS TGW.
func (o AviatrixAwsTgwVpcAttachmentOutput) TgwName() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixAwsTgwVpcAttachment) pulumi.StringOutput { return v.TgwName }).(pulumi.StringOutput)
}

// This parameter represents the name of a Cloud-Account in Aviatrix controller.
func (o AviatrixAwsTgwVpcAttachmentOutput) VpcAccountName() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixAwsTgwVpcAttachment) pulumi.StringOutput { return v.VpcAccountName }).(pulumi.StringOutput)
}

// This parameter represents the ID of the VPC.
func (o AviatrixAwsTgwVpcAttachmentOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixAwsTgwVpcAttachment) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

type AviatrixAwsTgwVpcAttachmentArrayOutput struct{ *pulumi.OutputState }

func (AviatrixAwsTgwVpcAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AviatrixAwsTgwVpcAttachment)(nil)).Elem()
}

func (o AviatrixAwsTgwVpcAttachmentArrayOutput) ToAviatrixAwsTgwVpcAttachmentArrayOutput() AviatrixAwsTgwVpcAttachmentArrayOutput {
	return o
}

func (o AviatrixAwsTgwVpcAttachmentArrayOutput) ToAviatrixAwsTgwVpcAttachmentArrayOutputWithContext(ctx context.Context) AviatrixAwsTgwVpcAttachmentArrayOutput {
	return o
}

func (o AviatrixAwsTgwVpcAttachmentArrayOutput) Index(i pulumi.IntInput) AviatrixAwsTgwVpcAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AviatrixAwsTgwVpcAttachment {
		return vs[0].([]*AviatrixAwsTgwVpcAttachment)[vs[1].(int)]
	}).(AviatrixAwsTgwVpcAttachmentOutput)
}

type AviatrixAwsTgwVpcAttachmentMapOutput struct{ *pulumi.OutputState }

func (AviatrixAwsTgwVpcAttachmentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AviatrixAwsTgwVpcAttachment)(nil)).Elem()
}

func (o AviatrixAwsTgwVpcAttachmentMapOutput) ToAviatrixAwsTgwVpcAttachmentMapOutput() AviatrixAwsTgwVpcAttachmentMapOutput {
	return o
}

func (o AviatrixAwsTgwVpcAttachmentMapOutput) ToAviatrixAwsTgwVpcAttachmentMapOutputWithContext(ctx context.Context) AviatrixAwsTgwVpcAttachmentMapOutput {
	return o
}

func (o AviatrixAwsTgwVpcAttachmentMapOutput) MapIndex(k pulumi.StringInput) AviatrixAwsTgwVpcAttachmentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AviatrixAwsTgwVpcAttachment {
		return vs[0].(map[string]*AviatrixAwsTgwVpcAttachment)[vs[1].(string)]
	}).(AviatrixAwsTgwVpcAttachmentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixAwsTgwVpcAttachmentInput)(nil)).Elem(), &AviatrixAwsTgwVpcAttachment{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixAwsTgwVpcAttachmentArrayInput)(nil)).Elem(), AviatrixAwsTgwVpcAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixAwsTgwVpcAttachmentMapInput)(nil)).Elem(), AviatrixAwsTgwVpcAttachmentMap{})
	pulumi.RegisterOutputType(AviatrixAwsTgwVpcAttachmentOutput{})
	pulumi.RegisterOutputType(AviatrixAwsTgwVpcAttachmentArrayOutput{})
	pulumi.RegisterOutputType(AviatrixAwsTgwVpcAttachmentMapOutput{})
}
