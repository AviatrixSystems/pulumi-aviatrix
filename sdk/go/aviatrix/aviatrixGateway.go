// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aviatrix

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Import
//
// **gateway** can be imported using the `gw_name`, e.g.
//
// ```sh
//
//	$ pulumi import aviatrix:index/aviatrixGateway:AviatrixGateway test gw_name
//
// ```
type AviatrixGateway struct {
	pulumi.CustomResourceState

	// Account name. This account will be used to launch Aviatrix gateway.
	AccountName pulumi.StringOutput `pulumi:"accountName"`
	// A list of destination CIDR ranges that will also go through the VPN tunnel when Split Tunnel Mode is enabled.
	AdditionalCidrs pulumi.StringPtrOutput `pulumi:"additionalCidrs"`
	// A list of CIDR ranges separated by comma to configure when "Designated Gateway" feature is enabled. Example: "10.8.0.0/16,10.9.0.0/16,10.10.0.0/16".
	AdditionalCidrsDesignatedGateway pulumi.StringPtrOutput `pulumi:"additionalCidrsDesignatedGateway"`
	// If set to false, use an available address in Elastic IP pool for this gateway. Otherwise, allocate a new Elastic IP and use it for this gateway. Available in Controller 2.7+. Valid values: true, false. Default: true.
	AllocateNewEip pulumi.BoolPtrOutput `pulumi:"allocateNewEip"`
	// Availability domain. Required and valid only for OCI. Available as of provider version R2.19.3.
	AvailabilityDomain pulumi.StringOutput `pulumi:"availabilityDomain"`
	// Name of public IP Address resource and its resource group in Azure to be assigned to the gateway instance. Example: "IP_Name:Resource_Group_Name". Required when `allocateNewEip` is false and `cloudType` is Azure, AzureGov or AzureChina. Available as of provider version 2.20+.
	AzureEipNameResourceGroup pulumi.StringOutput `pulumi:"azureEipNameResourceGroup"`
	// Cloud instance ID of the gateway.
	CloudInstanceId pulumi.StringOutput `pulumi:"cloudInstanceId"`
	// Cloud service provider to use to launch the gateway. Requires an integer value. Currently supports AWS(1), GCP(4), Azure(8), OCI(16), AzureGov(32), AWSGov(256), AWSChina(1024), AzureChina(2048), Alibaba Cloud (8192), AWS Top Secret (16384) and AWS Secret (32768).
	CloudType pulumi.IntOutput `pulumi:"cloudType"`
	// Customer-managed key ID.
	CustomerManagedKeys pulumi.StringPtrOutput `pulumi:"customerManagedKeys"`
	// API hostname for DUO auth mode. Required: Yes if `otpMode` is "2".
	DuoApiHostname pulumi.StringPtrOutput `pulumi:"duoApiHostname"`
	// Integration key for DUO auth mode. Required if `otpMode` is "2".
	DuoIntegrationKey pulumi.StringPtrOutput `pulumi:"duoIntegrationKey"`
	// Push mode for DUO auth. Required if `otpMode` is "2". Valid values: "auto", "selective" and "token".
	DuoPushMode pulumi.StringPtrOutput `pulumi:"duoPushMode"`
	// Secret key for DUO auth mode. Required if `otpMode` is "2".
	DuoSecretKey pulumi.StringPtrOutput `pulumi:"duoSecretKey"`
	// Specified EIP to use for gateway creation. Required when `allocateNewEip` is false.  Available in Controller version 3.5+. Only available for AWS, GCP, Azure, OCI, AzureGov, AWSGov, AWSChina, AzureChina, AWS Top Secret and AWS Secret.
	Eip pulumi.StringOutput `pulumi:"eip"`
	// ELB DNS name.
	ElbDnsName pulumi.StringOutput `pulumi:"elbDnsName"`
	// A name for the ELB that is created. If it is not specified, a name is generated automatically.
	ElbName pulumi.StringOutput `pulumi:"elbName"`
	// Enable Designated Gateway feature for Gateway. Only supported for AWS, AWSGov, AWSChina, AWS Top Secret and AWS Secret gateways. Valid values: true, false. Default value: false. Please view documentation [here](https://docs.aviatrix.com/HowTos/gateway.html#designated-gateway) for more information on this feature.
	EnableDesignatedGateway pulumi.BoolPtrOutput `pulumi:"enableDesignatedGateway"`
	// Specify whether to enable ELB or not. Not supported for OCI gateways. Valid values: true, false.
	EnableElb pulumi.BoolPtrOutput `pulumi:"enableElb"`
	// Enable EBS volume encryption for the gateway. Only supported for AWS, AWSGov, AWSChina, AWS Top Secret and AWS Secret gateways. Valid values: true, false. Default value: false.
	EnableEncryptVolume pulumi.BoolPtrOutput `pulumi:"enableEncryptVolume"`
	// Enable jumbo frames for this gateway. Default value is true.
	EnableJumboFrame pulumi.BoolPtrOutput `pulumi:"enableJumboFrame"`
	// Enable/disable LDAP. Valid values: true, false. Default value: false.
	EnableLdap pulumi.BoolPtrOutput `pulumi:"enableLdap"`
	// If set to true, the [Monitor Gateway Subnets](https://docs.aviatrix.com/HowTos/gateway.html#monitor-gateway-subnet) feature is enabled. Default value is false. Available in provider version R2.17.1+.
	EnableMonitorGatewaySubnets pulumi.BoolPtrOutput `pulumi:"enableMonitorGatewaySubnets"`
	// Create a [Public Subnet Filtering gateway](https://docs.aviatrix.com/HowTos/public_subnet_filtering_faq.html).
	EnablePublicSubnetFiltering pulumi.BoolPtrOutput `pulumi:"enablePublicSubnetFiltering"`
	// Enable spot instance. NOT supported for production deployment.
	EnableSpotInstance pulumi.BoolPtrOutput `pulumi:"enableSpotInstance"`
	// Enable VPC DNS Server for gateway. Currently only supported for AWS, Azure, AzureGov, AWSGov, AWSChina, AzureChina, Alibaba Cloud, AWS Top Secret and AWS Secret gateways. Valid values: true, false. Default value: false.
	EnableVpcDnsServer pulumi.BoolPtrOutput `pulumi:"enableVpcDnsServer"`
	// Enable/disable VPN NAT. Only supported for VPN gateway. Valid values: true, false. Default value: true.
	EnableVpnNat pulumi.BoolPtrOutput `pulumi:"enableVpnNat"`
	// Fault domain. Required and valid only for OCI. Available as of provider version R2.19.3.
	FaultDomain pulumi.StringOutput `pulumi:"faultDomain"`
	// If `fqdnLanCidr` is set, the FQDN gateway will be created with an additional LAN interface using the provided CIDR. This attribute is required when enabling FQDN gateway FireNet in Azure or GCP. Available in provider version R2.17.1+.
	FqdnLanCidr pulumi.StringPtrOutput `pulumi:"fqdnLanCidr"`
	// The lan interface id of the of FQDN gateway with additional LAN interface. This attribute will be exported when enabling FQDN gateway firenet in Azure. Available in provider version R2.17.1+.
	FqdnLanInterface pulumi.StringOutput `pulumi:"fqdnLanInterface"`
	// FQDN LAN VPC ID. This attribute is required when enabling FQDN gateway FireNet in GCP. Available as of provider version R2.18.1+.
	FqdnLanVpcId pulumi.StringPtrOutput `pulumi:"fqdnLanVpcId"`
	// Name of the Aviatrix gateway to be created.
	GwName pulumi.StringOutput `pulumi:"gwName"`
	// Size of the gateway instance. Example: AWS/AWSGov/AWSChina: "t2.large", GCP: "n1-standard-1", Azure/AzureGov/AzureChina: "Standard_B1s", OCI: "VM.Standard2.2".
	GwSize pulumi.StringOutput `pulumi:"gwSize"`
	// It sets the value (seconds) of the [idle timeout](https://docs.aviatrix.com/HowTos/openvpn_faq.html#how-do-i-fix-the-aviatrix-vpn-timing-out-too-quickly). This idle timeout feature is enable only if this attribute is set, otherwise it is disabled. The entered value must be an integer number greater than 300.  Available in provider version R2.17.1+.
	IdleTimeout pulumi.IntPtrOutput `pulumi:"idleTimeout"`
	// The image version of the gateway. Use `getAviatrixGatewayImage` data source to programmatically retrieve this value for the desired `softwareVersion`. If set, we will attempt to update the gateway to the specified version if current version is different. If left blank, the gateway upgrades can be managed with the `AviatrixControllerConfig` resource. Type: String. Example: "hvm-cloudx-aws-022021". Available as of provider version R2.20.0.
	ImageVersion pulumi.StringOutput `pulumi:"imageVersion"`
	// Enable [Insane Mode](https://docs.aviatrix.com/HowTos/insane_mode.html) for Gateway. Insane Mode gateway size must be at least c5 series (AWS) or Standard_D3_v2 (Azure/AzureGov). If enabled, a valid /26 CIDR segment of the VPC must be specified to create a new subnet. Only supported for AWS, AWSGov, Azure, AzureGov, AWS China, Azure China, AWS Top Secret or AWS Secret.  Valid values: true, false.
	InsaneMode pulumi.BoolPtrOutput `pulumi:"insaneMode"`
	// Region + Availability Zone of subnet being created for Insane Mode gateway. Required for AWS, AWSGov, AWS China, AWS Top Secret or AWS Secret if `insaneMode` is set. Example: AWS: "us-west-1a".
	InsaneModeAz pulumi.StringPtrOutput `pulumi:"insaneModeAz"`
	// LDAP base DN. Required if `enableLdap` is true.
	LdapBaseDn pulumi.StringPtrOutput `pulumi:"ldapBaseDn"`
	// LDAP bind DN. Required if `enableLdap` is true.
	LdapBindDn pulumi.StringPtrOutput `pulumi:"ldapBindDn"`
	// LDAP password. Required if `enableLdap` is true.
	LdapPassword pulumi.StringPtrOutput `pulumi:"ldapPassword"`
	// LDAP server address. Required if `enableLdap` is true.
	LdapServer pulumi.StringPtrOutput `pulumi:"ldapServer"`
	// LDAP user attribute. Required if `enableLdap` is true.
	LdapUsernameAttribute pulumi.StringPtrOutput `pulumi:"ldapUsernameAttribute"`
	// Maximum number of active VPN users allowed to be connected to this gateway. Required if `vpnAccess` is true. Make sure the number is smaller than the VPN CIDR block. Example: 100. **NOTE: Please see notes here in regards to any deltas found in your state with the addition of this argument in R1.14.**
	MaxVpnConn pulumi.StringPtrOutput `pulumi:"maxVpnConn"`
	// Set of monitored instance ids. Only valid when 'enable_monitor_gateway_subnets' = true. Available in provider version R2.17.1+.
	MonitorExcludeLists pulumi.StringArrayOutput `pulumi:"monitorExcludeLists"`
	// A list of DNS servers used to resolve domain names by a connected VPN user when Split Tunnel Mode is enabled.
	NameServers pulumi.StringPtrOutput `pulumi:"nameServers"`
	// Token for Okta auth mode. Required if `otpMode` is "3".
	OktaToken pulumi.StringPtrOutput `pulumi:"oktaToken"`
	// URL for Okta auth mode. Required if `otpMode` is "3".
	OktaUrl pulumi.StringPtrOutput `pulumi:"oktaUrl"`
	// Username suffix for Okta auth mode. Example: "aviatrix.com".
	OktaUsernameSuffix pulumi.StringPtrOutput `pulumi:"oktaUsernameSuffix"`
	// Two step authentication mode. Valid values: "2" for DUO, "3" for Okta.
	OtpMode pulumi.StringPtrOutput `pulumi:"otpMode"`
	// Peering HA gateway availability domain. Required and valid only for OCI. Available as of provider version R2.19.3.
	PeeringHaAvailabilityDomain pulumi.StringOutput `pulumi:"peeringHaAvailabilityDomain"`
	// Name of public IP address resource and its resource group in Azure to be assigned to the HA peering instance. Example: "IP_Name:Resource_Group_Name". Required if `peeringHaEip` is set and `cloudType` is Azure, AzureGov or AzureChina. Available as of provider version 2.20+.
	PeeringHaAzureEipNameResourceGroup pulumi.StringOutput `pulumi:"peeringHaAzureEipNameResourceGroup"`
	// Cloud instance ID of the HA gateway.
	PeeringHaCloudInstanceId pulumi.StringOutput `pulumi:"peeringHaCloudInstanceId"`
	// Public IP address to be assigned to the HA peering instance. Only available for AWS, GCP, Azure, OCI, AzureGov, AWSGov, AWSChina, AzureChina, AWS Top Secret and AWS Secret.
	PeeringHaEip pulumi.StringOutput `pulumi:"peeringHaEip"`
	// Peering HA gateway fault domain. Required and valid only for OCI. Available as of provider version R2.19.3.
	PeeringHaFaultDomain pulumi.StringOutput `pulumi:"peeringHaFaultDomain"`
	// Aviatrix gateway unique name of HA gateway.
	PeeringHaGwName pulumi.StringOutput `pulumi:"peeringHaGwName"`
	// Size of the Peering HA Gateway to be created. Required if enabling Peering HA. **NOTE: Please see notes here in regards to any deltas found in your state with the addition of this argument in R1.8.**
	PeeringHaGwSize pulumi.StringPtrOutput `pulumi:"peeringHaGwSize"`
	// The image version of the HA gateway. Use `getAviatrixGatewayImage` data source to programmatically retrieve this value for the desired `haSoftwareVersion`. If set, we will attempt to update the HA gateway to the specified version if current version is different. If left blank, the gateway upgrades can be managed with the `AviatrixControllerConfig` resource. Type: String. Example: "hvm-cloudx-aws-022021". Available as of provider version R2.20.0.
	PeeringHaImageVersion pulumi.StringOutput `pulumi:"peeringHaImageVersion"`
	// Region + Availability Zone of subnet being created for Insane Mode-enabled Peering HA Gateway. Required for AWS only if `insaneMode` is set and `peeringHaSubnet` is set. Example: AWS: "us-west-1a".
	PeeringHaInsaneModeAz pulumi.StringPtrOutput `pulumi:"peeringHaInsaneModeAz"`
	// Private IP address of HA gateway.
	PeeringHaPrivateIp pulumi.StringOutput `pulumi:"peeringHaPrivateIp"`
	// HA security group used for the gateway.
	PeeringHaSecurityGroupId pulumi.StringOutput `pulumi:"peeringHaSecurityGroupId"`
	// The software version of the HA gateway. If set, we will attempt to update the HA gateway to the specified version if current version is different. If left blank, the HA gateway upgrade can be managed with the `AviatrixControllerConfig` resource. Type: String. Example: "6.5.821". Available as of provider version R2.20.0.
	PeeringHaSoftwareVersion pulumi.StringOutput `pulumi:"peeringHaSoftwareVersion"`
	// Public subnet CIDR to create Peering HA Gateway in. Required if enabling Peering HA for AWS/AWSGov/AWS Top Secret/AWS Secret/Azure/AzureGov/Alibaba Cloud. Optional if enabling Peering HA for GCP. Example: AWS: "10.0.0.0/16".
	PeeringHaSubnet pulumi.StringPtrOutput `pulumi:"peeringHaSubnet"`
	// Zone to create Peering HA Gateway in. Required if enabling Peering HA for GCP. Example: GCP: "us-west1-c". Optional for Azure. Valid values for Azure gateways are in the form "az-n". Example: "az-2". Available for Azure as of provider version R2.17+.
	PeeringHaZone pulumi.StringPtrOutput `pulumi:"peeringHaZone"`
	// Private IP address of the gateway created.
	PrivateIp pulumi.StringOutput `pulumi:"privateIp"`
	// DNS server used by the gateway. Default is "8.8.8.8", can be overridden with the VPC's setting.
	PublicDnsServer pulumi.StringOutput `pulumi:"publicDnsServer"`
	// Whether to enforce Guard Duty IP blocking.  Only valid when `enablePublicSubnetFiltering` attribute is true. Valid values: true or false. Default value: true. Available as of provider version R2.18+.
	PublicSubnetFilteringGuardDutyEnforced pulumi.BoolPtrOutput `pulumi:"publicSubnetFilteringGuardDutyEnforced"`
	// Route tables whose associated public subnets are protected for the HA PSF gateway. Required when `enablePublicSubnetFiltering` and `peeringHaSubnet` are set. Available as of provider version R2.18+.
	PublicSubnetFilteringHaRouteTables pulumi.StringArrayOutput `pulumi:"publicSubnetFilteringHaRouteTables"`
	// Route tables whose associated public subnets are protected. Only valid when `enablePublicSubnetFiltering` attribute is true. Available as of provider version R2.18+.
	PublicSubnetFilteringRouteTables pulumi.StringArrayOutput `pulumi:"publicSubnetFilteringRouteTables"`
	// It sets the value (seconds) of the [renegotiation interval](https://docs.aviatrix.com/HowTos/openvpn_faq.html#how-do-i-fix-the-aviatrix-vpn-timing-out-too-quickly). This renegotiation interval feature is enable only if this attribute is set, otherwise it is disabled. The entered value must be an integer number greater than 300. Available in provider version R2.17.1+.
	RenegotiationInterval pulumi.IntPtrOutput `pulumi:"renegotiationInterval"`
	// Gateway ethernet interface RX queue size. Once set, can't be deleted or disabled. Available for AWS as of provider version R2.22+.
	RxQueueSize pulumi.StringPtrOutput `pulumi:"rxQueueSize"`
	// Enable/disable SAML. This field is available in Controller version 3.3 or later release. Valid values: true, false. Default value: false.
	SamlEnabled pulumi.BoolPtrOutput `pulumi:"samlEnabled"`
	// A list of domain names that will use the NameServer when a specific name is not in the destination when Split Tunnel Mode is enabled.
	SearchDomains pulumi.StringPtrOutput `pulumi:"searchDomains"`
	// Security group used for the gateway.
	SecurityGroupId pulumi.StringOutput `pulumi:"securityGroupId"`
	// If enabled, Controller monitors the health of the gateway and restarts the gateway if it becomes unreachable. Valid values: true, false. Default value: false.
	SingleAzHa pulumi.BoolPtrOutput `pulumi:"singleAzHa"`
	// Enable Source NAT in "single ip" mode for this gateway. Valid values: true, false. Default value: false. **NOTE: If using SNAT for FQDN use-case, please see notes here.**
	SingleIpSnat pulumi.BoolPtrOutput `pulumi:"singleIpSnat"`
	// The software version of the gateway. If set, we will attempt to update the gateway to the specified version if current version is different. If left blank, the gateway upgrade can be managed with the `AviatrixControllerConfig` resource. Type: String. Example: "6.5.821". Available as of provider version R2.20.0.
	SoftwareVersion pulumi.StringOutput `pulumi:"softwareVersion"`
	// Enable/disable Split Tunnel Mode. Valid values: true, false. Default value: true. Please see [here](https://docs.aviatrix.com/HowTos/gateway.html#split-tunnel-mode) for more information on split tunnel.
	SplitTunnel pulumi.BoolPtrOutput `pulumi:"splitTunnel"`
	// Price for spot instance. NOT supported for production deployment.
	SpotPrice pulumi.StringPtrOutput `pulumi:"spotPrice"`
	// A VPC network address range selected from one of the available network ranges. Example: "172.31.0.0/20". **NOTE: If using `insaneMode`, please see notes here.**
	Subnet pulumi.StringOutput `pulumi:"subnet"`
	// (Optional) Tag list of the gateway instance. Only available for AWS, AWSGov, AWSChina, Azure, AzureGov and AzureChina gateways. Example: ["key1:value1", "key2:value2"].
	// * `storageName` (Optional) Specify a storage account. Required if `cloudType` is 2048 (AzureChina). Removed in Provider version 2.21.0+.
	//
	// Deprecated: Use tags instead.
	TagLists pulumi.StringArrayOutput `pulumi:"tagLists"`
	// Map of tags to assign to the gateway. Only available for AWS, AWSGov, AWSChina, Azure, AzureGov, AzureChina, AWS Top Secret and AWS Secret gateways. Allowed characters vary by cloud type but always include: letters, spaces, and numbers. AWS, AWSGov, AWSChina, AWS Top Secret and AWS Secret allow the use of any character.  Azure, AzureGov and AzureChina allows the following special characters: + - = . _ : @. Example: {"key1" = "value1", "key2" = "value2"}.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The IPSec tunnel down detection time for the Gateway.
	TunnelDetectionTime pulumi.IntOutput `pulumi:"tunnelDetectionTime"`
	// VPC ID/VNet name of cloud provider. Example: AWS/AWSGov/AWSChina: "vpc-abcd1234", GCP: "vpc-gcp-test~-~project-id", Azure/AzureGov/AzureChina: "vnet_name:rg_name:resource_guid", OCI: "ocid1.vcn.oc1.iad.aaaaaaaaba3pv6wkcr4jqae5f44n2b2m2yt2j6rx32uzr4h25vqstifsfdsq".
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
	// VPC region the gateway will be created in. Example: AWS: "us-east-1", GCP: "us-west2-a", Azure: "East US 2", OCI: "us-ashburn-1", AzureGov: "USGov Arizona", AWSGov: "us-gov-west-1", AWSChina: "cn-north-1", AzureChina: "China North", AWS Top Secret: "us-iso-east-1", AWS Secret: "us-isob-east-1".
	VpcReg pulumi.StringOutput `pulumi:"vpcReg"`
	// Enable [user access through VPN](https://docs.aviatrix.com/HowTos/gateway.html#vpn-access) to this gateway. Valid values: true, false.
	VpnAccess pulumi.BoolPtrOutput `pulumi:"vpnAccess"`
	// VPN CIDR block for the gateway. Required if `vpnAccess` is true. Example: "192.168.43.0/24".
	VpnCidr pulumi.StringPtrOutput `pulumi:"vpnCidr"`
	// Transport mode for VPN connection. All `cloudTypes` support TCP with ELB, and UDP without ELB. AWS(1) additionally supports UDP with ELB. Valid values: "TCP", "UDP". If not specified, "TCP" will be used.
	VpnProtocol pulumi.StringOutput `pulumi:"vpnProtocol"`
	// Availability Zone. Only available for Azure and Public Subnet Filtering gateway. Available for Azure as of provider version R2.17+.
	Zone pulumi.StringPtrOutput `pulumi:"zone"`
}

// NewAviatrixGateway registers a new resource with the given unique name, arguments, and options.
func NewAviatrixGateway(ctx *pulumi.Context,
	name string, args *AviatrixGatewayArgs, opts ...pulumi.ResourceOption) (*AviatrixGateway, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountName == nil {
		return nil, errors.New("invalid value for required argument 'AccountName'")
	}
	if args.CloudType == nil {
		return nil, errors.New("invalid value for required argument 'CloudType'")
	}
	if args.GwName == nil {
		return nil, errors.New("invalid value for required argument 'GwName'")
	}
	if args.GwSize == nil {
		return nil, errors.New("invalid value for required argument 'GwSize'")
	}
	if args.Subnet == nil {
		return nil, errors.New("invalid value for required argument 'Subnet'")
	}
	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	if args.VpcReg == nil {
		return nil, errors.New("invalid value for required argument 'VpcReg'")
	}
	if args.CustomerManagedKeys != nil {
		args.CustomerManagedKeys = pulumi.ToSecret(args.CustomerManagedKeys).(pulumi.StringPtrOutput)
	}
	if args.DuoSecretKey != nil {
		args.DuoSecretKey = pulumi.ToSecret(args.DuoSecretKey).(pulumi.StringPtrOutput)
	}
	if args.LdapPassword != nil {
		args.LdapPassword = pulumi.ToSecret(args.LdapPassword).(pulumi.StringPtrOutput)
	}
	if args.OktaToken != nil {
		args.OktaToken = pulumi.ToSecret(args.OktaToken).(pulumi.StringPtrOutput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"customerManagedKeys",
		"duoSecretKey",
		"ldapPassword",
		"oktaToken",
	})
	opts = append(opts, secrets)
	opts = pkgResourceDefaultOpts(opts)
	var resource AviatrixGateway
	err := ctx.RegisterResource("aviatrix:index/aviatrixGateway:AviatrixGateway", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAviatrixGateway gets an existing AviatrixGateway resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAviatrixGateway(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AviatrixGatewayState, opts ...pulumi.ResourceOption) (*AviatrixGateway, error) {
	var resource AviatrixGateway
	err := ctx.ReadResource("aviatrix:index/aviatrixGateway:AviatrixGateway", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AviatrixGateway resources.
type aviatrixGatewayState struct {
	// Account name. This account will be used to launch Aviatrix gateway.
	AccountName *string `pulumi:"accountName"`
	// A list of destination CIDR ranges that will also go through the VPN tunnel when Split Tunnel Mode is enabled.
	AdditionalCidrs *string `pulumi:"additionalCidrs"`
	// A list of CIDR ranges separated by comma to configure when "Designated Gateway" feature is enabled. Example: "10.8.0.0/16,10.9.0.0/16,10.10.0.0/16".
	AdditionalCidrsDesignatedGateway *string `pulumi:"additionalCidrsDesignatedGateway"`
	// If set to false, use an available address in Elastic IP pool for this gateway. Otherwise, allocate a new Elastic IP and use it for this gateway. Available in Controller 2.7+. Valid values: true, false. Default: true.
	AllocateNewEip *bool `pulumi:"allocateNewEip"`
	// Availability domain. Required and valid only for OCI. Available as of provider version R2.19.3.
	AvailabilityDomain *string `pulumi:"availabilityDomain"`
	// Name of public IP Address resource and its resource group in Azure to be assigned to the gateway instance. Example: "IP_Name:Resource_Group_Name". Required when `allocateNewEip` is false and `cloudType` is Azure, AzureGov or AzureChina. Available as of provider version 2.20+.
	AzureEipNameResourceGroup *string `pulumi:"azureEipNameResourceGroup"`
	// Cloud instance ID of the gateway.
	CloudInstanceId *string `pulumi:"cloudInstanceId"`
	// Cloud service provider to use to launch the gateway. Requires an integer value. Currently supports AWS(1), GCP(4), Azure(8), OCI(16), AzureGov(32), AWSGov(256), AWSChina(1024), AzureChina(2048), Alibaba Cloud (8192), AWS Top Secret (16384) and AWS Secret (32768).
	CloudType *int `pulumi:"cloudType"`
	// Customer-managed key ID.
	CustomerManagedKeys *string `pulumi:"customerManagedKeys"`
	// API hostname for DUO auth mode. Required: Yes if `otpMode` is "2".
	DuoApiHostname *string `pulumi:"duoApiHostname"`
	// Integration key for DUO auth mode. Required if `otpMode` is "2".
	DuoIntegrationKey *string `pulumi:"duoIntegrationKey"`
	// Push mode for DUO auth. Required if `otpMode` is "2". Valid values: "auto", "selective" and "token".
	DuoPushMode *string `pulumi:"duoPushMode"`
	// Secret key for DUO auth mode. Required if `otpMode` is "2".
	DuoSecretKey *string `pulumi:"duoSecretKey"`
	// Specified EIP to use for gateway creation. Required when `allocateNewEip` is false.  Available in Controller version 3.5+. Only available for AWS, GCP, Azure, OCI, AzureGov, AWSGov, AWSChina, AzureChina, AWS Top Secret and AWS Secret.
	Eip *string `pulumi:"eip"`
	// ELB DNS name.
	ElbDnsName *string `pulumi:"elbDnsName"`
	// A name for the ELB that is created. If it is not specified, a name is generated automatically.
	ElbName *string `pulumi:"elbName"`
	// Enable Designated Gateway feature for Gateway. Only supported for AWS, AWSGov, AWSChina, AWS Top Secret and AWS Secret gateways. Valid values: true, false. Default value: false. Please view documentation [here](https://docs.aviatrix.com/HowTos/gateway.html#designated-gateway) for more information on this feature.
	EnableDesignatedGateway *bool `pulumi:"enableDesignatedGateway"`
	// Specify whether to enable ELB or not. Not supported for OCI gateways. Valid values: true, false.
	EnableElb *bool `pulumi:"enableElb"`
	// Enable EBS volume encryption for the gateway. Only supported for AWS, AWSGov, AWSChina, AWS Top Secret and AWS Secret gateways. Valid values: true, false. Default value: false.
	EnableEncryptVolume *bool `pulumi:"enableEncryptVolume"`
	// Enable jumbo frames for this gateway. Default value is true.
	EnableJumboFrame *bool `pulumi:"enableJumboFrame"`
	// Enable/disable LDAP. Valid values: true, false. Default value: false.
	EnableLdap *bool `pulumi:"enableLdap"`
	// If set to true, the [Monitor Gateway Subnets](https://docs.aviatrix.com/HowTos/gateway.html#monitor-gateway-subnet) feature is enabled. Default value is false. Available in provider version R2.17.1+.
	EnableMonitorGatewaySubnets *bool `pulumi:"enableMonitorGatewaySubnets"`
	// Create a [Public Subnet Filtering gateway](https://docs.aviatrix.com/HowTos/public_subnet_filtering_faq.html).
	EnablePublicSubnetFiltering *bool `pulumi:"enablePublicSubnetFiltering"`
	// Enable spot instance. NOT supported for production deployment.
	EnableSpotInstance *bool `pulumi:"enableSpotInstance"`
	// Enable VPC DNS Server for gateway. Currently only supported for AWS, Azure, AzureGov, AWSGov, AWSChina, AzureChina, Alibaba Cloud, AWS Top Secret and AWS Secret gateways. Valid values: true, false. Default value: false.
	EnableVpcDnsServer *bool `pulumi:"enableVpcDnsServer"`
	// Enable/disable VPN NAT. Only supported for VPN gateway. Valid values: true, false. Default value: true.
	EnableVpnNat *bool `pulumi:"enableVpnNat"`
	// Fault domain. Required and valid only for OCI. Available as of provider version R2.19.3.
	FaultDomain *string `pulumi:"faultDomain"`
	// If `fqdnLanCidr` is set, the FQDN gateway will be created with an additional LAN interface using the provided CIDR. This attribute is required when enabling FQDN gateway FireNet in Azure or GCP. Available in provider version R2.17.1+.
	FqdnLanCidr *string `pulumi:"fqdnLanCidr"`
	// The lan interface id of the of FQDN gateway with additional LAN interface. This attribute will be exported when enabling FQDN gateway firenet in Azure. Available in provider version R2.17.1+.
	FqdnLanInterface *string `pulumi:"fqdnLanInterface"`
	// FQDN LAN VPC ID. This attribute is required when enabling FQDN gateway FireNet in GCP. Available as of provider version R2.18.1+.
	FqdnLanVpcId *string `pulumi:"fqdnLanVpcId"`
	// Name of the Aviatrix gateway to be created.
	GwName *string `pulumi:"gwName"`
	// Size of the gateway instance. Example: AWS/AWSGov/AWSChina: "t2.large", GCP: "n1-standard-1", Azure/AzureGov/AzureChina: "Standard_B1s", OCI: "VM.Standard2.2".
	GwSize *string `pulumi:"gwSize"`
	// It sets the value (seconds) of the [idle timeout](https://docs.aviatrix.com/HowTos/openvpn_faq.html#how-do-i-fix-the-aviatrix-vpn-timing-out-too-quickly). This idle timeout feature is enable only if this attribute is set, otherwise it is disabled. The entered value must be an integer number greater than 300.  Available in provider version R2.17.1+.
	IdleTimeout *int `pulumi:"idleTimeout"`
	// The image version of the gateway. Use `getAviatrixGatewayImage` data source to programmatically retrieve this value for the desired `softwareVersion`. If set, we will attempt to update the gateway to the specified version if current version is different. If left blank, the gateway upgrades can be managed with the `AviatrixControllerConfig` resource. Type: String. Example: "hvm-cloudx-aws-022021". Available as of provider version R2.20.0.
	ImageVersion *string `pulumi:"imageVersion"`
	// Enable [Insane Mode](https://docs.aviatrix.com/HowTos/insane_mode.html) for Gateway. Insane Mode gateway size must be at least c5 series (AWS) or Standard_D3_v2 (Azure/AzureGov). If enabled, a valid /26 CIDR segment of the VPC must be specified to create a new subnet. Only supported for AWS, AWSGov, Azure, AzureGov, AWS China, Azure China, AWS Top Secret or AWS Secret.  Valid values: true, false.
	InsaneMode *bool `pulumi:"insaneMode"`
	// Region + Availability Zone of subnet being created for Insane Mode gateway. Required for AWS, AWSGov, AWS China, AWS Top Secret or AWS Secret if `insaneMode` is set. Example: AWS: "us-west-1a".
	InsaneModeAz *string `pulumi:"insaneModeAz"`
	// LDAP base DN. Required if `enableLdap` is true.
	LdapBaseDn *string `pulumi:"ldapBaseDn"`
	// LDAP bind DN. Required if `enableLdap` is true.
	LdapBindDn *string `pulumi:"ldapBindDn"`
	// LDAP password. Required if `enableLdap` is true.
	LdapPassword *string `pulumi:"ldapPassword"`
	// LDAP server address. Required if `enableLdap` is true.
	LdapServer *string `pulumi:"ldapServer"`
	// LDAP user attribute. Required if `enableLdap` is true.
	LdapUsernameAttribute *string `pulumi:"ldapUsernameAttribute"`
	// Maximum number of active VPN users allowed to be connected to this gateway. Required if `vpnAccess` is true. Make sure the number is smaller than the VPN CIDR block. Example: 100. **NOTE: Please see notes here in regards to any deltas found in your state with the addition of this argument in R1.14.**
	MaxVpnConn *string `pulumi:"maxVpnConn"`
	// Set of monitored instance ids. Only valid when 'enable_monitor_gateway_subnets' = true. Available in provider version R2.17.1+.
	MonitorExcludeLists []string `pulumi:"monitorExcludeLists"`
	// A list of DNS servers used to resolve domain names by a connected VPN user when Split Tunnel Mode is enabled.
	NameServers *string `pulumi:"nameServers"`
	// Token for Okta auth mode. Required if `otpMode` is "3".
	OktaToken *string `pulumi:"oktaToken"`
	// URL for Okta auth mode. Required if `otpMode` is "3".
	OktaUrl *string `pulumi:"oktaUrl"`
	// Username suffix for Okta auth mode. Example: "aviatrix.com".
	OktaUsernameSuffix *string `pulumi:"oktaUsernameSuffix"`
	// Two step authentication mode. Valid values: "2" for DUO, "3" for Okta.
	OtpMode *string `pulumi:"otpMode"`
	// Peering HA gateway availability domain. Required and valid only for OCI. Available as of provider version R2.19.3.
	PeeringHaAvailabilityDomain *string `pulumi:"peeringHaAvailabilityDomain"`
	// Name of public IP address resource and its resource group in Azure to be assigned to the HA peering instance. Example: "IP_Name:Resource_Group_Name". Required if `peeringHaEip` is set and `cloudType` is Azure, AzureGov or AzureChina. Available as of provider version 2.20+.
	PeeringHaAzureEipNameResourceGroup *string `pulumi:"peeringHaAzureEipNameResourceGroup"`
	// Cloud instance ID of the HA gateway.
	PeeringHaCloudInstanceId *string `pulumi:"peeringHaCloudInstanceId"`
	// Public IP address to be assigned to the HA peering instance. Only available for AWS, GCP, Azure, OCI, AzureGov, AWSGov, AWSChina, AzureChina, AWS Top Secret and AWS Secret.
	PeeringHaEip *string `pulumi:"peeringHaEip"`
	// Peering HA gateway fault domain. Required and valid only for OCI. Available as of provider version R2.19.3.
	PeeringHaFaultDomain *string `pulumi:"peeringHaFaultDomain"`
	// Aviatrix gateway unique name of HA gateway.
	PeeringHaGwName *string `pulumi:"peeringHaGwName"`
	// Size of the Peering HA Gateway to be created. Required if enabling Peering HA. **NOTE: Please see notes here in regards to any deltas found in your state with the addition of this argument in R1.8.**
	PeeringHaGwSize *string `pulumi:"peeringHaGwSize"`
	// The image version of the HA gateway. Use `getAviatrixGatewayImage` data source to programmatically retrieve this value for the desired `haSoftwareVersion`. If set, we will attempt to update the HA gateway to the specified version if current version is different. If left blank, the gateway upgrades can be managed with the `AviatrixControllerConfig` resource. Type: String. Example: "hvm-cloudx-aws-022021". Available as of provider version R2.20.0.
	PeeringHaImageVersion *string `pulumi:"peeringHaImageVersion"`
	// Region + Availability Zone of subnet being created for Insane Mode-enabled Peering HA Gateway. Required for AWS only if `insaneMode` is set and `peeringHaSubnet` is set. Example: AWS: "us-west-1a".
	PeeringHaInsaneModeAz *string `pulumi:"peeringHaInsaneModeAz"`
	// Private IP address of HA gateway.
	PeeringHaPrivateIp *string `pulumi:"peeringHaPrivateIp"`
	// HA security group used for the gateway.
	PeeringHaSecurityGroupId *string `pulumi:"peeringHaSecurityGroupId"`
	// The software version of the HA gateway. If set, we will attempt to update the HA gateway to the specified version if current version is different. If left blank, the HA gateway upgrade can be managed with the `AviatrixControllerConfig` resource. Type: String. Example: "6.5.821". Available as of provider version R2.20.0.
	PeeringHaSoftwareVersion *string `pulumi:"peeringHaSoftwareVersion"`
	// Public subnet CIDR to create Peering HA Gateway in. Required if enabling Peering HA for AWS/AWSGov/AWS Top Secret/AWS Secret/Azure/AzureGov/Alibaba Cloud. Optional if enabling Peering HA for GCP. Example: AWS: "10.0.0.0/16".
	PeeringHaSubnet *string `pulumi:"peeringHaSubnet"`
	// Zone to create Peering HA Gateway in. Required if enabling Peering HA for GCP. Example: GCP: "us-west1-c". Optional for Azure. Valid values for Azure gateways are in the form "az-n". Example: "az-2". Available for Azure as of provider version R2.17+.
	PeeringHaZone *string `pulumi:"peeringHaZone"`
	// Private IP address of the gateway created.
	PrivateIp *string `pulumi:"privateIp"`
	// DNS server used by the gateway. Default is "8.8.8.8", can be overridden with the VPC's setting.
	PublicDnsServer *string `pulumi:"publicDnsServer"`
	// Whether to enforce Guard Duty IP blocking.  Only valid when `enablePublicSubnetFiltering` attribute is true. Valid values: true or false. Default value: true. Available as of provider version R2.18+.
	PublicSubnetFilteringGuardDutyEnforced *bool `pulumi:"publicSubnetFilteringGuardDutyEnforced"`
	// Route tables whose associated public subnets are protected for the HA PSF gateway. Required when `enablePublicSubnetFiltering` and `peeringHaSubnet` are set. Available as of provider version R2.18+.
	PublicSubnetFilteringHaRouteTables []string `pulumi:"publicSubnetFilteringHaRouteTables"`
	// Route tables whose associated public subnets are protected. Only valid when `enablePublicSubnetFiltering` attribute is true. Available as of provider version R2.18+.
	PublicSubnetFilteringRouteTables []string `pulumi:"publicSubnetFilteringRouteTables"`
	// It sets the value (seconds) of the [renegotiation interval](https://docs.aviatrix.com/HowTos/openvpn_faq.html#how-do-i-fix-the-aviatrix-vpn-timing-out-too-quickly). This renegotiation interval feature is enable only if this attribute is set, otherwise it is disabled. The entered value must be an integer number greater than 300. Available in provider version R2.17.1+.
	RenegotiationInterval *int `pulumi:"renegotiationInterval"`
	// Gateway ethernet interface RX queue size. Once set, can't be deleted or disabled. Available for AWS as of provider version R2.22+.
	RxQueueSize *string `pulumi:"rxQueueSize"`
	// Enable/disable SAML. This field is available in Controller version 3.3 or later release. Valid values: true, false. Default value: false.
	SamlEnabled *bool `pulumi:"samlEnabled"`
	// A list of domain names that will use the NameServer when a specific name is not in the destination when Split Tunnel Mode is enabled.
	SearchDomains *string `pulumi:"searchDomains"`
	// Security group used for the gateway.
	SecurityGroupId *string `pulumi:"securityGroupId"`
	// If enabled, Controller monitors the health of the gateway and restarts the gateway if it becomes unreachable. Valid values: true, false. Default value: false.
	SingleAzHa *bool `pulumi:"singleAzHa"`
	// Enable Source NAT in "single ip" mode for this gateway. Valid values: true, false. Default value: false. **NOTE: If using SNAT for FQDN use-case, please see notes here.**
	SingleIpSnat *bool `pulumi:"singleIpSnat"`
	// The software version of the gateway. If set, we will attempt to update the gateway to the specified version if current version is different. If left blank, the gateway upgrade can be managed with the `AviatrixControllerConfig` resource. Type: String. Example: "6.5.821". Available as of provider version R2.20.0.
	SoftwareVersion *string `pulumi:"softwareVersion"`
	// Enable/disable Split Tunnel Mode. Valid values: true, false. Default value: true. Please see [here](https://docs.aviatrix.com/HowTos/gateway.html#split-tunnel-mode) for more information on split tunnel.
	SplitTunnel *bool `pulumi:"splitTunnel"`
	// Price for spot instance. NOT supported for production deployment.
	SpotPrice *string `pulumi:"spotPrice"`
	// A VPC network address range selected from one of the available network ranges. Example: "172.31.0.0/20". **NOTE: If using `insaneMode`, please see notes here.**
	Subnet *string `pulumi:"subnet"`
	// (Optional) Tag list of the gateway instance. Only available for AWS, AWSGov, AWSChina, Azure, AzureGov and AzureChina gateways. Example: ["key1:value1", "key2:value2"].
	// * `storageName` (Optional) Specify a storage account. Required if `cloudType` is 2048 (AzureChina). Removed in Provider version 2.21.0+.
	//
	// Deprecated: Use tags instead.
	TagLists []string `pulumi:"tagLists"`
	// Map of tags to assign to the gateway. Only available for AWS, AWSGov, AWSChina, Azure, AzureGov, AzureChina, AWS Top Secret and AWS Secret gateways. Allowed characters vary by cloud type but always include: letters, spaces, and numbers. AWS, AWSGov, AWSChina, AWS Top Secret and AWS Secret allow the use of any character.  Azure, AzureGov and AzureChina allows the following special characters: + - = . _ : @. Example: {"key1" = "value1", "key2" = "value2"}.
	Tags map[string]string `pulumi:"tags"`
	// The IPSec tunnel down detection time for the Gateway.
	TunnelDetectionTime *int `pulumi:"tunnelDetectionTime"`
	// VPC ID/VNet name of cloud provider. Example: AWS/AWSGov/AWSChina: "vpc-abcd1234", GCP: "vpc-gcp-test~-~project-id", Azure/AzureGov/AzureChina: "vnet_name:rg_name:resource_guid", OCI: "ocid1.vcn.oc1.iad.aaaaaaaaba3pv6wkcr4jqae5f44n2b2m2yt2j6rx32uzr4h25vqstifsfdsq".
	VpcId *string `pulumi:"vpcId"`
	// VPC region the gateway will be created in. Example: AWS: "us-east-1", GCP: "us-west2-a", Azure: "East US 2", OCI: "us-ashburn-1", AzureGov: "USGov Arizona", AWSGov: "us-gov-west-1", AWSChina: "cn-north-1", AzureChina: "China North", AWS Top Secret: "us-iso-east-1", AWS Secret: "us-isob-east-1".
	VpcReg *string `pulumi:"vpcReg"`
	// Enable [user access through VPN](https://docs.aviatrix.com/HowTos/gateway.html#vpn-access) to this gateway. Valid values: true, false.
	VpnAccess *bool `pulumi:"vpnAccess"`
	// VPN CIDR block for the gateway. Required if `vpnAccess` is true. Example: "192.168.43.0/24".
	VpnCidr *string `pulumi:"vpnCidr"`
	// Transport mode for VPN connection. All `cloudTypes` support TCP with ELB, and UDP without ELB. AWS(1) additionally supports UDP with ELB. Valid values: "TCP", "UDP". If not specified, "TCP" will be used.
	VpnProtocol *string `pulumi:"vpnProtocol"`
	// Availability Zone. Only available for Azure and Public Subnet Filtering gateway. Available for Azure as of provider version R2.17+.
	Zone *string `pulumi:"zone"`
}

type AviatrixGatewayState struct {
	// Account name. This account will be used to launch Aviatrix gateway.
	AccountName pulumi.StringPtrInput
	// A list of destination CIDR ranges that will also go through the VPN tunnel when Split Tunnel Mode is enabled.
	AdditionalCidrs pulumi.StringPtrInput
	// A list of CIDR ranges separated by comma to configure when "Designated Gateway" feature is enabled. Example: "10.8.0.0/16,10.9.0.0/16,10.10.0.0/16".
	AdditionalCidrsDesignatedGateway pulumi.StringPtrInput
	// If set to false, use an available address in Elastic IP pool for this gateway. Otherwise, allocate a new Elastic IP and use it for this gateway. Available in Controller 2.7+. Valid values: true, false. Default: true.
	AllocateNewEip pulumi.BoolPtrInput
	// Availability domain. Required and valid only for OCI. Available as of provider version R2.19.3.
	AvailabilityDomain pulumi.StringPtrInput
	// Name of public IP Address resource and its resource group in Azure to be assigned to the gateway instance. Example: "IP_Name:Resource_Group_Name". Required when `allocateNewEip` is false and `cloudType` is Azure, AzureGov or AzureChina. Available as of provider version 2.20+.
	AzureEipNameResourceGroup pulumi.StringPtrInput
	// Cloud instance ID of the gateway.
	CloudInstanceId pulumi.StringPtrInput
	// Cloud service provider to use to launch the gateway. Requires an integer value. Currently supports AWS(1), GCP(4), Azure(8), OCI(16), AzureGov(32), AWSGov(256), AWSChina(1024), AzureChina(2048), Alibaba Cloud (8192), AWS Top Secret (16384) and AWS Secret (32768).
	CloudType pulumi.IntPtrInput
	// Customer-managed key ID.
	CustomerManagedKeys pulumi.StringPtrInput
	// API hostname for DUO auth mode. Required: Yes if `otpMode` is "2".
	DuoApiHostname pulumi.StringPtrInput
	// Integration key for DUO auth mode. Required if `otpMode` is "2".
	DuoIntegrationKey pulumi.StringPtrInput
	// Push mode for DUO auth. Required if `otpMode` is "2". Valid values: "auto", "selective" and "token".
	DuoPushMode pulumi.StringPtrInput
	// Secret key for DUO auth mode. Required if `otpMode` is "2".
	DuoSecretKey pulumi.StringPtrInput
	// Specified EIP to use for gateway creation. Required when `allocateNewEip` is false.  Available in Controller version 3.5+. Only available for AWS, GCP, Azure, OCI, AzureGov, AWSGov, AWSChina, AzureChina, AWS Top Secret and AWS Secret.
	Eip pulumi.StringPtrInput
	// ELB DNS name.
	ElbDnsName pulumi.StringPtrInput
	// A name for the ELB that is created. If it is not specified, a name is generated automatically.
	ElbName pulumi.StringPtrInput
	// Enable Designated Gateway feature for Gateway. Only supported for AWS, AWSGov, AWSChina, AWS Top Secret and AWS Secret gateways. Valid values: true, false. Default value: false. Please view documentation [here](https://docs.aviatrix.com/HowTos/gateway.html#designated-gateway) for more information on this feature.
	EnableDesignatedGateway pulumi.BoolPtrInput
	// Specify whether to enable ELB or not. Not supported for OCI gateways. Valid values: true, false.
	EnableElb pulumi.BoolPtrInput
	// Enable EBS volume encryption for the gateway. Only supported for AWS, AWSGov, AWSChina, AWS Top Secret and AWS Secret gateways. Valid values: true, false. Default value: false.
	EnableEncryptVolume pulumi.BoolPtrInput
	// Enable jumbo frames for this gateway. Default value is true.
	EnableJumboFrame pulumi.BoolPtrInput
	// Enable/disable LDAP. Valid values: true, false. Default value: false.
	EnableLdap pulumi.BoolPtrInput
	// If set to true, the [Monitor Gateway Subnets](https://docs.aviatrix.com/HowTos/gateway.html#monitor-gateway-subnet) feature is enabled. Default value is false. Available in provider version R2.17.1+.
	EnableMonitorGatewaySubnets pulumi.BoolPtrInput
	// Create a [Public Subnet Filtering gateway](https://docs.aviatrix.com/HowTos/public_subnet_filtering_faq.html).
	EnablePublicSubnetFiltering pulumi.BoolPtrInput
	// Enable spot instance. NOT supported for production deployment.
	EnableSpotInstance pulumi.BoolPtrInput
	// Enable VPC DNS Server for gateway. Currently only supported for AWS, Azure, AzureGov, AWSGov, AWSChina, AzureChina, Alibaba Cloud, AWS Top Secret and AWS Secret gateways. Valid values: true, false. Default value: false.
	EnableVpcDnsServer pulumi.BoolPtrInput
	// Enable/disable VPN NAT. Only supported for VPN gateway. Valid values: true, false. Default value: true.
	EnableVpnNat pulumi.BoolPtrInput
	// Fault domain. Required and valid only for OCI. Available as of provider version R2.19.3.
	FaultDomain pulumi.StringPtrInput
	// If `fqdnLanCidr` is set, the FQDN gateway will be created with an additional LAN interface using the provided CIDR. This attribute is required when enabling FQDN gateway FireNet in Azure or GCP. Available in provider version R2.17.1+.
	FqdnLanCidr pulumi.StringPtrInput
	// The lan interface id of the of FQDN gateway with additional LAN interface. This attribute will be exported when enabling FQDN gateway firenet in Azure. Available in provider version R2.17.1+.
	FqdnLanInterface pulumi.StringPtrInput
	// FQDN LAN VPC ID. This attribute is required when enabling FQDN gateway FireNet in GCP. Available as of provider version R2.18.1+.
	FqdnLanVpcId pulumi.StringPtrInput
	// Name of the Aviatrix gateway to be created.
	GwName pulumi.StringPtrInput
	// Size of the gateway instance. Example: AWS/AWSGov/AWSChina: "t2.large", GCP: "n1-standard-1", Azure/AzureGov/AzureChina: "Standard_B1s", OCI: "VM.Standard2.2".
	GwSize pulumi.StringPtrInput
	// It sets the value (seconds) of the [idle timeout](https://docs.aviatrix.com/HowTos/openvpn_faq.html#how-do-i-fix-the-aviatrix-vpn-timing-out-too-quickly). This idle timeout feature is enable only if this attribute is set, otherwise it is disabled. The entered value must be an integer number greater than 300.  Available in provider version R2.17.1+.
	IdleTimeout pulumi.IntPtrInput
	// The image version of the gateway. Use `getAviatrixGatewayImage` data source to programmatically retrieve this value for the desired `softwareVersion`. If set, we will attempt to update the gateway to the specified version if current version is different. If left blank, the gateway upgrades can be managed with the `AviatrixControllerConfig` resource. Type: String. Example: "hvm-cloudx-aws-022021". Available as of provider version R2.20.0.
	ImageVersion pulumi.StringPtrInput
	// Enable [Insane Mode](https://docs.aviatrix.com/HowTos/insane_mode.html) for Gateway. Insane Mode gateway size must be at least c5 series (AWS) or Standard_D3_v2 (Azure/AzureGov). If enabled, a valid /26 CIDR segment of the VPC must be specified to create a new subnet. Only supported for AWS, AWSGov, Azure, AzureGov, AWS China, Azure China, AWS Top Secret or AWS Secret.  Valid values: true, false.
	InsaneMode pulumi.BoolPtrInput
	// Region + Availability Zone of subnet being created for Insane Mode gateway. Required for AWS, AWSGov, AWS China, AWS Top Secret or AWS Secret if `insaneMode` is set. Example: AWS: "us-west-1a".
	InsaneModeAz pulumi.StringPtrInput
	// LDAP base DN. Required if `enableLdap` is true.
	LdapBaseDn pulumi.StringPtrInput
	// LDAP bind DN. Required if `enableLdap` is true.
	LdapBindDn pulumi.StringPtrInput
	// LDAP password. Required if `enableLdap` is true.
	LdapPassword pulumi.StringPtrInput
	// LDAP server address. Required if `enableLdap` is true.
	LdapServer pulumi.StringPtrInput
	// LDAP user attribute. Required if `enableLdap` is true.
	LdapUsernameAttribute pulumi.StringPtrInput
	// Maximum number of active VPN users allowed to be connected to this gateway. Required if `vpnAccess` is true. Make sure the number is smaller than the VPN CIDR block. Example: 100. **NOTE: Please see notes here in regards to any deltas found in your state with the addition of this argument in R1.14.**
	MaxVpnConn pulumi.StringPtrInput
	// Set of monitored instance ids. Only valid when 'enable_monitor_gateway_subnets' = true. Available in provider version R2.17.1+.
	MonitorExcludeLists pulumi.StringArrayInput
	// A list of DNS servers used to resolve domain names by a connected VPN user when Split Tunnel Mode is enabled.
	NameServers pulumi.StringPtrInput
	// Token for Okta auth mode. Required if `otpMode` is "3".
	OktaToken pulumi.StringPtrInput
	// URL for Okta auth mode. Required if `otpMode` is "3".
	OktaUrl pulumi.StringPtrInput
	// Username suffix for Okta auth mode. Example: "aviatrix.com".
	OktaUsernameSuffix pulumi.StringPtrInput
	// Two step authentication mode. Valid values: "2" for DUO, "3" for Okta.
	OtpMode pulumi.StringPtrInput
	// Peering HA gateway availability domain. Required and valid only for OCI. Available as of provider version R2.19.3.
	PeeringHaAvailabilityDomain pulumi.StringPtrInput
	// Name of public IP address resource and its resource group in Azure to be assigned to the HA peering instance. Example: "IP_Name:Resource_Group_Name". Required if `peeringHaEip` is set and `cloudType` is Azure, AzureGov or AzureChina. Available as of provider version 2.20+.
	PeeringHaAzureEipNameResourceGroup pulumi.StringPtrInput
	// Cloud instance ID of the HA gateway.
	PeeringHaCloudInstanceId pulumi.StringPtrInput
	// Public IP address to be assigned to the HA peering instance. Only available for AWS, GCP, Azure, OCI, AzureGov, AWSGov, AWSChina, AzureChina, AWS Top Secret and AWS Secret.
	PeeringHaEip pulumi.StringPtrInput
	// Peering HA gateway fault domain. Required and valid only for OCI. Available as of provider version R2.19.3.
	PeeringHaFaultDomain pulumi.StringPtrInput
	// Aviatrix gateway unique name of HA gateway.
	PeeringHaGwName pulumi.StringPtrInput
	// Size of the Peering HA Gateway to be created. Required if enabling Peering HA. **NOTE: Please see notes here in regards to any deltas found in your state with the addition of this argument in R1.8.**
	PeeringHaGwSize pulumi.StringPtrInput
	// The image version of the HA gateway. Use `getAviatrixGatewayImage` data source to programmatically retrieve this value for the desired `haSoftwareVersion`. If set, we will attempt to update the HA gateway to the specified version if current version is different. If left blank, the gateway upgrades can be managed with the `AviatrixControllerConfig` resource. Type: String. Example: "hvm-cloudx-aws-022021". Available as of provider version R2.20.0.
	PeeringHaImageVersion pulumi.StringPtrInput
	// Region + Availability Zone of subnet being created for Insane Mode-enabled Peering HA Gateway. Required for AWS only if `insaneMode` is set and `peeringHaSubnet` is set. Example: AWS: "us-west-1a".
	PeeringHaInsaneModeAz pulumi.StringPtrInput
	// Private IP address of HA gateway.
	PeeringHaPrivateIp pulumi.StringPtrInput
	// HA security group used for the gateway.
	PeeringHaSecurityGroupId pulumi.StringPtrInput
	// The software version of the HA gateway. If set, we will attempt to update the HA gateway to the specified version if current version is different. If left blank, the HA gateway upgrade can be managed with the `AviatrixControllerConfig` resource. Type: String. Example: "6.5.821". Available as of provider version R2.20.0.
	PeeringHaSoftwareVersion pulumi.StringPtrInput
	// Public subnet CIDR to create Peering HA Gateway in. Required if enabling Peering HA for AWS/AWSGov/AWS Top Secret/AWS Secret/Azure/AzureGov/Alibaba Cloud. Optional if enabling Peering HA for GCP. Example: AWS: "10.0.0.0/16".
	PeeringHaSubnet pulumi.StringPtrInput
	// Zone to create Peering HA Gateway in. Required if enabling Peering HA for GCP. Example: GCP: "us-west1-c". Optional for Azure. Valid values for Azure gateways are in the form "az-n". Example: "az-2". Available for Azure as of provider version R2.17+.
	PeeringHaZone pulumi.StringPtrInput
	// Private IP address of the gateway created.
	PrivateIp pulumi.StringPtrInput
	// DNS server used by the gateway. Default is "8.8.8.8", can be overridden with the VPC's setting.
	PublicDnsServer pulumi.StringPtrInput
	// Whether to enforce Guard Duty IP blocking.  Only valid when `enablePublicSubnetFiltering` attribute is true. Valid values: true or false. Default value: true. Available as of provider version R2.18+.
	PublicSubnetFilteringGuardDutyEnforced pulumi.BoolPtrInput
	// Route tables whose associated public subnets are protected for the HA PSF gateway. Required when `enablePublicSubnetFiltering` and `peeringHaSubnet` are set. Available as of provider version R2.18+.
	PublicSubnetFilteringHaRouteTables pulumi.StringArrayInput
	// Route tables whose associated public subnets are protected. Only valid when `enablePublicSubnetFiltering` attribute is true. Available as of provider version R2.18+.
	PublicSubnetFilteringRouteTables pulumi.StringArrayInput
	// It sets the value (seconds) of the [renegotiation interval](https://docs.aviatrix.com/HowTos/openvpn_faq.html#how-do-i-fix-the-aviatrix-vpn-timing-out-too-quickly). This renegotiation interval feature is enable only if this attribute is set, otherwise it is disabled. The entered value must be an integer number greater than 300. Available in provider version R2.17.1+.
	RenegotiationInterval pulumi.IntPtrInput
	// Gateway ethernet interface RX queue size. Once set, can't be deleted or disabled. Available for AWS as of provider version R2.22+.
	RxQueueSize pulumi.StringPtrInput
	// Enable/disable SAML. This field is available in Controller version 3.3 or later release. Valid values: true, false. Default value: false.
	SamlEnabled pulumi.BoolPtrInput
	// A list of domain names that will use the NameServer when a specific name is not in the destination when Split Tunnel Mode is enabled.
	SearchDomains pulumi.StringPtrInput
	// Security group used for the gateway.
	SecurityGroupId pulumi.StringPtrInput
	// If enabled, Controller monitors the health of the gateway and restarts the gateway if it becomes unreachable. Valid values: true, false. Default value: false.
	SingleAzHa pulumi.BoolPtrInput
	// Enable Source NAT in "single ip" mode for this gateway. Valid values: true, false. Default value: false. **NOTE: If using SNAT for FQDN use-case, please see notes here.**
	SingleIpSnat pulumi.BoolPtrInput
	// The software version of the gateway. If set, we will attempt to update the gateway to the specified version if current version is different. If left blank, the gateway upgrade can be managed with the `AviatrixControllerConfig` resource. Type: String. Example: "6.5.821". Available as of provider version R2.20.0.
	SoftwareVersion pulumi.StringPtrInput
	// Enable/disable Split Tunnel Mode. Valid values: true, false. Default value: true. Please see [here](https://docs.aviatrix.com/HowTos/gateway.html#split-tunnel-mode) for more information on split tunnel.
	SplitTunnel pulumi.BoolPtrInput
	// Price for spot instance. NOT supported for production deployment.
	SpotPrice pulumi.StringPtrInput
	// A VPC network address range selected from one of the available network ranges. Example: "172.31.0.0/20". **NOTE: If using `insaneMode`, please see notes here.**
	Subnet pulumi.StringPtrInput
	// (Optional) Tag list of the gateway instance. Only available for AWS, AWSGov, AWSChina, Azure, AzureGov and AzureChina gateways. Example: ["key1:value1", "key2:value2"].
	// * `storageName` (Optional) Specify a storage account. Required if `cloudType` is 2048 (AzureChina). Removed in Provider version 2.21.0+.
	//
	// Deprecated: Use tags instead.
	TagLists pulumi.StringArrayInput
	// Map of tags to assign to the gateway. Only available for AWS, AWSGov, AWSChina, Azure, AzureGov, AzureChina, AWS Top Secret and AWS Secret gateways. Allowed characters vary by cloud type but always include: letters, spaces, and numbers. AWS, AWSGov, AWSChina, AWS Top Secret and AWS Secret allow the use of any character.  Azure, AzureGov and AzureChina allows the following special characters: + - = . _ : @. Example: {"key1" = "value1", "key2" = "value2"}.
	Tags pulumi.StringMapInput
	// The IPSec tunnel down detection time for the Gateway.
	TunnelDetectionTime pulumi.IntPtrInput
	// VPC ID/VNet name of cloud provider. Example: AWS/AWSGov/AWSChina: "vpc-abcd1234", GCP: "vpc-gcp-test~-~project-id", Azure/AzureGov/AzureChina: "vnet_name:rg_name:resource_guid", OCI: "ocid1.vcn.oc1.iad.aaaaaaaaba3pv6wkcr4jqae5f44n2b2m2yt2j6rx32uzr4h25vqstifsfdsq".
	VpcId pulumi.StringPtrInput
	// VPC region the gateway will be created in. Example: AWS: "us-east-1", GCP: "us-west2-a", Azure: "East US 2", OCI: "us-ashburn-1", AzureGov: "USGov Arizona", AWSGov: "us-gov-west-1", AWSChina: "cn-north-1", AzureChina: "China North", AWS Top Secret: "us-iso-east-1", AWS Secret: "us-isob-east-1".
	VpcReg pulumi.StringPtrInput
	// Enable [user access through VPN](https://docs.aviatrix.com/HowTos/gateway.html#vpn-access) to this gateway. Valid values: true, false.
	VpnAccess pulumi.BoolPtrInput
	// VPN CIDR block for the gateway. Required if `vpnAccess` is true. Example: "192.168.43.0/24".
	VpnCidr pulumi.StringPtrInput
	// Transport mode for VPN connection. All `cloudTypes` support TCP with ELB, and UDP without ELB. AWS(1) additionally supports UDP with ELB. Valid values: "TCP", "UDP". If not specified, "TCP" will be used.
	VpnProtocol pulumi.StringPtrInput
	// Availability Zone. Only available for Azure and Public Subnet Filtering gateway. Available for Azure as of provider version R2.17+.
	Zone pulumi.StringPtrInput
}

func (AviatrixGatewayState) ElementType() reflect.Type {
	return reflect.TypeOf((*aviatrixGatewayState)(nil)).Elem()
}

type aviatrixGatewayArgs struct {
	// Account name. This account will be used to launch Aviatrix gateway.
	AccountName string `pulumi:"accountName"`
	// A list of destination CIDR ranges that will also go through the VPN tunnel when Split Tunnel Mode is enabled.
	AdditionalCidrs *string `pulumi:"additionalCidrs"`
	// A list of CIDR ranges separated by comma to configure when "Designated Gateway" feature is enabled. Example: "10.8.0.0/16,10.9.0.0/16,10.10.0.0/16".
	AdditionalCidrsDesignatedGateway *string `pulumi:"additionalCidrsDesignatedGateway"`
	// If set to false, use an available address in Elastic IP pool for this gateway. Otherwise, allocate a new Elastic IP and use it for this gateway. Available in Controller 2.7+. Valid values: true, false. Default: true.
	AllocateNewEip *bool `pulumi:"allocateNewEip"`
	// Availability domain. Required and valid only for OCI. Available as of provider version R2.19.3.
	AvailabilityDomain *string `pulumi:"availabilityDomain"`
	// Name of public IP Address resource and its resource group in Azure to be assigned to the gateway instance. Example: "IP_Name:Resource_Group_Name". Required when `allocateNewEip` is false and `cloudType` is Azure, AzureGov or AzureChina. Available as of provider version 2.20+.
	AzureEipNameResourceGroup *string `pulumi:"azureEipNameResourceGroup"`
	// Cloud service provider to use to launch the gateway. Requires an integer value. Currently supports AWS(1), GCP(4), Azure(8), OCI(16), AzureGov(32), AWSGov(256), AWSChina(1024), AzureChina(2048), Alibaba Cloud (8192), AWS Top Secret (16384) and AWS Secret (32768).
	CloudType int `pulumi:"cloudType"`
	// Customer-managed key ID.
	CustomerManagedKeys *string `pulumi:"customerManagedKeys"`
	// API hostname for DUO auth mode. Required: Yes if `otpMode` is "2".
	DuoApiHostname *string `pulumi:"duoApiHostname"`
	// Integration key for DUO auth mode. Required if `otpMode` is "2".
	DuoIntegrationKey *string `pulumi:"duoIntegrationKey"`
	// Push mode for DUO auth. Required if `otpMode` is "2". Valid values: "auto", "selective" and "token".
	DuoPushMode *string `pulumi:"duoPushMode"`
	// Secret key for DUO auth mode. Required if `otpMode` is "2".
	DuoSecretKey *string `pulumi:"duoSecretKey"`
	// Specified EIP to use for gateway creation. Required when `allocateNewEip` is false.  Available in Controller version 3.5+. Only available for AWS, GCP, Azure, OCI, AzureGov, AWSGov, AWSChina, AzureChina, AWS Top Secret and AWS Secret.
	Eip *string `pulumi:"eip"`
	// A name for the ELB that is created. If it is not specified, a name is generated automatically.
	ElbName *string `pulumi:"elbName"`
	// Enable Designated Gateway feature for Gateway. Only supported for AWS, AWSGov, AWSChina, AWS Top Secret and AWS Secret gateways. Valid values: true, false. Default value: false. Please view documentation [here](https://docs.aviatrix.com/HowTos/gateway.html#designated-gateway) for more information on this feature.
	EnableDesignatedGateway *bool `pulumi:"enableDesignatedGateway"`
	// Specify whether to enable ELB or not. Not supported for OCI gateways. Valid values: true, false.
	EnableElb *bool `pulumi:"enableElb"`
	// Enable EBS volume encryption for the gateway. Only supported for AWS, AWSGov, AWSChina, AWS Top Secret and AWS Secret gateways. Valid values: true, false. Default value: false.
	EnableEncryptVolume *bool `pulumi:"enableEncryptVolume"`
	// Enable jumbo frames for this gateway. Default value is true.
	EnableJumboFrame *bool `pulumi:"enableJumboFrame"`
	// Enable/disable LDAP. Valid values: true, false. Default value: false.
	EnableLdap *bool `pulumi:"enableLdap"`
	// If set to true, the [Monitor Gateway Subnets](https://docs.aviatrix.com/HowTos/gateway.html#monitor-gateway-subnet) feature is enabled. Default value is false. Available in provider version R2.17.1+.
	EnableMonitorGatewaySubnets *bool `pulumi:"enableMonitorGatewaySubnets"`
	// Create a [Public Subnet Filtering gateway](https://docs.aviatrix.com/HowTos/public_subnet_filtering_faq.html).
	EnablePublicSubnetFiltering *bool `pulumi:"enablePublicSubnetFiltering"`
	// Enable spot instance. NOT supported for production deployment.
	EnableSpotInstance *bool `pulumi:"enableSpotInstance"`
	// Enable VPC DNS Server for gateway. Currently only supported for AWS, Azure, AzureGov, AWSGov, AWSChina, AzureChina, Alibaba Cloud, AWS Top Secret and AWS Secret gateways. Valid values: true, false. Default value: false.
	EnableVpcDnsServer *bool `pulumi:"enableVpcDnsServer"`
	// Enable/disable VPN NAT. Only supported for VPN gateway. Valid values: true, false. Default value: true.
	EnableVpnNat *bool `pulumi:"enableVpnNat"`
	// Fault domain. Required and valid only for OCI. Available as of provider version R2.19.3.
	FaultDomain *string `pulumi:"faultDomain"`
	// If `fqdnLanCidr` is set, the FQDN gateway will be created with an additional LAN interface using the provided CIDR. This attribute is required when enabling FQDN gateway FireNet in Azure or GCP. Available in provider version R2.17.1+.
	FqdnLanCidr *string `pulumi:"fqdnLanCidr"`
	// FQDN LAN VPC ID. This attribute is required when enabling FQDN gateway FireNet in GCP. Available as of provider version R2.18.1+.
	FqdnLanVpcId *string `pulumi:"fqdnLanVpcId"`
	// Name of the Aviatrix gateway to be created.
	GwName string `pulumi:"gwName"`
	// Size of the gateway instance. Example: AWS/AWSGov/AWSChina: "t2.large", GCP: "n1-standard-1", Azure/AzureGov/AzureChina: "Standard_B1s", OCI: "VM.Standard2.2".
	GwSize string `pulumi:"gwSize"`
	// It sets the value (seconds) of the [idle timeout](https://docs.aviatrix.com/HowTos/openvpn_faq.html#how-do-i-fix-the-aviatrix-vpn-timing-out-too-quickly). This idle timeout feature is enable only if this attribute is set, otherwise it is disabled. The entered value must be an integer number greater than 300.  Available in provider version R2.17.1+.
	IdleTimeout *int `pulumi:"idleTimeout"`
	// The image version of the gateway. Use `getAviatrixGatewayImage` data source to programmatically retrieve this value for the desired `softwareVersion`. If set, we will attempt to update the gateway to the specified version if current version is different. If left blank, the gateway upgrades can be managed with the `AviatrixControllerConfig` resource. Type: String. Example: "hvm-cloudx-aws-022021". Available as of provider version R2.20.0.
	ImageVersion *string `pulumi:"imageVersion"`
	// Enable [Insane Mode](https://docs.aviatrix.com/HowTos/insane_mode.html) for Gateway. Insane Mode gateway size must be at least c5 series (AWS) or Standard_D3_v2 (Azure/AzureGov). If enabled, a valid /26 CIDR segment of the VPC must be specified to create a new subnet. Only supported for AWS, AWSGov, Azure, AzureGov, AWS China, Azure China, AWS Top Secret or AWS Secret.  Valid values: true, false.
	InsaneMode *bool `pulumi:"insaneMode"`
	// Region + Availability Zone of subnet being created for Insane Mode gateway. Required for AWS, AWSGov, AWS China, AWS Top Secret or AWS Secret if `insaneMode` is set. Example: AWS: "us-west-1a".
	InsaneModeAz *string `pulumi:"insaneModeAz"`
	// LDAP base DN. Required if `enableLdap` is true.
	LdapBaseDn *string `pulumi:"ldapBaseDn"`
	// LDAP bind DN. Required if `enableLdap` is true.
	LdapBindDn *string `pulumi:"ldapBindDn"`
	// LDAP password. Required if `enableLdap` is true.
	LdapPassword *string `pulumi:"ldapPassword"`
	// LDAP server address. Required if `enableLdap` is true.
	LdapServer *string `pulumi:"ldapServer"`
	// LDAP user attribute. Required if `enableLdap` is true.
	LdapUsernameAttribute *string `pulumi:"ldapUsernameAttribute"`
	// Maximum number of active VPN users allowed to be connected to this gateway. Required if `vpnAccess` is true. Make sure the number is smaller than the VPN CIDR block. Example: 100. **NOTE: Please see notes here in regards to any deltas found in your state with the addition of this argument in R1.14.**
	MaxVpnConn *string `pulumi:"maxVpnConn"`
	// Set of monitored instance ids. Only valid when 'enable_monitor_gateway_subnets' = true. Available in provider version R2.17.1+.
	MonitorExcludeLists []string `pulumi:"monitorExcludeLists"`
	// A list of DNS servers used to resolve domain names by a connected VPN user when Split Tunnel Mode is enabled.
	NameServers *string `pulumi:"nameServers"`
	// Token for Okta auth mode. Required if `otpMode` is "3".
	OktaToken *string `pulumi:"oktaToken"`
	// URL for Okta auth mode. Required if `otpMode` is "3".
	OktaUrl *string `pulumi:"oktaUrl"`
	// Username suffix for Okta auth mode. Example: "aviatrix.com".
	OktaUsernameSuffix *string `pulumi:"oktaUsernameSuffix"`
	// Two step authentication mode. Valid values: "2" for DUO, "3" for Okta.
	OtpMode *string `pulumi:"otpMode"`
	// Peering HA gateway availability domain. Required and valid only for OCI. Available as of provider version R2.19.3.
	PeeringHaAvailabilityDomain *string `pulumi:"peeringHaAvailabilityDomain"`
	// Name of public IP address resource and its resource group in Azure to be assigned to the HA peering instance. Example: "IP_Name:Resource_Group_Name". Required if `peeringHaEip` is set and `cloudType` is Azure, AzureGov or AzureChina. Available as of provider version 2.20+.
	PeeringHaAzureEipNameResourceGroup *string `pulumi:"peeringHaAzureEipNameResourceGroup"`
	// Public IP address to be assigned to the HA peering instance. Only available for AWS, GCP, Azure, OCI, AzureGov, AWSGov, AWSChina, AzureChina, AWS Top Secret and AWS Secret.
	PeeringHaEip *string `pulumi:"peeringHaEip"`
	// Peering HA gateway fault domain. Required and valid only for OCI. Available as of provider version R2.19.3.
	PeeringHaFaultDomain *string `pulumi:"peeringHaFaultDomain"`
	// Size of the Peering HA Gateway to be created. Required if enabling Peering HA. **NOTE: Please see notes here in regards to any deltas found in your state with the addition of this argument in R1.8.**
	PeeringHaGwSize *string `pulumi:"peeringHaGwSize"`
	// The image version of the HA gateway. Use `getAviatrixGatewayImage` data source to programmatically retrieve this value for the desired `haSoftwareVersion`. If set, we will attempt to update the HA gateway to the specified version if current version is different. If left blank, the gateway upgrades can be managed with the `AviatrixControllerConfig` resource. Type: String. Example: "hvm-cloudx-aws-022021". Available as of provider version R2.20.0.
	PeeringHaImageVersion *string `pulumi:"peeringHaImageVersion"`
	// Region + Availability Zone of subnet being created for Insane Mode-enabled Peering HA Gateway. Required for AWS only if `insaneMode` is set and `peeringHaSubnet` is set. Example: AWS: "us-west-1a".
	PeeringHaInsaneModeAz *string `pulumi:"peeringHaInsaneModeAz"`
	// The software version of the HA gateway. If set, we will attempt to update the HA gateway to the specified version if current version is different. If left blank, the HA gateway upgrade can be managed with the `AviatrixControllerConfig` resource. Type: String. Example: "6.5.821". Available as of provider version R2.20.0.
	PeeringHaSoftwareVersion *string `pulumi:"peeringHaSoftwareVersion"`
	// Public subnet CIDR to create Peering HA Gateway in. Required if enabling Peering HA for AWS/AWSGov/AWS Top Secret/AWS Secret/Azure/AzureGov/Alibaba Cloud. Optional if enabling Peering HA for GCP. Example: AWS: "10.0.0.0/16".
	PeeringHaSubnet *string `pulumi:"peeringHaSubnet"`
	// Zone to create Peering HA Gateway in. Required if enabling Peering HA for GCP. Example: GCP: "us-west1-c". Optional for Azure. Valid values for Azure gateways are in the form "az-n". Example: "az-2". Available for Azure as of provider version R2.17+.
	PeeringHaZone *string `pulumi:"peeringHaZone"`
	// Whether to enforce Guard Duty IP blocking.  Only valid when `enablePublicSubnetFiltering` attribute is true. Valid values: true or false. Default value: true. Available as of provider version R2.18+.
	PublicSubnetFilteringGuardDutyEnforced *bool `pulumi:"publicSubnetFilteringGuardDutyEnforced"`
	// Route tables whose associated public subnets are protected for the HA PSF gateway. Required when `enablePublicSubnetFiltering` and `peeringHaSubnet` are set. Available as of provider version R2.18+.
	PublicSubnetFilteringHaRouteTables []string `pulumi:"publicSubnetFilteringHaRouteTables"`
	// Route tables whose associated public subnets are protected. Only valid when `enablePublicSubnetFiltering` attribute is true. Available as of provider version R2.18+.
	PublicSubnetFilteringRouteTables []string `pulumi:"publicSubnetFilteringRouteTables"`
	// It sets the value (seconds) of the [renegotiation interval](https://docs.aviatrix.com/HowTos/openvpn_faq.html#how-do-i-fix-the-aviatrix-vpn-timing-out-too-quickly). This renegotiation interval feature is enable only if this attribute is set, otherwise it is disabled. The entered value must be an integer number greater than 300. Available in provider version R2.17.1+.
	RenegotiationInterval *int `pulumi:"renegotiationInterval"`
	// Gateway ethernet interface RX queue size. Once set, can't be deleted or disabled. Available for AWS as of provider version R2.22+.
	RxQueueSize *string `pulumi:"rxQueueSize"`
	// Enable/disable SAML. This field is available in Controller version 3.3 or later release. Valid values: true, false. Default value: false.
	SamlEnabled *bool `pulumi:"samlEnabled"`
	// A list of domain names that will use the NameServer when a specific name is not in the destination when Split Tunnel Mode is enabled.
	SearchDomains *string `pulumi:"searchDomains"`
	// If enabled, Controller monitors the health of the gateway and restarts the gateway if it becomes unreachable. Valid values: true, false. Default value: false.
	SingleAzHa *bool `pulumi:"singleAzHa"`
	// Enable Source NAT in "single ip" mode for this gateway. Valid values: true, false. Default value: false. **NOTE: If using SNAT for FQDN use-case, please see notes here.**
	SingleIpSnat *bool `pulumi:"singleIpSnat"`
	// The software version of the gateway. If set, we will attempt to update the gateway to the specified version if current version is different. If left blank, the gateway upgrade can be managed with the `AviatrixControllerConfig` resource. Type: String. Example: "6.5.821". Available as of provider version R2.20.0.
	SoftwareVersion *string `pulumi:"softwareVersion"`
	// Enable/disable Split Tunnel Mode. Valid values: true, false. Default value: true. Please see [here](https://docs.aviatrix.com/HowTos/gateway.html#split-tunnel-mode) for more information on split tunnel.
	SplitTunnel *bool `pulumi:"splitTunnel"`
	// Price for spot instance. NOT supported for production deployment.
	SpotPrice *string `pulumi:"spotPrice"`
	// A VPC network address range selected from one of the available network ranges. Example: "172.31.0.0/20". **NOTE: If using `insaneMode`, please see notes here.**
	Subnet string `pulumi:"subnet"`
	// (Optional) Tag list of the gateway instance. Only available for AWS, AWSGov, AWSChina, Azure, AzureGov and AzureChina gateways. Example: ["key1:value1", "key2:value2"].
	// * `storageName` (Optional) Specify a storage account. Required if `cloudType` is 2048 (AzureChina). Removed in Provider version 2.21.0+.
	//
	// Deprecated: Use tags instead.
	TagLists []string `pulumi:"tagLists"`
	// Map of tags to assign to the gateway. Only available for AWS, AWSGov, AWSChina, Azure, AzureGov, AzureChina, AWS Top Secret and AWS Secret gateways. Allowed characters vary by cloud type but always include: letters, spaces, and numbers. AWS, AWSGov, AWSChina, AWS Top Secret and AWS Secret allow the use of any character.  Azure, AzureGov and AzureChina allows the following special characters: + - = . _ : @. Example: {"key1" = "value1", "key2" = "value2"}.
	Tags map[string]string `pulumi:"tags"`
	// The IPSec tunnel down detection time for the Gateway.
	TunnelDetectionTime *int `pulumi:"tunnelDetectionTime"`
	// VPC ID/VNet name of cloud provider. Example: AWS/AWSGov/AWSChina: "vpc-abcd1234", GCP: "vpc-gcp-test~-~project-id", Azure/AzureGov/AzureChina: "vnet_name:rg_name:resource_guid", OCI: "ocid1.vcn.oc1.iad.aaaaaaaaba3pv6wkcr4jqae5f44n2b2m2yt2j6rx32uzr4h25vqstifsfdsq".
	VpcId string `pulumi:"vpcId"`
	// VPC region the gateway will be created in. Example: AWS: "us-east-1", GCP: "us-west2-a", Azure: "East US 2", OCI: "us-ashburn-1", AzureGov: "USGov Arizona", AWSGov: "us-gov-west-1", AWSChina: "cn-north-1", AzureChina: "China North", AWS Top Secret: "us-iso-east-1", AWS Secret: "us-isob-east-1".
	VpcReg string `pulumi:"vpcReg"`
	// Enable [user access through VPN](https://docs.aviatrix.com/HowTos/gateway.html#vpn-access) to this gateway. Valid values: true, false.
	VpnAccess *bool `pulumi:"vpnAccess"`
	// VPN CIDR block for the gateway. Required if `vpnAccess` is true. Example: "192.168.43.0/24".
	VpnCidr *string `pulumi:"vpnCidr"`
	// Transport mode for VPN connection. All `cloudTypes` support TCP with ELB, and UDP without ELB. AWS(1) additionally supports UDP with ELB. Valid values: "TCP", "UDP". If not specified, "TCP" will be used.
	VpnProtocol *string `pulumi:"vpnProtocol"`
	// Availability Zone. Only available for Azure and Public Subnet Filtering gateway. Available for Azure as of provider version R2.17+.
	Zone *string `pulumi:"zone"`
}

// The set of arguments for constructing a AviatrixGateway resource.
type AviatrixGatewayArgs struct {
	// Account name. This account will be used to launch Aviatrix gateway.
	AccountName pulumi.StringInput
	// A list of destination CIDR ranges that will also go through the VPN tunnel when Split Tunnel Mode is enabled.
	AdditionalCidrs pulumi.StringPtrInput
	// A list of CIDR ranges separated by comma to configure when "Designated Gateway" feature is enabled. Example: "10.8.0.0/16,10.9.0.0/16,10.10.0.0/16".
	AdditionalCidrsDesignatedGateway pulumi.StringPtrInput
	// If set to false, use an available address in Elastic IP pool for this gateway. Otherwise, allocate a new Elastic IP and use it for this gateway. Available in Controller 2.7+. Valid values: true, false. Default: true.
	AllocateNewEip pulumi.BoolPtrInput
	// Availability domain. Required and valid only for OCI. Available as of provider version R2.19.3.
	AvailabilityDomain pulumi.StringPtrInput
	// Name of public IP Address resource and its resource group in Azure to be assigned to the gateway instance. Example: "IP_Name:Resource_Group_Name". Required when `allocateNewEip` is false and `cloudType` is Azure, AzureGov or AzureChina. Available as of provider version 2.20+.
	AzureEipNameResourceGroup pulumi.StringPtrInput
	// Cloud service provider to use to launch the gateway. Requires an integer value. Currently supports AWS(1), GCP(4), Azure(8), OCI(16), AzureGov(32), AWSGov(256), AWSChina(1024), AzureChina(2048), Alibaba Cloud (8192), AWS Top Secret (16384) and AWS Secret (32768).
	CloudType pulumi.IntInput
	// Customer-managed key ID.
	CustomerManagedKeys pulumi.StringPtrInput
	// API hostname for DUO auth mode. Required: Yes if `otpMode` is "2".
	DuoApiHostname pulumi.StringPtrInput
	// Integration key for DUO auth mode. Required if `otpMode` is "2".
	DuoIntegrationKey pulumi.StringPtrInput
	// Push mode for DUO auth. Required if `otpMode` is "2". Valid values: "auto", "selective" and "token".
	DuoPushMode pulumi.StringPtrInput
	// Secret key for DUO auth mode. Required if `otpMode` is "2".
	DuoSecretKey pulumi.StringPtrInput
	// Specified EIP to use for gateway creation. Required when `allocateNewEip` is false.  Available in Controller version 3.5+. Only available for AWS, GCP, Azure, OCI, AzureGov, AWSGov, AWSChina, AzureChina, AWS Top Secret and AWS Secret.
	Eip pulumi.StringPtrInput
	// A name for the ELB that is created. If it is not specified, a name is generated automatically.
	ElbName pulumi.StringPtrInput
	// Enable Designated Gateway feature for Gateway. Only supported for AWS, AWSGov, AWSChina, AWS Top Secret and AWS Secret gateways. Valid values: true, false. Default value: false. Please view documentation [here](https://docs.aviatrix.com/HowTos/gateway.html#designated-gateway) for more information on this feature.
	EnableDesignatedGateway pulumi.BoolPtrInput
	// Specify whether to enable ELB or not. Not supported for OCI gateways. Valid values: true, false.
	EnableElb pulumi.BoolPtrInput
	// Enable EBS volume encryption for the gateway. Only supported for AWS, AWSGov, AWSChina, AWS Top Secret and AWS Secret gateways. Valid values: true, false. Default value: false.
	EnableEncryptVolume pulumi.BoolPtrInput
	// Enable jumbo frames for this gateway. Default value is true.
	EnableJumboFrame pulumi.BoolPtrInput
	// Enable/disable LDAP. Valid values: true, false. Default value: false.
	EnableLdap pulumi.BoolPtrInput
	// If set to true, the [Monitor Gateway Subnets](https://docs.aviatrix.com/HowTos/gateway.html#monitor-gateway-subnet) feature is enabled. Default value is false. Available in provider version R2.17.1+.
	EnableMonitorGatewaySubnets pulumi.BoolPtrInput
	// Create a [Public Subnet Filtering gateway](https://docs.aviatrix.com/HowTos/public_subnet_filtering_faq.html).
	EnablePublicSubnetFiltering pulumi.BoolPtrInput
	// Enable spot instance. NOT supported for production deployment.
	EnableSpotInstance pulumi.BoolPtrInput
	// Enable VPC DNS Server for gateway. Currently only supported for AWS, Azure, AzureGov, AWSGov, AWSChina, AzureChina, Alibaba Cloud, AWS Top Secret and AWS Secret gateways. Valid values: true, false. Default value: false.
	EnableVpcDnsServer pulumi.BoolPtrInput
	// Enable/disable VPN NAT. Only supported for VPN gateway. Valid values: true, false. Default value: true.
	EnableVpnNat pulumi.BoolPtrInput
	// Fault domain. Required and valid only for OCI. Available as of provider version R2.19.3.
	FaultDomain pulumi.StringPtrInput
	// If `fqdnLanCidr` is set, the FQDN gateway will be created with an additional LAN interface using the provided CIDR. This attribute is required when enabling FQDN gateway FireNet in Azure or GCP. Available in provider version R2.17.1+.
	FqdnLanCidr pulumi.StringPtrInput
	// FQDN LAN VPC ID. This attribute is required when enabling FQDN gateway FireNet in GCP. Available as of provider version R2.18.1+.
	FqdnLanVpcId pulumi.StringPtrInput
	// Name of the Aviatrix gateway to be created.
	GwName pulumi.StringInput
	// Size of the gateway instance. Example: AWS/AWSGov/AWSChina: "t2.large", GCP: "n1-standard-1", Azure/AzureGov/AzureChina: "Standard_B1s", OCI: "VM.Standard2.2".
	GwSize pulumi.StringInput
	// It sets the value (seconds) of the [idle timeout](https://docs.aviatrix.com/HowTos/openvpn_faq.html#how-do-i-fix-the-aviatrix-vpn-timing-out-too-quickly). This idle timeout feature is enable only if this attribute is set, otherwise it is disabled. The entered value must be an integer number greater than 300.  Available in provider version R2.17.1+.
	IdleTimeout pulumi.IntPtrInput
	// The image version of the gateway. Use `getAviatrixGatewayImage` data source to programmatically retrieve this value for the desired `softwareVersion`. If set, we will attempt to update the gateway to the specified version if current version is different. If left blank, the gateway upgrades can be managed with the `AviatrixControllerConfig` resource. Type: String. Example: "hvm-cloudx-aws-022021". Available as of provider version R2.20.0.
	ImageVersion pulumi.StringPtrInput
	// Enable [Insane Mode](https://docs.aviatrix.com/HowTos/insane_mode.html) for Gateway. Insane Mode gateway size must be at least c5 series (AWS) or Standard_D3_v2 (Azure/AzureGov). If enabled, a valid /26 CIDR segment of the VPC must be specified to create a new subnet. Only supported for AWS, AWSGov, Azure, AzureGov, AWS China, Azure China, AWS Top Secret or AWS Secret.  Valid values: true, false.
	InsaneMode pulumi.BoolPtrInput
	// Region + Availability Zone of subnet being created for Insane Mode gateway. Required for AWS, AWSGov, AWS China, AWS Top Secret or AWS Secret if `insaneMode` is set. Example: AWS: "us-west-1a".
	InsaneModeAz pulumi.StringPtrInput
	// LDAP base DN. Required if `enableLdap` is true.
	LdapBaseDn pulumi.StringPtrInput
	// LDAP bind DN. Required if `enableLdap` is true.
	LdapBindDn pulumi.StringPtrInput
	// LDAP password. Required if `enableLdap` is true.
	LdapPassword pulumi.StringPtrInput
	// LDAP server address. Required if `enableLdap` is true.
	LdapServer pulumi.StringPtrInput
	// LDAP user attribute. Required if `enableLdap` is true.
	LdapUsernameAttribute pulumi.StringPtrInput
	// Maximum number of active VPN users allowed to be connected to this gateway. Required if `vpnAccess` is true. Make sure the number is smaller than the VPN CIDR block. Example: 100. **NOTE: Please see notes here in regards to any deltas found in your state with the addition of this argument in R1.14.**
	MaxVpnConn pulumi.StringPtrInput
	// Set of monitored instance ids. Only valid when 'enable_monitor_gateway_subnets' = true. Available in provider version R2.17.1+.
	MonitorExcludeLists pulumi.StringArrayInput
	// A list of DNS servers used to resolve domain names by a connected VPN user when Split Tunnel Mode is enabled.
	NameServers pulumi.StringPtrInput
	// Token for Okta auth mode. Required if `otpMode` is "3".
	OktaToken pulumi.StringPtrInput
	// URL for Okta auth mode. Required if `otpMode` is "3".
	OktaUrl pulumi.StringPtrInput
	// Username suffix for Okta auth mode. Example: "aviatrix.com".
	OktaUsernameSuffix pulumi.StringPtrInput
	// Two step authentication mode. Valid values: "2" for DUO, "3" for Okta.
	OtpMode pulumi.StringPtrInput
	// Peering HA gateway availability domain. Required and valid only for OCI. Available as of provider version R2.19.3.
	PeeringHaAvailabilityDomain pulumi.StringPtrInput
	// Name of public IP address resource and its resource group in Azure to be assigned to the HA peering instance. Example: "IP_Name:Resource_Group_Name". Required if `peeringHaEip` is set and `cloudType` is Azure, AzureGov or AzureChina. Available as of provider version 2.20+.
	PeeringHaAzureEipNameResourceGroup pulumi.StringPtrInput
	// Public IP address to be assigned to the HA peering instance. Only available for AWS, GCP, Azure, OCI, AzureGov, AWSGov, AWSChina, AzureChina, AWS Top Secret and AWS Secret.
	PeeringHaEip pulumi.StringPtrInput
	// Peering HA gateway fault domain. Required and valid only for OCI. Available as of provider version R2.19.3.
	PeeringHaFaultDomain pulumi.StringPtrInput
	// Size of the Peering HA Gateway to be created. Required if enabling Peering HA. **NOTE: Please see notes here in regards to any deltas found in your state with the addition of this argument in R1.8.**
	PeeringHaGwSize pulumi.StringPtrInput
	// The image version of the HA gateway. Use `getAviatrixGatewayImage` data source to programmatically retrieve this value for the desired `haSoftwareVersion`. If set, we will attempt to update the HA gateway to the specified version if current version is different. If left blank, the gateway upgrades can be managed with the `AviatrixControllerConfig` resource. Type: String. Example: "hvm-cloudx-aws-022021". Available as of provider version R2.20.0.
	PeeringHaImageVersion pulumi.StringPtrInput
	// Region + Availability Zone of subnet being created for Insane Mode-enabled Peering HA Gateway. Required for AWS only if `insaneMode` is set and `peeringHaSubnet` is set. Example: AWS: "us-west-1a".
	PeeringHaInsaneModeAz pulumi.StringPtrInput
	// The software version of the HA gateway. If set, we will attempt to update the HA gateway to the specified version if current version is different. If left blank, the HA gateway upgrade can be managed with the `AviatrixControllerConfig` resource. Type: String. Example: "6.5.821". Available as of provider version R2.20.0.
	PeeringHaSoftwareVersion pulumi.StringPtrInput
	// Public subnet CIDR to create Peering HA Gateway in. Required if enabling Peering HA for AWS/AWSGov/AWS Top Secret/AWS Secret/Azure/AzureGov/Alibaba Cloud. Optional if enabling Peering HA for GCP. Example: AWS: "10.0.0.0/16".
	PeeringHaSubnet pulumi.StringPtrInput
	// Zone to create Peering HA Gateway in. Required if enabling Peering HA for GCP. Example: GCP: "us-west1-c". Optional for Azure. Valid values for Azure gateways are in the form "az-n". Example: "az-2". Available for Azure as of provider version R2.17+.
	PeeringHaZone pulumi.StringPtrInput
	// Whether to enforce Guard Duty IP blocking.  Only valid when `enablePublicSubnetFiltering` attribute is true. Valid values: true or false. Default value: true. Available as of provider version R2.18+.
	PublicSubnetFilteringGuardDutyEnforced pulumi.BoolPtrInput
	// Route tables whose associated public subnets are protected for the HA PSF gateway. Required when `enablePublicSubnetFiltering` and `peeringHaSubnet` are set. Available as of provider version R2.18+.
	PublicSubnetFilteringHaRouteTables pulumi.StringArrayInput
	// Route tables whose associated public subnets are protected. Only valid when `enablePublicSubnetFiltering` attribute is true. Available as of provider version R2.18+.
	PublicSubnetFilteringRouteTables pulumi.StringArrayInput
	// It sets the value (seconds) of the [renegotiation interval](https://docs.aviatrix.com/HowTos/openvpn_faq.html#how-do-i-fix-the-aviatrix-vpn-timing-out-too-quickly). This renegotiation interval feature is enable only if this attribute is set, otherwise it is disabled. The entered value must be an integer number greater than 300. Available in provider version R2.17.1+.
	RenegotiationInterval pulumi.IntPtrInput
	// Gateway ethernet interface RX queue size. Once set, can't be deleted or disabled. Available for AWS as of provider version R2.22+.
	RxQueueSize pulumi.StringPtrInput
	// Enable/disable SAML. This field is available in Controller version 3.3 or later release. Valid values: true, false. Default value: false.
	SamlEnabled pulumi.BoolPtrInput
	// A list of domain names that will use the NameServer when a specific name is not in the destination when Split Tunnel Mode is enabled.
	SearchDomains pulumi.StringPtrInput
	// If enabled, Controller monitors the health of the gateway and restarts the gateway if it becomes unreachable. Valid values: true, false. Default value: false.
	SingleAzHa pulumi.BoolPtrInput
	// Enable Source NAT in "single ip" mode for this gateway. Valid values: true, false. Default value: false. **NOTE: If using SNAT for FQDN use-case, please see notes here.**
	SingleIpSnat pulumi.BoolPtrInput
	// The software version of the gateway. If set, we will attempt to update the gateway to the specified version if current version is different. If left blank, the gateway upgrade can be managed with the `AviatrixControllerConfig` resource. Type: String. Example: "6.5.821". Available as of provider version R2.20.0.
	SoftwareVersion pulumi.StringPtrInput
	// Enable/disable Split Tunnel Mode. Valid values: true, false. Default value: true. Please see [here](https://docs.aviatrix.com/HowTos/gateway.html#split-tunnel-mode) for more information on split tunnel.
	SplitTunnel pulumi.BoolPtrInput
	// Price for spot instance. NOT supported for production deployment.
	SpotPrice pulumi.StringPtrInput
	// A VPC network address range selected from one of the available network ranges. Example: "172.31.0.0/20". **NOTE: If using `insaneMode`, please see notes here.**
	Subnet pulumi.StringInput
	// (Optional) Tag list of the gateway instance. Only available for AWS, AWSGov, AWSChina, Azure, AzureGov and AzureChina gateways. Example: ["key1:value1", "key2:value2"].
	// * `storageName` (Optional) Specify a storage account. Required if `cloudType` is 2048 (AzureChina). Removed in Provider version 2.21.0+.
	//
	// Deprecated: Use tags instead.
	TagLists pulumi.StringArrayInput
	// Map of tags to assign to the gateway. Only available for AWS, AWSGov, AWSChina, Azure, AzureGov, AzureChina, AWS Top Secret and AWS Secret gateways. Allowed characters vary by cloud type but always include: letters, spaces, and numbers. AWS, AWSGov, AWSChina, AWS Top Secret and AWS Secret allow the use of any character.  Azure, AzureGov and AzureChina allows the following special characters: + - = . _ : @. Example: {"key1" = "value1", "key2" = "value2"}.
	Tags pulumi.StringMapInput
	// The IPSec tunnel down detection time for the Gateway.
	TunnelDetectionTime pulumi.IntPtrInput
	// VPC ID/VNet name of cloud provider. Example: AWS/AWSGov/AWSChina: "vpc-abcd1234", GCP: "vpc-gcp-test~-~project-id", Azure/AzureGov/AzureChina: "vnet_name:rg_name:resource_guid", OCI: "ocid1.vcn.oc1.iad.aaaaaaaaba3pv6wkcr4jqae5f44n2b2m2yt2j6rx32uzr4h25vqstifsfdsq".
	VpcId pulumi.StringInput
	// VPC region the gateway will be created in. Example: AWS: "us-east-1", GCP: "us-west2-a", Azure: "East US 2", OCI: "us-ashburn-1", AzureGov: "USGov Arizona", AWSGov: "us-gov-west-1", AWSChina: "cn-north-1", AzureChina: "China North", AWS Top Secret: "us-iso-east-1", AWS Secret: "us-isob-east-1".
	VpcReg pulumi.StringInput
	// Enable [user access through VPN](https://docs.aviatrix.com/HowTos/gateway.html#vpn-access) to this gateway. Valid values: true, false.
	VpnAccess pulumi.BoolPtrInput
	// VPN CIDR block for the gateway. Required if `vpnAccess` is true. Example: "192.168.43.0/24".
	VpnCidr pulumi.StringPtrInput
	// Transport mode for VPN connection. All `cloudTypes` support TCP with ELB, and UDP without ELB. AWS(1) additionally supports UDP with ELB. Valid values: "TCP", "UDP". If not specified, "TCP" will be used.
	VpnProtocol pulumi.StringPtrInput
	// Availability Zone. Only available for Azure and Public Subnet Filtering gateway. Available for Azure as of provider version R2.17+.
	Zone pulumi.StringPtrInput
}

func (AviatrixGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*aviatrixGatewayArgs)(nil)).Elem()
}

type AviatrixGatewayInput interface {
	pulumi.Input

	ToAviatrixGatewayOutput() AviatrixGatewayOutput
	ToAviatrixGatewayOutputWithContext(ctx context.Context) AviatrixGatewayOutput
}

func (*AviatrixGateway) ElementType() reflect.Type {
	return reflect.TypeOf((**AviatrixGateway)(nil)).Elem()
}

func (i *AviatrixGateway) ToAviatrixGatewayOutput() AviatrixGatewayOutput {
	return i.ToAviatrixGatewayOutputWithContext(context.Background())
}

func (i *AviatrixGateway) ToAviatrixGatewayOutputWithContext(ctx context.Context) AviatrixGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixGatewayOutput)
}

// AviatrixGatewayArrayInput is an input type that accepts AviatrixGatewayArray and AviatrixGatewayArrayOutput values.
// You can construct a concrete instance of `AviatrixGatewayArrayInput` via:
//
//	AviatrixGatewayArray{ AviatrixGatewayArgs{...} }
type AviatrixGatewayArrayInput interface {
	pulumi.Input

	ToAviatrixGatewayArrayOutput() AviatrixGatewayArrayOutput
	ToAviatrixGatewayArrayOutputWithContext(context.Context) AviatrixGatewayArrayOutput
}

type AviatrixGatewayArray []AviatrixGatewayInput

func (AviatrixGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AviatrixGateway)(nil)).Elem()
}

func (i AviatrixGatewayArray) ToAviatrixGatewayArrayOutput() AviatrixGatewayArrayOutput {
	return i.ToAviatrixGatewayArrayOutputWithContext(context.Background())
}

func (i AviatrixGatewayArray) ToAviatrixGatewayArrayOutputWithContext(ctx context.Context) AviatrixGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixGatewayArrayOutput)
}

// AviatrixGatewayMapInput is an input type that accepts AviatrixGatewayMap and AviatrixGatewayMapOutput values.
// You can construct a concrete instance of `AviatrixGatewayMapInput` via:
//
//	AviatrixGatewayMap{ "key": AviatrixGatewayArgs{...} }
type AviatrixGatewayMapInput interface {
	pulumi.Input

	ToAviatrixGatewayMapOutput() AviatrixGatewayMapOutput
	ToAviatrixGatewayMapOutputWithContext(context.Context) AviatrixGatewayMapOutput
}

type AviatrixGatewayMap map[string]AviatrixGatewayInput

func (AviatrixGatewayMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AviatrixGateway)(nil)).Elem()
}

func (i AviatrixGatewayMap) ToAviatrixGatewayMapOutput() AviatrixGatewayMapOutput {
	return i.ToAviatrixGatewayMapOutputWithContext(context.Background())
}

func (i AviatrixGatewayMap) ToAviatrixGatewayMapOutputWithContext(ctx context.Context) AviatrixGatewayMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixGatewayMapOutput)
}

type AviatrixGatewayOutput struct{ *pulumi.OutputState }

func (AviatrixGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AviatrixGateway)(nil)).Elem()
}

func (o AviatrixGatewayOutput) ToAviatrixGatewayOutput() AviatrixGatewayOutput {
	return o
}

func (o AviatrixGatewayOutput) ToAviatrixGatewayOutputWithContext(ctx context.Context) AviatrixGatewayOutput {
	return o
}

// Account name. This account will be used to launch Aviatrix gateway.
func (o AviatrixGatewayOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringOutput { return v.AccountName }).(pulumi.StringOutput)
}

// A list of destination CIDR ranges that will also go through the VPN tunnel when Split Tunnel Mode is enabled.
func (o AviatrixGatewayOutput) AdditionalCidrs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringPtrOutput { return v.AdditionalCidrs }).(pulumi.StringPtrOutput)
}

// A list of CIDR ranges separated by comma to configure when "Designated Gateway" feature is enabled. Example: "10.8.0.0/16,10.9.0.0/16,10.10.0.0/16".
func (o AviatrixGatewayOutput) AdditionalCidrsDesignatedGateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringPtrOutput { return v.AdditionalCidrsDesignatedGateway }).(pulumi.StringPtrOutput)
}

// If set to false, use an available address in Elastic IP pool for this gateway. Otherwise, allocate a new Elastic IP and use it for this gateway. Available in Controller 2.7+. Valid values: true, false. Default: true.
func (o AviatrixGatewayOutput) AllocateNewEip() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.BoolPtrOutput { return v.AllocateNewEip }).(pulumi.BoolPtrOutput)
}

// Availability domain. Required and valid only for OCI. Available as of provider version R2.19.3.
func (o AviatrixGatewayOutput) AvailabilityDomain() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringOutput { return v.AvailabilityDomain }).(pulumi.StringOutput)
}

// Name of public IP Address resource and its resource group in Azure to be assigned to the gateway instance. Example: "IP_Name:Resource_Group_Name". Required when `allocateNewEip` is false and `cloudType` is Azure, AzureGov or AzureChina. Available as of provider version 2.20+.
func (o AviatrixGatewayOutput) AzureEipNameResourceGroup() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringOutput { return v.AzureEipNameResourceGroup }).(pulumi.StringOutput)
}

// Cloud instance ID of the gateway.
func (o AviatrixGatewayOutput) CloudInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringOutput { return v.CloudInstanceId }).(pulumi.StringOutput)
}

// Cloud service provider to use to launch the gateway. Requires an integer value. Currently supports AWS(1), GCP(4), Azure(8), OCI(16), AzureGov(32), AWSGov(256), AWSChina(1024), AzureChina(2048), Alibaba Cloud (8192), AWS Top Secret (16384) and AWS Secret (32768).
func (o AviatrixGatewayOutput) CloudType() pulumi.IntOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.IntOutput { return v.CloudType }).(pulumi.IntOutput)
}

// Customer-managed key ID.
func (o AviatrixGatewayOutput) CustomerManagedKeys() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringPtrOutput { return v.CustomerManagedKeys }).(pulumi.StringPtrOutput)
}

// API hostname for DUO auth mode. Required: Yes if `otpMode` is "2".
func (o AviatrixGatewayOutput) DuoApiHostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringPtrOutput { return v.DuoApiHostname }).(pulumi.StringPtrOutput)
}

// Integration key for DUO auth mode. Required if `otpMode` is "2".
func (o AviatrixGatewayOutput) DuoIntegrationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringPtrOutput { return v.DuoIntegrationKey }).(pulumi.StringPtrOutput)
}

// Push mode for DUO auth. Required if `otpMode` is "2". Valid values: "auto", "selective" and "token".
func (o AviatrixGatewayOutput) DuoPushMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringPtrOutput { return v.DuoPushMode }).(pulumi.StringPtrOutput)
}

// Secret key for DUO auth mode. Required if `otpMode` is "2".
func (o AviatrixGatewayOutput) DuoSecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringPtrOutput { return v.DuoSecretKey }).(pulumi.StringPtrOutput)
}

// Specified EIP to use for gateway creation. Required when `allocateNewEip` is false.  Available in Controller version 3.5+. Only available for AWS, GCP, Azure, OCI, AzureGov, AWSGov, AWSChina, AzureChina, AWS Top Secret and AWS Secret.
func (o AviatrixGatewayOutput) Eip() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringOutput { return v.Eip }).(pulumi.StringOutput)
}

// ELB DNS name.
func (o AviatrixGatewayOutput) ElbDnsName() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringOutput { return v.ElbDnsName }).(pulumi.StringOutput)
}

// A name for the ELB that is created. If it is not specified, a name is generated automatically.
func (o AviatrixGatewayOutput) ElbName() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringOutput { return v.ElbName }).(pulumi.StringOutput)
}

// Enable Designated Gateway feature for Gateway. Only supported for AWS, AWSGov, AWSChina, AWS Top Secret and AWS Secret gateways. Valid values: true, false. Default value: false. Please view documentation [here](https://docs.aviatrix.com/HowTos/gateway.html#designated-gateway) for more information on this feature.
func (o AviatrixGatewayOutput) EnableDesignatedGateway() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.BoolPtrOutput { return v.EnableDesignatedGateway }).(pulumi.BoolPtrOutput)
}

// Specify whether to enable ELB or not. Not supported for OCI gateways. Valid values: true, false.
func (o AviatrixGatewayOutput) EnableElb() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.BoolPtrOutput { return v.EnableElb }).(pulumi.BoolPtrOutput)
}

// Enable EBS volume encryption for the gateway. Only supported for AWS, AWSGov, AWSChina, AWS Top Secret and AWS Secret gateways. Valid values: true, false. Default value: false.
func (o AviatrixGatewayOutput) EnableEncryptVolume() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.BoolPtrOutput { return v.EnableEncryptVolume }).(pulumi.BoolPtrOutput)
}

// Enable jumbo frames for this gateway. Default value is true.
func (o AviatrixGatewayOutput) EnableJumboFrame() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.BoolPtrOutput { return v.EnableJumboFrame }).(pulumi.BoolPtrOutput)
}

// Enable/disable LDAP. Valid values: true, false. Default value: false.
func (o AviatrixGatewayOutput) EnableLdap() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.BoolPtrOutput { return v.EnableLdap }).(pulumi.BoolPtrOutput)
}

// If set to true, the [Monitor Gateway Subnets](https://docs.aviatrix.com/HowTos/gateway.html#monitor-gateway-subnet) feature is enabled. Default value is false. Available in provider version R2.17.1+.
func (o AviatrixGatewayOutput) EnableMonitorGatewaySubnets() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.BoolPtrOutput { return v.EnableMonitorGatewaySubnets }).(pulumi.BoolPtrOutput)
}

// Create a [Public Subnet Filtering gateway](https://docs.aviatrix.com/HowTos/public_subnet_filtering_faq.html).
func (o AviatrixGatewayOutput) EnablePublicSubnetFiltering() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.BoolPtrOutput { return v.EnablePublicSubnetFiltering }).(pulumi.BoolPtrOutput)
}

// Enable spot instance. NOT supported for production deployment.
func (o AviatrixGatewayOutput) EnableSpotInstance() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.BoolPtrOutput { return v.EnableSpotInstance }).(pulumi.BoolPtrOutput)
}

// Enable VPC DNS Server for gateway. Currently only supported for AWS, Azure, AzureGov, AWSGov, AWSChina, AzureChina, Alibaba Cloud, AWS Top Secret and AWS Secret gateways. Valid values: true, false. Default value: false.
func (o AviatrixGatewayOutput) EnableVpcDnsServer() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.BoolPtrOutput { return v.EnableVpcDnsServer }).(pulumi.BoolPtrOutput)
}

// Enable/disable VPN NAT. Only supported for VPN gateway. Valid values: true, false. Default value: true.
func (o AviatrixGatewayOutput) EnableVpnNat() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.BoolPtrOutput { return v.EnableVpnNat }).(pulumi.BoolPtrOutput)
}

// Fault domain. Required and valid only for OCI. Available as of provider version R2.19.3.
func (o AviatrixGatewayOutput) FaultDomain() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringOutput { return v.FaultDomain }).(pulumi.StringOutput)
}

// If `fqdnLanCidr` is set, the FQDN gateway will be created with an additional LAN interface using the provided CIDR. This attribute is required when enabling FQDN gateway FireNet in Azure or GCP. Available in provider version R2.17.1+.
func (o AviatrixGatewayOutput) FqdnLanCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringPtrOutput { return v.FqdnLanCidr }).(pulumi.StringPtrOutput)
}

// The lan interface id of the of FQDN gateway with additional LAN interface. This attribute will be exported when enabling FQDN gateway firenet in Azure. Available in provider version R2.17.1+.
func (o AviatrixGatewayOutput) FqdnLanInterface() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringOutput { return v.FqdnLanInterface }).(pulumi.StringOutput)
}

// FQDN LAN VPC ID. This attribute is required when enabling FQDN gateway FireNet in GCP. Available as of provider version R2.18.1+.
func (o AviatrixGatewayOutput) FqdnLanVpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringPtrOutput { return v.FqdnLanVpcId }).(pulumi.StringPtrOutput)
}

// Name of the Aviatrix gateway to be created.
func (o AviatrixGatewayOutput) GwName() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringOutput { return v.GwName }).(pulumi.StringOutput)
}

// Size of the gateway instance. Example: AWS/AWSGov/AWSChina: "t2.large", GCP: "n1-standard-1", Azure/AzureGov/AzureChina: "Standard_B1s", OCI: "VM.Standard2.2".
func (o AviatrixGatewayOutput) GwSize() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringOutput { return v.GwSize }).(pulumi.StringOutput)
}

// It sets the value (seconds) of the [idle timeout](https://docs.aviatrix.com/HowTos/openvpn_faq.html#how-do-i-fix-the-aviatrix-vpn-timing-out-too-quickly). This idle timeout feature is enable only if this attribute is set, otherwise it is disabled. The entered value must be an integer number greater than 300.  Available in provider version R2.17.1+.
func (o AviatrixGatewayOutput) IdleTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.IntPtrOutput { return v.IdleTimeout }).(pulumi.IntPtrOutput)
}

// The image version of the gateway. Use `getAviatrixGatewayImage` data source to programmatically retrieve this value for the desired `softwareVersion`. If set, we will attempt to update the gateway to the specified version if current version is different. If left blank, the gateway upgrades can be managed with the `AviatrixControllerConfig` resource. Type: String. Example: "hvm-cloudx-aws-022021". Available as of provider version R2.20.0.
func (o AviatrixGatewayOutput) ImageVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringOutput { return v.ImageVersion }).(pulumi.StringOutput)
}

// Enable [Insane Mode](https://docs.aviatrix.com/HowTos/insane_mode.html) for Gateway. Insane Mode gateway size must be at least c5 series (AWS) or Standard_D3_v2 (Azure/AzureGov). If enabled, a valid /26 CIDR segment of the VPC must be specified to create a new subnet. Only supported for AWS, AWSGov, Azure, AzureGov, AWS China, Azure China, AWS Top Secret or AWS Secret.  Valid values: true, false.
func (o AviatrixGatewayOutput) InsaneMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.BoolPtrOutput { return v.InsaneMode }).(pulumi.BoolPtrOutput)
}

// Region + Availability Zone of subnet being created for Insane Mode gateway. Required for AWS, AWSGov, AWS China, AWS Top Secret or AWS Secret if `insaneMode` is set. Example: AWS: "us-west-1a".
func (o AviatrixGatewayOutput) InsaneModeAz() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringPtrOutput { return v.InsaneModeAz }).(pulumi.StringPtrOutput)
}

// LDAP base DN. Required if `enableLdap` is true.
func (o AviatrixGatewayOutput) LdapBaseDn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringPtrOutput { return v.LdapBaseDn }).(pulumi.StringPtrOutput)
}

// LDAP bind DN. Required if `enableLdap` is true.
func (o AviatrixGatewayOutput) LdapBindDn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringPtrOutput { return v.LdapBindDn }).(pulumi.StringPtrOutput)
}

// LDAP password. Required if `enableLdap` is true.
func (o AviatrixGatewayOutput) LdapPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringPtrOutput { return v.LdapPassword }).(pulumi.StringPtrOutput)
}

// LDAP server address. Required if `enableLdap` is true.
func (o AviatrixGatewayOutput) LdapServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringPtrOutput { return v.LdapServer }).(pulumi.StringPtrOutput)
}

// LDAP user attribute. Required if `enableLdap` is true.
func (o AviatrixGatewayOutput) LdapUsernameAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringPtrOutput { return v.LdapUsernameAttribute }).(pulumi.StringPtrOutput)
}

// Maximum number of active VPN users allowed to be connected to this gateway. Required if `vpnAccess` is true. Make sure the number is smaller than the VPN CIDR block. Example: 100. **NOTE: Please see notes here in regards to any deltas found in your state with the addition of this argument in R1.14.**
func (o AviatrixGatewayOutput) MaxVpnConn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringPtrOutput { return v.MaxVpnConn }).(pulumi.StringPtrOutput)
}

// Set of monitored instance ids. Only valid when 'enable_monitor_gateway_subnets' = true. Available in provider version R2.17.1+.
func (o AviatrixGatewayOutput) MonitorExcludeLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringArrayOutput { return v.MonitorExcludeLists }).(pulumi.StringArrayOutput)
}

// A list of DNS servers used to resolve domain names by a connected VPN user when Split Tunnel Mode is enabled.
func (o AviatrixGatewayOutput) NameServers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringPtrOutput { return v.NameServers }).(pulumi.StringPtrOutput)
}

// Token for Okta auth mode. Required if `otpMode` is "3".
func (o AviatrixGatewayOutput) OktaToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringPtrOutput { return v.OktaToken }).(pulumi.StringPtrOutput)
}

// URL for Okta auth mode. Required if `otpMode` is "3".
func (o AviatrixGatewayOutput) OktaUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringPtrOutput { return v.OktaUrl }).(pulumi.StringPtrOutput)
}

// Username suffix for Okta auth mode. Example: "aviatrix.com".
func (o AviatrixGatewayOutput) OktaUsernameSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringPtrOutput { return v.OktaUsernameSuffix }).(pulumi.StringPtrOutput)
}

// Two step authentication mode. Valid values: "2" for DUO, "3" for Okta.
func (o AviatrixGatewayOutput) OtpMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringPtrOutput { return v.OtpMode }).(pulumi.StringPtrOutput)
}

// Peering HA gateway availability domain. Required and valid only for OCI. Available as of provider version R2.19.3.
func (o AviatrixGatewayOutput) PeeringHaAvailabilityDomain() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringOutput { return v.PeeringHaAvailabilityDomain }).(pulumi.StringOutput)
}

// Name of public IP address resource and its resource group in Azure to be assigned to the HA peering instance. Example: "IP_Name:Resource_Group_Name". Required if `peeringHaEip` is set and `cloudType` is Azure, AzureGov or AzureChina. Available as of provider version 2.20+.
func (o AviatrixGatewayOutput) PeeringHaAzureEipNameResourceGroup() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringOutput { return v.PeeringHaAzureEipNameResourceGroup }).(pulumi.StringOutput)
}

// Cloud instance ID of the HA gateway.
func (o AviatrixGatewayOutput) PeeringHaCloudInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringOutput { return v.PeeringHaCloudInstanceId }).(pulumi.StringOutput)
}

// Public IP address to be assigned to the HA peering instance. Only available for AWS, GCP, Azure, OCI, AzureGov, AWSGov, AWSChina, AzureChina, AWS Top Secret and AWS Secret.
func (o AviatrixGatewayOutput) PeeringHaEip() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringOutput { return v.PeeringHaEip }).(pulumi.StringOutput)
}

// Peering HA gateway fault domain. Required and valid only for OCI. Available as of provider version R2.19.3.
func (o AviatrixGatewayOutput) PeeringHaFaultDomain() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringOutput { return v.PeeringHaFaultDomain }).(pulumi.StringOutput)
}

// Aviatrix gateway unique name of HA gateway.
func (o AviatrixGatewayOutput) PeeringHaGwName() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringOutput { return v.PeeringHaGwName }).(pulumi.StringOutput)
}

// Size of the Peering HA Gateway to be created. Required if enabling Peering HA. **NOTE: Please see notes here in regards to any deltas found in your state with the addition of this argument in R1.8.**
func (o AviatrixGatewayOutput) PeeringHaGwSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringPtrOutput { return v.PeeringHaGwSize }).(pulumi.StringPtrOutput)
}

// The image version of the HA gateway. Use `getAviatrixGatewayImage` data source to programmatically retrieve this value for the desired `haSoftwareVersion`. If set, we will attempt to update the HA gateway to the specified version if current version is different. If left blank, the gateway upgrades can be managed with the `AviatrixControllerConfig` resource. Type: String. Example: "hvm-cloudx-aws-022021". Available as of provider version R2.20.0.
func (o AviatrixGatewayOutput) PeeringHaImageVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringOutput { return v.PeeringHaImageVersion }).(pulumi.StringOutput)
}

// Region + Availability Zone of subnet being created for Insane Mode-enabled Peering HA Gateway. Required for AWS only if `insaneMode` is set and `peeringHaSubnet` is set. Example: AWS: "us-west-1a".
func (o AviatrixGatewayOutput) PeeringHaInsaneModeAz() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringPtrOutput { return v.PeeringHaInsaneModeAz }).(pulumi.StringPtrOutput)
}

// Private IP address of HA gateway.
func (o AviatrixGatewayOutput) PeeringHaPrivateIp() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringOutput { return v.PeeringHaPrivateIp }).(pulumi.StringOutput)
}

// HA security group used for the gateway.
func (o AviatrixGatewayOutput) PeeringHaSecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringOutput { return v.PeeringHaSecurityGroupId }).(pulumi.StringOutput)
}

// The software version of the HA gateway. If set, we will attempt to update the HA gateway to the specified version if current version is different. If left blank, the HA gateway upgrade can be managed with the `AviatrixControllerConfig` resource. Type: String. Example: "6.5.821". Available as of provider version R2.20.0.
func (o AviatrixGatewayOutput) PeeringHaSoftwareVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringOutput { return v.PeeringHaSoftwareVersion }).(pulumi.StringOutput)
}

// Public subnet CIDR to create Peering HA Gateway in. Required if enabling Peering HA for AWS/AWSGov/AWS Top Secret/AWS Secret/Azure/AzureGov/Alibaba Cloud. Optional if enabling Peering HA for GCP. Example: AWS: "10.0.0.0/16".
func (o AviatrixGatewayOutput) PeeringHaSubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringPtrOutput { return v.PeeringHaSubnet }).(pulumi.StringPtrOutput)
}

// Zone to create Peering HA Gateway in. Required if enabling Peering HA for GCP. Example: GCP: "us-west1-c". Optional for Azure. Valid values for Azure gateways are in the form "az-n". Example: "az-2". Available for Azure as of provider version R2.17+.
func (o AviatrixGatewayOutput) PeeringHaZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringPtrOutput { return v.PeeringHaZone }).(pulumi.StringPtrOutput)
}

// Private IP address of the gateway created.
func (o AviatrixGatewayOutput) PrivateIp() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringOutput { return v.PrivateIp }).(pulumi.StringOutput)
}

// DNS server used by the gateway. Default is "8.8.8.8", can be overridden with the VPC's setting.
func (o AviatrixGatewayOutput) PublicDnsServer() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringOutput { return v.PublicDnsServer }).(pulumi.StringOutput)
}

// Whether to enforce Guard Duty IP blocking.  Only valid when `enablePublicSubnetFiltering` attribute is true. Valid values: true or false. Default value: true. Available as of provider version R2.18+.
func (o AviatrixGatewayOutput) PublicSubnetFilteringGuardDutyEnforced() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.BoolPtrOutput { return v.PublicSubnetFilteringGuardDutyEnforced }).(pulumi.BoolPtrOutput)
}

// Route tables whose associated public subnets are protected for the HA PSF gateway. Required when `enablePublicSubnetFiltering` and `peeringHaSubnet` are set. Available as of provider version R2.18+.
func (o AviatrixGatewayOutput) PublicSubnetFilteringHaRouteTables() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringArrayOutput { return v.PublicSubnetFilteringHaRouteTables }).(pulumi.StringArrayOutput)
}

// Route tables whose associated public subnets are protected. Only valid when `enablePublicSubnetFiltering` attribute is true. Available as of provider version R2.18+.
func (o AviatrixGatewayOutput) PublicSubnetFilteringRouteTables() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringArrayOutput { return v.PublicSubnetFilteringRouteTables }).(pulumi.StringArrayOutput)
}

// It sets the value (seconds) of the [renegotiation interval](https://docs.aviatrix.com/HowTos/openvpn_faq.html#how-do-i-fix-the-aviatrix-vpn-timing-out-too-quickly). This renegotiation interval feature is enable only if this attribute is set, otherwise it is disabled. The entered value must be an integer number greater than 300. Available in provider version R2.17.1+.
func (o AviatrixGatewayOutput) RenegotiationInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.IntPtrOutput { return v.RenegotiationInterval }).(pulumi.IntPtrOutput)
}

// Gateway ethernet interface RX queue size. Once set, can't be deleted or disabled. Available for AWS as of provider version R2.22+.
func (o AviatrixGatewayOutput) RxQueueSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringPtrOutput { return v.RxQueueSize }).(pulumi.StringPtrOutput)
}

// Enable/disable SAML. This field is available in Controller version 3.3 or later release. Valid values: true, false. Default value: false.
func (o AviatrixGatewayOutput) SamlEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.BoolPtrOutput { return v.SamlEnabled }).(pulumi.BoolPtrOutput)
}

// A list of domain names that will use the NameServer when a specific name is not in the destination when Split Tunnel Mode is enabled.
func (o AviatrixGatewayOutput) SearchDomains() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringPtrOutput { return v.SearchDomains }).(pulumi.StringPtrOutput)
}

// Security group used for the gateway.
func (o AviatrixGatewayOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringOutput { return v.SecurityGroupId }).(pulumi.StringOutput)
}

// If enabled, Controller monitors the health of the gateway and restarts the gateway if it becomes unreachable. Valid values: true, false. Default value: false.
func (o AviatrixGatewayOutput) SingleAzHa() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.BoolPtrOutput { return v.SingleAzHa }).(pulumi.BoolPtrOutput)
}

// Enable Source NAT in "single ip" mode for this gateway. Valid values: true, false. Default value: false. **NOTE: If using SNAT for FQDN use-case, please see notes here.**
func (o AviatrixGatewayOutput) SingleIpSnat() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.BoolPtrOutput { return v.SingleIpSnat }).(pulumi.BoolPtrOutput)
}

// The software version of the gateway. If set, we will attempt to update the gateway to the specified version if current version is different. If left blank, the gateway upgrade can be managed with the `AviatrixControllerConfig` resource. Type: String. Example: "6.5.821". Available as of provider version R2.20.0.
func (o AviatrixGatewayOutput) SoftwareVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringOutput { return v.SoftwareVersion }).(pulumi.StringOutput)
}

// Enable/disable Split Tunnel Mode. Valid values: true, false. Default value: true. Please see [here](https://docs.aviatrix.com/HowTos/gateway.html#split-tunnel-mode) for more information on split tunnel.
func (o AviatrixGatewayOutput) SplitTunnel() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.BoolPtrOutput { return v.SplitTunnel }).(pulumi.BoolPtrOutput)
}

// Price for spot instance. NOT supported for production deployment.
func (o AviatrixGatewayOutput) SpotPrice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringPtrOutput { return v.SpotPrice }).(pulumi.StringPtrOutput)
}

// A VPC network address range selected from one of the available network ranges. Example: "172.31.0.0/20". **NOTE: If using `insaneMode`, please see notes here.**
func (o AviatrixGatewayOutput) Subnet() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringOutput { return v.Subnet }).(pulumi.StringOutput)
}

// (Optional) Tag list of the gateway instance. Only available for AWS, AWSGov, AWSChina, Azure, AzureGov and AzureChina gateways. Example: ["key1:value1", "key2:value2"].
// * `storageName` (Optional) Specify a storage account. Required if `cloudType` is 2048 (AzureChina). Removed in Provider version 2.21.0+.
//
// Deprecated: Use tags instead.
func (o AviatrixGatewayOutput) TagLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringArrayOutput { return v.TagLists }).(pulumi.StringArrayOutput)
}

// Map of tags to assign to the gateway. Only available for AWS, AWSGov, AWSChina, Azure, AzureGov, AzureChina, AWS Top Secret and AWS Secret gateways. Allowed characters vary by cloud type but always include: letters, spaces, and numbers. AWS, AWSGov, AWSChina, AWS Top Secret and AWS Secret allow the use of any character.  Azure, AzureGov and AzureChina allows the following special characters: + - = . _ : @. Example: {"key1" = "value1", "key2" = "value2"}.
func (o AviatrixGatewayOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The IPSec tunnel down detection time for the Gateway.
func (o AviatrixGatewayOutput) TunnelDetectionTime() pulumi.IntOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.IntOutput { return v.TunnelDetectionTime }).(pulumi.IntOutput)
}

// VPC ID/VNet name of cloud provider. Example: AWS/AWSGov/AWSChina: "vpc-abcd1234", GCP: "vpc-gcp-test~-~project-id", Azure/AzureGov/AzureChina: "vnet_name:rg_name:resource_guid", OCI: "ocid1.vcn.oc1.iad.aaaaaaaaba3pv6wkcr4jqae5f44n2b2m2yt2j6rx32uzr4h25vqstifsfdsq".
func (o AviatrixGatewayOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

// VPC region the gateway will be created in. Example: AWS: "us-east-1", GCP: "us-west2-a", Azure: "East US 2", OCI: "us-ashburn-1", AzureGov: "USGov Arizona", AWSGov: "us-gov-west-1", AWSChina: "cn-north-1", AzureChina: "China North", AWS Top Secret: "us-iso-east-1", AWS Secret: "us-isob-east-1".
func (o AviatrixGatewayOutput) VpcReg() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringOutput { return v.VpcReg }).(pulumi.StringOutput)
}

// Enable [user access through VPN](https://docs.aviatrix.com/HowTos/gateway.html#vpn-access) to this gateway. Valid values: true, false.
func (o AviatrixGatewayOutput) VpnAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.BoolPtrOutput { return v.VpnAccess }).(pulumi.BoolPtrOutput)
}

// VPN CIDR block for the gateway. Required if `vpnAccess` is true. Example: "192.168.43.0/24".
func (o AviatrixGatewayOutput) VpnCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringPtrOutput { return v.VpnCidr }).(pulumi.StringPtrOutput)
}

// Transport mode for VPN connection. All `cloudTypes` support TCP with ELB, and UDP without ELB. AWS(1) additionally supports UDP with ELB. Valid values: "TCP", "UDP". If not specified, "TCP" will be used.
func (o AviatrixGatewayOutput) VpnProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringOutput { return v.VpnProtocol }).(pulumi.StringOutput)
}

// Availability Zone. Only available for Azure and Public Subnet Filtering gateway. Available for Azure as of provider version R2.17+.
func (o AviatrixGatewayOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixGateway) pulumi.StringPtrOutput { return v.Zone }).(pulumi.StringPtrOutput)
}

type AviatrixGatewayArrayOutput struct{ *pulumi.OutputState }

func (AviatrixGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AviatrixGateway)(nil)).Elem()
}

func (o AviatrixGatewayArrayOutput) ToAviatrixGatewayArrayOutput() AviatrixGatewayArrayOutput {
	return o
}

func (o AviatrixGatewayArrayOutput) ToAviatrixGatewayArrayOutputWithContext(ctx context.Context) AviatrixGatewayArrayOutput {
	return o
}

func (o AviatrixGatewayArrayOutput) Index(i pulumi.IntInput) AviatrixGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AviatrixGateway {
		return vs[0].([]*AviatrixGateway)[vs[1].(int)]
	}).(AviatrixGatewayOutput)
}

type AviatrixGatewayMapOutput struct{ *pulumi.OutputState }

func (AviatrixGatewayMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AviatrixGateway)(nil)).Elem()
}

func (o AviatrixGatewayMapOutput) ToAviatrixGatewayMapOutput() AviatrixGatewayMapOutput {
	return o
}

func (o AviatrixGatewayMapOutput) ToAviatrixGatewayMapOutputWithContext(ctx context.Context) AviatrixGatewayMapOutput {
	return o
}

func (o AviatrixGatewayMapOutput) MapIndex(k pulumi.StringInput) AviatrixGatewayOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AviatrixGateway {
		return vs[0].(map[string]*AviatrixGateway)[vs[1].(string)]
	}).(AviatrixGatewayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixGatewayInput)(nil)).Elem(), &AviatrixGateway{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixGatewayArrayInput)(nil)).Elem(), AviatrixGatewayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixGatewayMapInput)(nil)).Elem(), AviatrixGatewayMap{})
	pulumi.RegisterOutputType(AviatrixGatewayOutput{})
	pulumi.RegisterOutputType(AviatrixGatewayArrayOutput{})
	pulumi.RegisterOutputType(AviatrixGatewayMapOutput{})
}
