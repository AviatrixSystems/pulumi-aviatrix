// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aviatrix

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The **aviatrix_segmentation_network_domain** resource handles creation of [Transit Segmentation](https://docs.aviatrix.com/HowTos/transit_segmentation_faq.html) Network Domains.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/astipkovits/pulumi-aviatrix/sdk/go/aviatrix"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := aviatrix.NewAviatrixSegmentationNetworkDomain(ctx, "testSegmentationNetworkDomain", &aviatrix.AviatrixSegmentationNetworkDomainArgs{
//				DomainName: pulumi.String("domain-a"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// **aviatrix_segmentation_network_domain** can be imported using the `domain_name`, e.g.
//
// ```sh
//
//	$ pulumi import aviatrix:index/aviatrixSegmentationNetworkDomain:AviatrixSegmentationNetworkDomain test domain_name
//
// ```
type AviatrixSegmentationNetworkDomain struct {
	pulumi.CustomResourceState

	// Name of the Network Domain.
	DomainName pulumi.StringOutput `pulumi:"domainName"`
}

// NewAviatrixSegmentationNetworkDomain registers a new resource with the given unique name, arguments, and options.
func NewAviatrixSegmentationNetworkDomain(ctx *pulumi.Context,
	name string, args *AviatrixSegmentationNetworkDomainArgs, opts ...pulumi.ResourceOption) (*AviatrixSegmentationNetworkDomain, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DomainName == nil {
		return nil, errors.New("invalid value for required argument 'DomainName'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource AviatrixSegmentationNetworkDomain
	err := ctx.RegisterResource("aviatrix:index/aviatrixSegmentationNetworkDomain:AviatrixSegmentationNetworkDomain", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAviatrixSegmentationNetworkDomain gets an existing AviatrixSegmentationNetworkDomain resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAviatrixSegmentationNetworkDomain(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AviatrixSegmentationNetworkDomainState, opts ...pulumi.ResourceOption) (*AviatrixSegmentationNetworkDomain, error) {
	var resource AviatrixSegmentationNetworkDomain
	err := ctx.ReadResource("aviatrix:index/aviatrixSegmentationNetworkDomain:AviatrixSegmentationNetworkDomain", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AviatrixSegmentationNetworkDomain resources.
type aviatrixSegmentationNetworkDomainState struct {
	// Name of the Network Domain.
	DomainName *string `pulumi:"domainName"`
}

type AviatrixSegmentationNetworkDomainState struct {
	// Name of the Network Domain.
	DomainName pulumi.StringPtrInput
}

func (AviatrixSegmentationNetworkDomainState) ElementType() reflect.Type {
	return reflect.TypeOf((*aviatrixSegmentationNetworkDomainState)(nil)).Elem()
}

type aviatrixSegmentationNetworkDomainArgs struct {
	// Name of the Network Domain.
	DomainName string `pulumi:"domainName"`
}

// The set of arguments for constructing a AviatrixSegmentationNetworkDomain resource.
type AviatrixSegmentationNetworkDomainArgs struct {
	// Name of the Network Domain.
	DomainName pulumi.StringInput
}

func (AviatrixSegmentationNetworkDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*aviatrixSegmentationNetworkDomainArgs)(nil)).Elem()
}

type AviatrixSegmentationNetworkDomainInput interface {
	pulumi.Input

	ToAviatrixSegmentationNetworkDomainOutput() AviatrixSegmentationNetworkDomainOutput
	ToAviatrixSegmentationNetworkDomainOutputWithContext(ctx context.Context) AviatrixSegmentationNetworkDomainOutput
}

func (*AviatrixSegmentationNetworkDomain) ElementType() reflect.Type {
	return reflect.TypeOf((**AviatrixSegmentationNetworkDomain)(nil)).Elem()
}

func (i *AviatrixSegmentationNetworkDomain) ToAviatrixSegmentationNetworkDomainOutput() AviatrixSegmentationNetworkDomainOutput {
	return i.ToAviatrixSegmentationNetworkDomainOutputWithContext(context.Background())
}

func (i *AviatrixSegmentationNetworkDomain) ToAviatrixSegmentationNetworkDomainOutputWithContext(ctx context.Context) AviatrixSegmentationNetworkDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixSegmentationNetworkDomainOutput)
}

// AviatrixSegmentationNetworkDomainArrayInput is an input type that accepts AviatrixSegmentationNetworkDomainArray and AviatrixSegmentationNetworkDomainArrayOutput values.
// You can construct a concrete instance of `AviatrixSegmentationNetworkDomainArrayInput` via:
//
//	AviatrixSegmentationNetworkDomainArray{ AviatrixSegmentationNetworkDomainArgs{...} }
type AviatrixSegmentationNetworkDomainArrayInput interface {
	pulumi.Input

	ToAviatrixSegmentationNetworkDomainArrayOutput() AviatrixSegmentationNetworkDomainArrayOutput
	ToAviatrixSegmentationNetworkDomainArrayOutputWithContext(context.Context) AviatrixSegmentationNetworkDomainArrayOutput
}

type AviatrixSegmentationNetworkDomainArray []AviatrixSegmentationNetworkDomainInput

func (AviatrixSegmentationNetworkDomainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AviatrixSegmentationNetworkDomain)(nil)).Elem()
}

func (i AviatrixSegmentationNetworkDomainArray) ToAviatrixSegmentationNetworkDomainArrayOutput() AviatrixSegmentationNetworkDomainArrayOutput {
	return i.ToAviatrixSegmentationNetworkDomainArrayOutputWithContext(context.Background())
}

func (i AviatrixSegmentationNetworkDomainArray) ToAviatrixSegmentationNetworkDomainArrayOutputWithContext(ctx context.Context) AviatrixSegmentationNetworkDomainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixSegmentationNetworkDomainArrayOutput)
}

// AviatrixSegmentationNetworkDomainMapInput is an input type that accepts AviatrixSegmentationNetworkDomainMap and AviatrixSegmentationNetworkDomainMapOutput values.
// You can construct a concrete instance of `AviatrixSegmentationNetworkDomainMapInput` via:
//
//	AviatrixSegmentationNetworkDomainMap{ "key": AviatrixSegmentationNetworkDomainArgs{...} }
type AviatrixSegmentationNetworkDomainMapInput interface {
	pulumi.Input

	ToAviatrixSegmentationNetworkDomainMapOutput() AviatrixSegmentationNetworkDomainMapOutput
	ToAviatrixSegmentationNetworkDomainMapOutputWithContext(context.Context) AviatrixSegmentationNetworkDomainMapOutput
}

type AviatrixSegmentationNetworkDomainMap map[string]AviatrixSegmentationNetworkDomainInput

func (AviatrixSegmentationNetworkDomainMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AviatrixSegmentationNetworkDomain)(nil)).Elem()
}

func (i AviatrixSegmentationNetworkDomainMap) ToAviatrixSegmentationNetworkDomainMapOutput() AviatrixSegmentationNetworkDomainMapOutput {
	return i.ToAviatrixSegmentationNetworkDomainMapOutputWithContext(context.Background())
}

func (i AviatrixSegmentationNetworkDomainMap) ToAviatrixSegmentationNetworkDomainMapOutputWithContext(ctx context.Context) AviatrixSegmentationNetworkDomainMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixSegmentationNetworkDomainMapOutput)
}

type AviatrixSegmentationNetworkDomainOutput struct{ *pulumi.OutputState }

func (AviatrixSegmentationNetworkDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AviatrixSegmentationNetworkDomain)(nil)).Elem()
}

func (o AviatrixSegmentationNetworkDomainOutput) ToAviatrixSegmentationNetworkDomainOutput() AviatrixSegmentationNetworkDomainOutput {
	return o
}

func (o AviatrixSegmentationNetworkDomainOutput) ToAviatrixSegmentationNetworkDomainOutputWithContext(ctx context.Context) AviatrixSegmentationNetworkDomainOutput {
	return o
}

// Name of the Network Domain.
func (o AviatrixSegmentationNetworkDomainOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixSegmentationNetworkDomain) pulumi.StringOutput { return v.DomainName }).(pulumi.StringOutput)
}

type AviatrixSegmentationNetworkDomainArrayOutput struct{ *pulumi.OutputState }

func (AviatrixSegmentationNetworkDomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AviatrixSegmentationNetworkDomain)(nil)).Elem()
}

func (o AviatrixSegmentationNetworkDomainArrayOutput) ToAviatrixSegmentationNetworkDomainArrayOutput() AviatrixSegmentationNetworkDomainArrayOutput {
	return o
}

func (o AviatrixSegmentationNetworkDomainArrayOutput) ToAviatrixSegmentationNetworkDomainArrayOutputWithContext(ctx context.Context) AviatrixSegmentationNetworkDomainArrayOutput {
	return o
}

func (o AviatrixSegmentationNetworkDomainArrayOutput) Index(i pulumi.IntInput) AviatrixSegmentationNetworkDomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AviatrixSegmentationNetworkDomain {
		return vs[0].([]*AviatrixSegmentationNetworkDomain)[vs[1].(int)]
	}).(AviatrixSegmentationNetworkDomainOutput)
}

type AviatrixSegmentationNetworkDomainMapOutput struct{ *pulumi.OutputState }

func (AviatrixSegmentationNetworkDomainMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AviatrixSegmentationNetworkDomain)(nil)).Elem()
}

func (o AviatrixSegmentationNetworkDomainMapOutput) ToAviatrixSegmentationNetworkDomainMapOutput() AviatrixSegmentationNetworkDomainMapOutput {
	return o
}

func (o AviatrixSegmentationNetworkDomainMapOutput) ToAviatrixSegmentationNetworkDomainMapOutputWithContext(ctx context.Context) AviatrixSegmentationNetworkDomainMapOutput {
	return o
}

func (o AviatrixSegmentationNetworkDomainMapOutput) MapIndex(k pulumi.StringInput) AviatrixSegmentationNetworkDomainOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AviatrixSegmentationNetworkDomain {
		return vs[0].(map[string]*AviatrixSegmentationNetworkDomain)[vs[1].(string)]
	}).(AviatrixSegmentationNetworkDomainOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixSegmentationNetworkDomainInput)(nil)).Elem(), &AviatrixSegmentationNetworkDomain{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixSegmentationNetworkDomainArrayInput)(nil)).Elem(), AviatrixSegmentationNetworkDomainArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixSegmentationNetworkDomainMapInput)(nil)).Elem(), AviatrixSegmentationNetworkDomainMap{})
	pulumi.RegisterOutputType(AviatrixSegmentationNetworkDomainOutput{})
	pulumi.RegisterOutputType(AviatrixSegmentationNetworkDomainArrayOutput{})
	pulumi.RegisterOutputType(AviatrixSegmentationNetworkDomainMapOutput{})
}
