// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The **aviatrix_firewall_instance** resource allows the creation and management of Aviatrix Firewall Instances.
 *
 * This resource is used in [Aviatrix FireNet](https://docs.aviatrix.com/HowTos/firewall_network_faq.html) and [Aviatrix Transit FireNet](https://docs.aviatrix.com/HowTos/transit_firenet_faq.html) solutions, in conjunction with other resources that may include, and are not limited to: **firenet**, **firewall_instance_association**, **aws_tgw** and **transit_gateway** resources.
 *
 * ## Import
 *
 * **firewall_instance** can be imported using the `instance_id`. For Azure or AzureGov FireNet instances, the value will be the `firewall_name` concatenated with a ":" and the Resource Group of the `vpc_id` set for that instance. e.g.
 *
 * ```sh
 *  $ pulumi import aviatrix:index/aviatrixFirewallInstance:AviatrixFirewallInstance test instance_id
 * ```
 */
export class AviatrixFirewallInstance extends pulumi.CustomResource {
    /**
     * Get an existing AviatrixFirewallInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AviatrixFirewallInstanceState, opts?: pulumi.CustomResourceOptions): AviatrixFirewallInstance {
        return new AviatrixFirewallInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aviatrix:index/aviatrixFirewallInstance:AviatrixFirewallInstance';

    /**
     * Returns true if the given object is an instance of AviatrixFirewallInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AviatrixFirewallInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AviatrixFirewallInstance.__pulumiType;
    }

    /**
     * Availability domain. Required and valid only for OCI. Available as of provider version R2.19.3.
     */
    public readonly availabilityDomain!: pulumi.Output<string>;
    /**
     * Only available for AWS and GCP. For GCP, only Palo Alto Networks VM-Series deployment can use this attribute. In advanced mode, specify a bootstrap bucket name where the initial configuration and policy file is stored.
     */
    public readonly bootstrapBucketName!: pulumi.Output<string | undefined>;
    /**
     * Advanced option. Bootstrap storage name. Applicable to Azure or AzureGov and Palo Alto Networks VM-Series/Fortinet Series deployment only. Available as of provider version R2.17.1+.
     */
    public readonly bootstrapStorageName!: pulumi.Output<string | undefined>;
    /**
     * Cloud Type.
     */
    public /*out*/ readonly cloudType!: pulumi.Output<number>;
    /**
     * Advanced option. Container folder. Applicable to Azure or AzureGov and Fortinet Series deployment only.
     */
    public readonly containerFolder!: pulumi.Output<string | undefined>;
    /**
     * ID of Egress Interface created.
     */
    public /*out*/ readonly egressInterface!: pulumi.Output<string>;
    /**
     * Egress Interface Subnet. Select the subnet whose name contains “FW-ingress-egress”. For GCP, `egressSubnet` must be in the form `cidr~~region~~name`.
     */
    public readonly egressSubnet!: pulumi.Output<string>;
    /**
     * Egress VPC ID. Required for GCP. Available as of provider version R2.18.1+.
     */
    public readonly egressVpcId!: pulumi.Output<string | undefined>;
    /**
     * Fault domain. Required and valid only for OCI. Available as of provider version R2.19.3.
     */
    public readonly faultDomain!: pulumi.Output<string>;
    /**
     * Advanced option. File share folder. Applicable to Azure or AzureGov and Palo Alto Networks VM-Series deployment only. Available as of provider version R2.17.1+.
     */
    public readonly fileShareFolder!: pulumi.Output<string | undefined>;
    /**
     * Name of the primary FireNet gateway. **Required for all FireNet deployments that do not utilize the TGW-Integrated FireNet with AWS Native GWLB VPC.**
     */
    public readonly firenetGwName!: pulumi.Output<string | undefined>;
    /**
     * One of the AWS/Azure/GCP AMIs from various vendors such as Palo Alto Networks.
     */
    public readonly firewallImage!: pulumi.Output<string>;
    /**
     * Firewall image ID. Applicable to AWS and Azure only. For AWS, please use AMI ID. For Azure, the format is “Publisher:Offer:Plan:Version”. Available as of provider version R2.19+.
     */
    public readonly firewallImageId!: pulumi.Output<string>;
    /**
     * Version of firewall image. If not specified, Controller will automatically select the latest version available.
     */
    public readonly firewallImageVersion!: pulumi.Output<string>;
    /**
     * Name of the firewall instance to be created.
     */
    public readonly firewallName!: pulumi.Output<string>;
    /**
     * Instance size of the firewall. Example: "m5.xlarge".
     */
    public readonly firewallSize!: pulumi.Output<string>;
    /**
     * GCP Only. The current VPC ID.
     */
    public /*out*/ readonly gcpVpcId!: pulumi.Output<string>;
    /**
     * Only available for AWS. In advanced mode, create an IAM Role on the AWS account that launched the FireNet gateway. Create a policy to attach to the role. The policy is to allow access to "Bootstrap Bucket".
     */
    public readonly iamRole!: pulumi.Output<string | undefined>;
    /**
     * ID of the firewall instance created.
     */
    public /*out*/ readonly instanceId!: pulumi.Output<string>;
    /**
     * Applicable to AWS deployment only. AWS Key Pair name. If not provided a Key Pair will be generated.
     */
    public readonly keyName!: pulumi.Output<string | undefined>;
    /**
     * ID of Lan Interface created.
     */
    public /*out*/ readonly lanInterface!: pulumi.Output<string>;
    /**
     * ID of Management Interface created.
     */
    public /*out*/ readonly managementInterface!: pulumi.Output<string>;
    /**
     * Management Interface Subnet. Select the subnet whose name contains “gateway and firewall management”. For GCP, `managementSubnet` must be in the form `cidr~~region~~name`. Required for Palo Alto Networks VM-Series and OCI Check Point firewalls. Otherwise, it must be empty.
     */
    public readonly managementSubnet!: pulumi.Output<string | undefined>;
    /**
     * Management VPC ID. Only used for GCP firewall. Required for Palo Alto Networks VM-Series, and required to be empty for Check Point or Fortinet series. Available as of provider version R2.18.1+.
     */
    public readonly managementVpcId!: pulumi.Output<string | undefined>;
    /**
     * Applicable to Azure or AzureGov deployment only.
     */
    public readonly password!: pulumi.Output<string | undefined>;
    /**
     * Management Public IP.
     */
    public /*out*/ readonly publicIp!: pulumi.Output<string>;
    /**
     * Advanced option. SAS URL Config. Applicable to Azure or AzureGov and Fortinet Series deployment only.
     */
    public readonly sasUrlConfig!: pulumi.Output<string | undefined>;
    /**
     * Advanced option. SAS URL License. Applicable to Azure or AzureGov and Fortinet Series deployment only.
     */
    public readonly sasUrlLicense!: pulumi.Output<string | undefined>;
    /**
     * Advanced option. Share directory. Applicable to Azure or AzureGov and Palo Alto Networks VM-Series deployment only. Available as of provider version R2.17.1+.
     */
    public readonly shareDirectory!: pulumi.Output<string | undefined>;
    /**
     * Advanced option. Sic key. Applicable to Check Point Series deployment only.
     */
    public readonly sicKey!: pulumi.Output<string | undefined>;
    /**
     * Applicable to Azure or AzureGov deployment only.
     */
    public readonly sshPublicKey!: pulumi.Output<string | undefined>;
    /**
     * Advanced option. Storage access key. Applicable to Azure or AzureGov and Palo Alto Networks VM-Series deployment only. Available as of provider version R2.17.1+.
     */
    public readonly storageAccessKey!: pulumi.Output<string | undefined>;
    /**
     * Mapping of key value pairs of tags for a firewall instance. Only available for AWS, AWSGov, GCP and Azure firewall instances. For AWS, AWSGov and Azure allowed characters are: letters, spaces, and numbers plus the following special characters: + - = . _ : @. For GCP allowed characters are: lowercase letters, numbers, "-" and "_". Example: {"key1" = "value1", "key2" = "value2"}.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Advanced option. User Data. Applicable to Check Point Series and Fortinet Series deployment only. Type: String.
     */
    public readonly userData!: pulumi.Output<string | undefined>;
    /**
     * Applicable to Azure or AzureGov deployment only. "admin" as a username is not accepted.
     */
    public readonly username!: pulumi.Output<string | undefined>;
    /**
     * VPC ID of the Security VPC. For GCP, `vpcId` must be in the form vpc_id~-~gcloud_project_id.
     */
    public readonly vpcId!: pulumi.Output<string>;
    /**
     * Availability Zone. Required if creating a Firewall Instance with a Native AWS GWLB-enabled VPC. Applicable to AWS, Azure, and GCP only. Available as of provider version R2.17+.
     */
    public readonly zone!: pulumi.Output<string>;

    /**
     * Create a AviatrixFirewallInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AviatrixFirewallInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AviatrixFirewallInstanceArgs | AviatrixFirewallInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AviatrixFirewallInstanceState | undefined;
            resourceInputs["availabilityDomain"] = state ? state.availabilityDomain : undefined;
            resourceInputs["bootstrapBucketName"] = state ? state.bootstrapBucketName : undefined;
            resourceInputs["bootstrapStorageName"] = state ? state.bootstrapStorageName : undefined;
            resourceInputs["cloudType"] = state ? state.cloudType : undefined;
            resourceInputs["containerFolder"] = state ? state.containerFolder : undefined;
            resourceInputs["egressInterface"] = state ? state.egressInterface : undefined;
            resourceInputs["egressSubnet"] = state ? state.egressSubnet : undefined;
            resourceInputs["egressVpcId"] = state ? state.egressVpcId : undefined;
            resourceInputs["faultDomain"] = state ? state.faultDomain : undefined;
            resourceInputs["fileShareFolder"] = state ? state.fileShareFolder : undefined;
            resourceInputs["firenetGwName"] = state ? state.firenetGwName : undefined;
            resourceInputs["firewallImage"] = state ? state.firewallImage : undefined;
            resourceInputs["firewallImageId"] = state ? state.firewallImageId : undefined;
            resourceInputs["firewallImageVersion"] = state ? state.firewallImageVersion : undefined;
            resourceInputs["firewallName"] = state ? state.firewallName : undefined;
            resourceInputs["firewallSize"] = state ? state.firewallSize : undefined;
            resourceInputs["gcpVpcId"] = state ? state.gcpVpcId : undefined;
            resourceInputs["iamRole"] = state ? state.iamRole : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["keyName"] = state ? state.keyName : undefined;
            resourceInputs["lanInterface"] = state ? state.lanInterface : undefined;
            resourceInputs["managementInterface"] = state ? state.managementInterface : undefined;
            resourceInputs["managementSubnet"] = state ? state.managementSubnet : undefined;
            resourceInputs["managementVpcId"] = state ? state.managementVpcId : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["publicIp"] = state ? state.publicIp : undefined;
            resourceInputs["sasUrlConfig"] = state ? state.sasUrlConfig : undefined;
            resourceInputs["sasUrlLicense"] = state ? state.sasUrlLicense : undefined;
            resourceInputs["shareDirectory"] = state ? state.shareDirectory : undefined;
            resourceInputs["sicKey"] = state ? state.sicKey : undefined;
            resourceInputs["sshPublicKey"] = state ? state.sshPublicKey : undefined;
            resourceInputs["storageAccessKey"] = state ? state.storageAccessKey : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["userData"] = state ? state.userData : undefined;
            resourceInputs["username"] = state ? state.username : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
            resourceInputs["zone"] = state ? state.zone : undefined;
        } else {
            const args = argsOrState as AviatrixFirewallInstanceArgs | undefined;
            if ((!args || args.egressSubnet === undefined) && !opts.urn) {
                throw new Error("Missing required property 'egressSubnet'");
            }
            if ((!args || args.firewallImage === undefined) && !opts.urn) {
                throw new Error("Missing required property 'firewallImage'");
            }
            if ((!args || args.firewallName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'firewallName'");
            }
            if ((!args || args.firewallSize === undefined) && !opts.urn) {
                throw new Error("Missing required property 'firewallSize'");
            }
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["availabilityDomain"] = args ? args.availabilityDomain : undefined;
            resourceInputs["bootstrapBucketName"] = args ? args.bootstrapBucketName : undefined;
            resourceInputs["bootstrapStorageName"] = args ? args.bootstrapStorageName : undefined;
            resourceInputs["containerFolder"] = args ? args.containerFolder : undefined;
            resourceInputs["egressSubnet"] = args ? args.egressSubnet : undefined;
            resourceInputs["egressVpcId"] = args ? args.egressVpcId : undefined;
            resourceInputs["faultDomain"] = args ? args.faultDomain : undefined;
            resourceInputs["fileShareFolder"] = args ? args.fileShareFolder : undefined;
            resourceInputs["firenetGwName"] = args ? args.firenetGwName : undefined;
            resourceInputs["firewallImage"] = args ? args.firewallImage : undefined;
            resourceInputs["firewallImageId"] = args ? args.firewallImageId : undefined;
            resourceInputs["firewallImageVersion"] = args ? args.firewallImageVersion : undefined;
            resourceInputs["firewallName"] = args ? args.firewallName : undefined;
            resourceInputs["firewallSize"] = args ? args.firewallSize : undefined;
            resourceInputs["iamRole"] = args ? args.iamRole : undefined;
            resourceInputs["keyName"] = args?.keyName ? pulumi.secret(args.keyName) : undefined;
            resourceInputs["managementSubnet"] = args ? args.managementSubnet : undefined;
            resourceInputs["managementVpcId"] = args ? args.managementVpcId : undefined;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["sasUrlConfig"] = args ? args.sasUrlConfig : undefined;
            resourceInputs["sasUrlLicense"] = args ? args.sasUrlLicense : undefined;
            resourceInputs["shareDirectory"] = args ? args.shareDirectory : undefined;
            resourceInputs["sicKey"] = args?.sicKey ? pulumi.secret(args.sicKey) : undefined;
            resourceInputs["sshPublicKey"] = args?.sshPublicKey ? pulumi.secret(args.sshPublicKey) : undefined;
            resourceInputs["storageAccessKey"] = args?.storageAccessKey ? pulumi.secret(args.storageAccessKey) : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["userData"] = args ? args.userData : undefined;
            resourceInputs["username"] = args ? args.username : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["zone"] = args ? args.zone : undefined;
            resourceInputs["cloudType"] = undefined /*out*/;
            resourceInputs["egressInterface"] = undefined /*out*/;
            resourceInputs["gcpVpcId"] = undefined /*out*/;
            resourceInputs["instanceId"] = undefined /*out*/;
            resourceInputs["lanInterface"] = undefined /*out*/;
            resourceInputs["managementInterface"] = undefined /*out*/;
            resourceInputs["publicIp"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["keyName", "password", "sicKey", "sshPublicKey", "storageAccessKey"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(AviatrixFirewallInstance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AviatrixFirewallInstance resources.
 */
export interface AviatrixFirewallInstanceState {
    /**
     * Availability domain. Required and valid only for OCI. Available as of provider version R2.19.3.
     */
    availabilityDomain?: pulumi.Input<string>;
    /**
     * Only available for AWS and GCP. For GCP, only Palo Alto Networks VM-Series deployment can use this attribute. In advanced mode, specify a bootstrap bucket name where the initial configuration and policy file is stored.
     */
    bootstrapBucketName?: pulumi.Input<string>;
    /**
     * Advanced option. Bootstrap storage name. Applicable to Azure or AzureGov and Palo Alto Networks VM-Series/Fortinet Series deployment only. Available as of provider version R2.17.1+.
     */
    bootstrapStorageName?: pulumi.Input<string>;
    /**
     * Cloud Type.
     */
    cloudType?: pulumi.Input<number>;
    /**
     * Advanced option. Container folder. Applicable to Azure or AzureGov and Fortinet Series deployment only.
     */
    containerFolder?: pulumi.Input<string>;
    /**
     * ID of Egress Interface created.
     */
    egressInterface?: pulumi.Input<string>;
    /**
     * Egress Interface Subnet. Select the subnet whose name contains “FW-ingress-egress”. For GCP, `egressSubnet` must be in the form `cidr~~region~~name`.
     */
    egressSubnet?: pulumi.Input<string>;
    /**
     * Egress VPC ID. Required for GCP. Available as of provider version R2.18.1+.
     */
    egressVpcId?: pulumi.Input<string>;
    /**
     * Fault domain. Required and valid only for OCI. Available as of provider version R2.19.3.
     */
    faultDomain?: pulumi.Input<string>;
    /**
     * Advanced option. File share folder. Applicable to Azure or AzureGov and Palo Alto Networks VM-Series deployment only. Available as of provider version R2.17.1+.
     */
    fileShareFolder?: pulumi.Input<string>;
    /**
     * Name of the primary FireNet gateway. **Required for all FireNet deployments that do not utilize the TGW-Integrated FireNet with AWS Native GWLB VPC.**
     */
    firenetGwName?: pulumi.Input<string>;
    /**
     * One of the AWS/Azure/GCP AMIs from various vendors such as Palo Alto Networks.
     */
    firewallImage?: pulumi.Input<string>;
    /**
     * Firewall image ID. Applicable to AWS and Azure only. For AWS, please use AMI ID. For Azure, the format is “Publisher:Offer:Plan:Version”. Available as of provider version R2.19+.
     */
    firewallImageId?: pulumi.Input<string>;
    /**
     * Version of firewall image. If not specified, Controller will automatically select the latest version available.
     */
    firewallImageVersion?: pulumi.Input<string>;
    /**
     * Name of the firewall instance to be created.
     */
    firewallName?: pulumi.Input<string>;
    /**
     * Instance size of the firewall. Example: "m5.xlarge".
     */
    firewallSize?: pulumi.Input<string>;
    /**
     * GCP Only. The current VPC ID.
     */
    gcpVpcId?: pulumi.Input<string>;
    /**
     * Only available for AWS. In advanced mode, create an IAM Role on the AWS account that launched the FireNet gateway. Create a policy to attach to the role. The policy is to allow access to "Bootstrap Bucket".
     */
    iamRole?: pulumi.Input<string>;
    /**
     * ID of the firewall instance created.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * Applicable to AWS deployment only. AWS Key Pair name. If not provided a Key Pair will be generated.
     */
    keyName?: pulumi.Input<string>;
    /**
     * ID of Lan Interface created.
     */
    lanInterface?: pulumi.Input<string>;
    /**
     * ID of Management Interface created.
     */
    managementInterface?: pulumi.Input<string>;
    /**
     * Management Interface Subnet. Select the subnet whose name contains “gateway and firewall management”. For GCP, `managementSubnet` must be in the form `cidr~~region~~name`. Required for Palo Alto Networks VM-Series and OCI Check Point firewalls. Otherwise, it must be empty.
     */
    managementSubnet?: pulumi.Input<string>;
    /**
     * Management VPC ID. Only used for GCP firewall. Required for Palo Alto Networks VM-Series, and required to be empty for Check Point or Fortinet series. Available as of provider version R2.18.1+.
     */
    managementVpcId?: pulumi.Input<string>;
    /**
     * Applicable to Azure or AzureGov deployment only.
     */
    password?: pulumi.Input<string>;
    /**
     * Management Public IP.
     */
    publicIp?: pulumi.Input<string>;
    /**
     * Advanced option. SAS URL Config. Applicable to Azure or AzureGov and Fortinet Series deployment only.
     */
    sasUrlConfig?: pulumi.Input<string>;
    /**
     * Advanced option. SAS URL License. Applicable to Azure or AzureGov and Fortinet Series deployment only.
     */
    sasUrlLicense?: pulumi.Input<string>;
    /**
     * Advanced option. Share directory. Applicable to Azure or AzureGov and Palo Alto Networks VM-Series deployment only. Available as of provider version R2.17.1+.
     */
    shareDirectory?: pulumi.Input<string>;
    /**
     * Advanced option. Sic key. Applicable to Check Point Series deployment only.
     */
    sicKey?: pulumi.Input<string>;
    /**
     * Applicable to Azure or AzureGov deployment only.
     */
    sshPublicKey?: pulumi.Input<string>;
    /**
     * Advanced option. Storage access key. Applicable to Azure or AzureGov and Palo Alto Networks VM-Series deployment only. Available as of provider version R2.17.1+.
     */
    storageAccessKey?: pulumi.Input<string>;
    /**
     * Mapping of key value pairs of tags for a firewall instance. Only available for AWS, AWSGov, GCP and Azure firewall instances. For AWS, AWSGov and Azure allowed characters are: letters, spaces, and numbers plus the following special characters: + - = . _ : @. For GCP allowed characters are: lowercase letters, numbers, "-" and "_". Example: {"key1" = "value1", "key2" = "value2"}.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Advanced option. User Data. Applicable to Check Point Series and Fortinet Series deployment only. Type: String.
     */
    userData?: pulumi.Input<string>;
    /**
     * Applicable to Azure or AzureGov deployment only. "admin" as a username is not accepted.
     */
    username?: pulumi.Input<string>;
    /**
     * VPC ID of the Security VPC. For GCP, `vpcId` must be in the form vpc_id~-~gcloud_project_id.
     */
    vpcId?: pulumi.Input<string>;
    /**
     * Availability Zone. Required if creating a Firewall Instance with a Native AWS GWLB-enabled VPC. Applicable to AWS, Azure, and GCP only. Available as of provider version R2.17+.
     */
    zone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AviatrixFirewallInstance resource.
 */
export interface AviatrixFirewallInstanceArgs {
    /**
     * Availability domain. Required and valid only for OCI. Available as of provider version R2.19.3.
     */
    availabilityDomain?: pulumi.Input<string>;
    /**
     * Only available for AWS and GCP. For GCP, only Palo Alto Networks VM-Series deployment can use this attribute. In advanced mode, specify a bootstrap bucket name where the initial configuration and policy file is stored.
     */
    bootstrapBucketName?: pulumi.Input<string>;
    /**
     * Advanced option. Bootstrap storage name. Applicable to Azure or AzureGov and Palo Alto Networks VM-Series/Fortinet Series deployment only. Available as of provider version R2.17.1+.
     */
    bootstrapStorageName?: pulumi.Input<string>;
    /**
     * Advanced option. Container folder. Applicable to Azure or AzureGov and Fortinet Series deployment only.
     */
    containerFolder?: pulumi.Input<string>;
    /**
     * Egress Interface Subnet. Select the subnet whose name contains “FW-ingress-egress”. For GCP, `egressSubnet` must be in the form `cidr~~region~~name`.
     */
    egressSubnet: pulumi.Input<string>;
    /**
     * Egress VPC ID. Required for GCP. Available as of provider version R2.18.1+.
     */
    egressVpcId?: pulumi.Input<string>;
    /**
     * Fault domain. Required and valid only for OCI. Available as of provider version R2.19.3.
     */
    faultDomain?: pulumi.Input<string>;
    /**
     * Advanced option. File share folder. Applicable to Azure or AzureGov and Palo Alto Networks VM-Series deployment only. Available as of provider version R2.17.1+.
     */
    fileShareFolder?: pulumi.Input<string>;
    /**
     * Name of the primary FireNet gateway. **Required for all FireNet deployments that do not utilize the TGW-Integrated FireNet with AWS Native GWLB VPC.**
     */
    firenetGwName?: pulumi.Input<string>;
    /**
     * One of the AWS/Azure/GCP AMIs from various vendors such as Palo Alto Networks.
     */
    firewallImage: pulumi.Input<string>;
    /**
     * Firewall image ID. Applicable to AWS and Azure only. For AWS, please use AMI ID. For Azure, the format is “Publisher:Offer:Plan:Version”. Available as of provider version R2.19+.
     */
    firewallImageId?: pulumi.Input<string>;
    /**
     * Version of firewall image. If not specified, Controller will automatically select the latest version available.
     */
    firewallImageVersion?: pulumi.Input<string>;
    /**
     * Name of the firewall instance to be created.
     */
    firewallName: pulumi.Input<string>;
    /**
     * Instance size of the firewall. Example: "m5.xlarge".
     */
    firewallSize: pulumi.Input<string>;
    /**
     * Only available for AWS. In advanced mode, create an IAM Role on the AWS account that launched the FireNet gateway. Create a policy to attach to the role. The policy is to allow access to "Bootstrap Bucket".
     */
    iamRole?: pulumi.Input<string>;
    /**
     * Applicable to AWS deployment only. AWS Key Pair name. If not provided a Key Pair will be generated.
     */
    keyName?: pulumi.Input<string>;
    /**
     * Management Interface Subnet. Select the subnet whose name contains “gateway and firewall management”. For GCP, `managementSubnet` must be in the form `cidr~~region~~name`. Required for Palo Alto Networks VM-Series and OCI Check Point firewalls. Otherwise, it must be empty.
     */
    managementSubnet?: pulumi.Input<string>;
    /**
     * Management VPC ID. Only used for GCP firewall. Required for Palo Alto Networks VM-Series, and required to be empty for Check Point or Fortinet series. Available as of provider version R2.18.1+.
     */
    managementVpcId?: pulumi.Input<string>;
    /**
     * Applicable to Azure or AzureGov deployment only.
     */
    password?: pulumi.Input<string>;
    /**
     * Advanced option. SAS URL Config. Applicable to Azure or AzureGov and Fortinet Series deployment only.
     */
    sasUrlConfig?: pulumi.Input<string>;
    /**
     * Advanced option. SAS URL License. Applicable to Azure or AzureGov and Fortinet Series deployment only.
     */
    sasUrlLicense?: pulumi.Input<string>;
    /**
     * Advanced option. Share directory. Applicable to Azure or AzureGov and Palo Alto Networks VM-Series deployment only. Available as of provider version R2.17.1+.
     */
    shareDirectory?: pulumi.Input<string>;
    /**
     * Advanced option. Sic key. Applicable to Check Point Series deployment only.
     */
    sicKey?: pulumi.Input<string>;
    /**
     * Applicable to Azure or AzureGov deployment only.
     */
    sshPublicKey?: pulumi.Input<string>;
    /**
     * Advanced option. Storage access key. Applicable to Azure or AzureGov and Palo Alto Networks VM-Series deployment only. Available as of provider version R2.17.1+.
     */
    storageAccessKey?: pulumi.Input<string>;
    /**
     * Mapping of key value pairs of tags for a firewall instance. Only available for AWS, AWSGov, GCP and Azure firewall instances. For AWS, AWSGov and Azure allowed characters are: letters, spaces, and numbers plus the following special characters: + - = . _ : @. For GCP allowed characters are: lowercase letters, numbers, "-" and "_". Example: {"key1" = "value1", "key2" = "value2"}.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Advanced option. User Data. Applicable to Check Point Series and Fortinet Series deployment only. Type: String.
     */
    userData?: pulumi.Input<string>;
    /**
     * Applicable to Azure or AzureGov deployment only. "admin" as a username is not accepted.
     */
    username?: pulumi.Input<string>;
    /**
     * VPC ID of the Security VPC. For GCP, `vpcId` must be in the form vpc_id~-~gcloud_project_id.
     */
    vpcId: pulumi.Input<string>;
    /**
     * Availability Zone. Required if creating a Firewall Instance with a Native AWS GWLB-enabled VPC. Applicable to AWS, Azure, and GCP only. Available as of provider version R2.17+.
     */
    zone?: pulumi.Input<string>;
}
