// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aviatrix

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The **aviatrix_netflow_agent** resource allows the enabling and disabling of netflow agent.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/astipkovits/pulumi-aviatrix/sdk/go/aviatrix"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := aviatrix.NewAviatrixNetflowAgent(ctx, "testNetflowAgent", &aviatrix.AviatrixNetflowAgentArgs{
//				ExcludedGateways: pulumi.StringArray{
//					pulumi.String("a"),
//					pulumi.String("b"),
//				},
//				Port:     pulumi.Int(10),
//				ServerIp: pulumi.String("1.2.3.4"),
//				Version:  pulumi.Int(5),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// **netflow_agent** can be imported using "netflow_agent", e.g.
//
// ```sh
//
//	$ pulumi import aviatrix:index/aviatrixNetflowAgent:AviatrixNetflowAgent test netflow_agent
//
// ```
type AviatrixNetflowAgent struct {
	pulumi.CustomResourceState

	// List of gateways to be excluded from logging. e.g.: ["gateway01", "gateway02", "gateway01-hagw"].
	ExcludedGateways pulumi.StringArrayOutput `pulumi:"excludedGateways"`
	// Netflow server port.
	Port pulumi.IntOutput `pulumi:"port"`
	// Netflow server IP address.
	ServerIp pulumi.StringOutput `pulumi:"serverIp"`
	// The status of netflow agent.
	Status pulumi.StringOutput `pulumi:"status"`
	// Netflow version (5 or 9). 5 by default.
	Version pulumi.IntPtrOutput `pulumi:"version"`
}

// NewAviatrixNetflowAgent registers a new resource with the given unique name, arguments, and options.
func NewAviatrixNetflowAgent(ctx *pulumi.Context,
	name string, args *AviatrixNetflowAgentArgs, opts ...pulumi.ResourceOption) (*AviatrixNetflowAgent, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Port == nil {
		return nil, errors.New("invalid value for required argument 'Port'")
	}
	if args.ServerIp == nil {
		return nil, errors.New("invalid value for required argument 'ServerIp'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource AviatrixNetflowAgent
	err := ctx.RegisterResource("aviatrix:index/aviatrixNetflowAgent:AviatrixNetflowAgent", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAviatrixNetflowAgent gets an existing AviatrixNetflowAgent resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAviatrixNetflowAgent(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AviatrixNetflowAgentState, opts ...pulumi.ResourceOption) (*AviatrixNetflowAgent, error) {
	var resource AviatrixNetflowAgent
	err := ctx.ReadResource("aviatrix:index/aviatrixNetflowAgent:AviatrixNetflowAgent", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AviatrixNetflowAgent resources.
type aviatrixNetflowAgentState struct {
	// List of gateways to be excluded from logging. e.g.: ["gateway01", "gateway02", "gateway01-hagw"].
	ExcludedGateways []string `pulumi:"excludedGateways"`
	// Netflow server port.
	Port *int `pulumi:"port"`
	// Netflow server IP address.
	ServerIp *string `pulumi:"serverIp"`
	// The status of netflow agent.
	Status *string `pulumi:"status"`
	// Netflow version (5 or 9). 5 by default.
	Version *int `pulumi:"version"`
}

type AviatrixNetflowAgentState struct {
	// List of gateways to be excluded from logging. e.g.: ["gateway01", "gateway02", "gateway01-hagw"].
	ExcludedGateways pulumi.StringArrayInput
	// Netflow server port.
	Port pulumi.IntPtrInput
	// Netflow server IP address.
	ServerIp pulumi.StringPtrInput
	// The status of netflow agent.
	Status pulumi.StringPtrInput
	// Netflow version (5 or 9). 5 by default.
	Version pulumi.IntPtrInput
}

func (AviatrixNetflowAgentState) ElementType() reflect.Type {
	return reflect.TypeOf((*aviatrixNetflowAgentState)(nil)).Elem()
}

type aviatrixNetflowAgentArgs struct {
	// List of gateways to be excluded from logging. e.g.: ["gateway01", "gateway02", "gateway01-hagw"].
	ExcludedGateways []string `pulumi:"excludedGateways"`
	// Netflow server port.
	Port int `pulumi:"port"`
	// Netflow server IP address.
	ServerIp string `pulumi:"serverIp"`
	// Netflow version (5 or 9). 5 by default.
	Version *int `pulumi:"version"`
}

// The set of arguments for constructing a AviatrixNetflowAgent resource.
type AviatrixNetflowAgentArgs struct {
	// List of gateways to be excluded from logging. e.g.: ["gateway01", "gateway02", "gateway01-hagw"].
	ExcludedGateways pulumi.StringArrayInput
	// Netflow server port.
	Port pulumi.IntInput
	// Netflow server IP address.
	ServerIp pulumi.StringInput
	// Netflow version (5 or 9). 5 by default.
	Version pulumi.IntPtrInput
}

func (AviatrixNetflowAgentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*aviatrixNetflowAgentArgs)(nil)).Elem()
}

type AviatrixNetflowAgentInput interface {
	pulumi.Input

	ToAviatrixNetflowAgentOutput() AviatrixNetflowAgentOutput
	ToAviatrixNetflowAgentOutputWithContext(ctx context.Context) AviatrixNetflowAgentOutput
}

func (*AviatrixNetflowAgent) ElementType() reflect.Type {
	return reflect.TypeOf((**AviatrixNetflowAgent)(nil)).Elem()
}

func (i *AviatrixNetflowAgent) ToAviatrixNetflowAgentOutput() AviatrixNetflowAgentOutput {
	return i.ToAviatrixNetflowAgentOutputWithContext(context.Background())
}

func (i *AviatrixNetflowAgent) ToAviatrixNetflowAgentOutputWithContext(ctx context.Context) AviatrixNetflowAgentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixNetflowAgentOutput)
}

// AviatrixNetflowAgentArrayInput is an input type that accepts AviatrixNetflowAgentArray and AviatrixNetflowAgentArrayOutput values.
// You can construct a concrete instance of `AviatrixNetflowAgentArrayInput` via:
//
//	AviatrixNetflowAgentArray{ AviatrixNetflowAgentArgs{...} }
type AviatrixNetflowAgentArrayInput interface {
	pulumi.Input

	ToAviatrixNetflowAgentArrayOutput() AviatrixNetflowAgentArrayOutput
	ToAviatrixNetflowAgentArrayOutputWithContext(context.Context) AviatrixNetflowAgentArrayOutput
}

type AviatrixNetflowAgentArray []AviatrixNetflowAgentInput

func (AviatrixNetflowAgentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AviatrixNetflowAgent)(nil)).Elem()
}

func (i AviatrixNetflowAgentArray) ToAviatrixNetflowAgentArrayOutput() AviatrixNetflowAgentArrayOutput {
	return i.ToAviatrixNetflowAgentArrayOutputWithContext(context.Background())
}

func (i AviatrixNetflowAgentArray) ToAviatrixNetflowAgentArrayOutputWithContext(ctx context.Context) AviatrixNetflowAgentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixNetflowAgentArrayOutput)
}

// AviatrixNetflowAgentMapInput is an input type that accepts AviatrixNetflowAgentMap and AviatrixNetflowAgentMapOutput values.
// You can construct a concrete instance of `AviatrixNetflowAgentMapInput` via:
//
//	AviatrixNetflowAgentMap{ "key": AviatrixNetflowAgentArgs{...} }
type AviatrixNetflowAgentMapInput interface {
	pulumi.Input

	ToAviatrixNetflowAgentMapOutput() AviatrixNetflowAgentMapOutput
	ToAviatrixNetflowAgentMapOutputWithContext(context.Context) AviatrixNetflowAgentMapOutput
}

type AviatrixNetflowAgentMap map[string]AviatrixNetflowAgentInput

func (AviatrixNetflowAgentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AviatrixNetflowAgent)(nil)).Elem()
}

func (i AviatrixNetflowAgentMap) ToAviatrixNetflowAgentMapOutput() AviatrixNetflowAgentMapOutput {
	return i.ToAviatrixNetflowAgentMapOutputWithContext(context.Background())
}

func (i AviatrixNetflowAgentMap) ToAviatrixNetflowAgentMapOutputWithContext(ctx context.Context) AviatrixNetflowAgentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixNetflowAgentMapOutput)
}

type AviatrixNetflowAgentOutput struct{ *pulumi.OutputState }

func (AviatrixNetflowAgentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AviatrixNetflowAgent)(nil)).Elem()
}

func (o AviatrixNetflowAgentOutput) ToAviatrixNetflowAgentOutput() AviatrixNetflowAgentOutput {
	return o
}

func (o AviatrixNetflowAgentOutput) ToAviatrixNetflowAgentOutputWithContext(ctx context.Context) AviatrixNetflowAgentOutput {
	return o
}

// List of gateways to be excluded from logging. e.g.: ["gateway01", "gateway02", "gateway01-hagw"].
func (o AviatrixNetflowAgentOutput) ExcludedGateways() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AviatrixNetflowAgent) pulumi.StringArrayOutput { return v.ExcludedGateways }).(pulumi.StringArrayOutput)
}

// Netflow server port.
func (o AviatrixNetflowAgentOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v *AviatrixNetflowAgent) pulumi.IntOutput { return v.Port }).(pulumi.IntOutput)
}

// Netflow server IP address.
func (o AviatrixNetflowAgentOutput) ServerIp() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixNetflowAgent) pulumi.StringOutput { return v.ServerIp }).(pulumi.StringOutput)
}

// The status of netflow agent.
func (o AviatrixNetflowAgentOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixNetflowAgent) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Netflow version (5 or 9). 5 by default.
func (o AviatrixNetflowAgentOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AviatrixNetflowAgent) pulumi.IntPtrOutput { return v.Version }).(pulumi.IntPtrOutput)
}

type AviatrixNetflowAgentArrayOutput struct{ *pulumi.OutputState }

func (AviatrixNetflowAgentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AviatrixNetflowAgent)(nil)).Elem()
}

func (o AviatrixNetflowAgentArrayOutput) ToAviatrixNetflowAgentArrayOutput() AviatrixNetflowAgentArrayOutput {
	return o
}

func (o AviatrixNetflowAgentArrayOutput) ToAviatrixNetflowAgentArrayOutputWithContext(ctx context.Context) AviatrixNetflowAgentArrayOutput {
	return o
}

func (o AviatrixNetflowAgentArrayOutput) Index(i pulumi.IntInput) AviatrixNetflowAgentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AviatrixNetflowAgent {
		return vs[0].([]*AviatrixNetflowAgent)[vs[1].(int)]
	}).(AviatrixNetflowAgentOutput)
}

type AviatrixNetflowAgentMapOutput struct{ *pulumi.OutputState }

func (AviatrixNetflowAgentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AviatrixNetflowAgent)(nil)).Elem()
}

func (o AviatrixNetflowAgentMapOutput) ToAviatrixNetflowAgentMapOutput() AviatrixNetflowAgentMapOutput {
	return o
}

func (o AviatrixNetflowAgentMapOutput) ToAviatrixNetflowAgentMapOutputWithContext(ctx context.Context) AviatrixNetflowAgentMapOutput {
	return o
}

func (o AviatrixNetflowAgentMapOutput) MapIndex(k pulumi.StringInput) AviatrixNetflowAgentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AviatrixNetflowAgent {
		return vs[0].(map[string]*AviatrixNetflowAgent)[vs[1].(string)]
	}).(AviatrixNetflowAgentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixNetflowAgentInput)(nil)).Elem(), &AviatrixNetflowAgent{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixNetflowAgentArrayInput)(nil)).Elem(), AviatrixNetflowAgentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixNetflowAgentMapInput)(nil)).Elem(), AviatrixNetflowAgentMap{})
	pulumi.RegisterOutputType(AviatrixNetflowAgentOutput{})
	pulumi.RegisterOutputType(AviatrixNetflowAgentArrayOutput{})
	pulumi.RegisterOutputType(AviatrixNetflowAgentMapOutput{})
}
