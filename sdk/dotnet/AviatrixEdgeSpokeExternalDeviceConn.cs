// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aviatrix
{
    /// <summary>
    /// The **aviatrix_edge_spoke_external_device_conn** resource creates and manages the connection between Edge as a Spoke and an External Device. This resource is available as of provider version R2.23+.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Aviatrix = Pulumi.Aviatrix;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Create an Edge as a Spoke External Device Connection
    ///     var test = new Aviatrix.AviatrixEdgeSpokeExternalDeviceConn("test", new()
    ///     {
    ///         BgpLocalAsNum = "123",
    ///         BgpRemoteAsNum = "345",
    ///         ConnectionName = "conn",
    ///         GwName = "eaas",
    ///         LocalLanIp = "10.230.3.23",
    ///         RemoteLanIp = "10.0.60.1",
    ///         SiteId = "site-abcd1234",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// **edge_spoke_external_device_conn** can be imported using the `connection_name` and `site_id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import aviatrix:index/aviatrixEdgeSpokeExternalDeviceConn:AviatrixEdgeSpokeExternalDeviceConn test connection_name~site_id
    /// ```
    /// </summary>
    [AviatrixResourceType("aviatrix:index/aviatrixEdgeSpokeExternalDeviceConn:AviatrixEdgeSpokeExternalDeviceConn")]
    public partial class AviatrixEdgeSpokeExternalDeviceConn : global::Pulumi.CustomResource
    {
        /// <summary>
        /// BGP local AS number.
        /// </summary>
        [Output("bgpLocalAsNum")]
        public Output<string> BgpLocalAsNum { get; private set; } = null!;

        /// <summary>
        /// BGP remote AS number.
        /// </summary>
        [Output("bgpRemoteAsNum")]
        public Output<string> BgpRemoteAsNum { get; private set; } = null!;

        /// <summary>
        /// Connection name.
        /// </summary>
        [Output("connectionName")]
        public Output<string> ConnectionName { get; private set; } = null!;

        /// <summary>
        /// Connection type. Valid value: 'bgp'. Default value: 'bgp'.
        /// </summary>
        [Output("connectionType")]
        public Output<string?> ConnectionType { get; private set; } = null!;

        /// <summary>
        /// Edge as a Spoke name.
        /// </summary>
        [Output("gwName")]
        public Output<string> GwName { get; private set; } = null!;

        /// <summary>
        /// Local LAN IP.
        /// </summary>
        [Output("localLanIp")]
        public Output<string> LocalLanIp { get; private set; } = null!;

        /// <summary>
        /// Remote LAN IP.
        /// </summary>
        [Output("remoteLanIp")]
        public Output<string> RemoteLanIp { get; private set; } = null!;

        /// <summary>
        /// Edge as a Spoke site iD.
        /// </summary>
        [Output("siteId")]
        public Output<string> SiteId { get; private set; } = null!;

        /// <summary>
        /// Tunnel protocol. Valid value: 'LAN'. Default value: 'LAN'. Case insensitive.
        /// </summary>
        [Output("tunnelProtocol")]
        public Output<string?> TunnelProtocol { get; private set; } = null!;


        /// <summary>
        /// Create a AviatrixEdgeSpokeExternalDeviceConn resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AviatrixEdgeSpokeExternalDeviceConn(string name, AviatrixEdgeSpokeExternalDeviceConnArgs args, CustomResourceOptions? options = null)
            : base("aviatrix:index/aviatrixEdgeSpokeExternalDeviceConn:AviatrixEdgeSpokeExternalDeviceConn", name, args ?? new AviatrixEdgeSpokeExternalDeviceConnArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AviatrixEdgeSpokeExternalDeviceConn(string name, Input<string> id, AviatrixEdgeSpokeExternalDeviceConnState? state = null, CustomResourceOptions? options = null)
            : base("aviatrix:index/aviatrixEdgeSpokeExternalDeviceConn:AviatrixEdgeSpokeExternalDeviceConn", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/astipkovits",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AviatrixEdgeSpokeExternalDeviceConn resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AviatrixEdgeSpokeExternalDeviceConn Get(string name, Input<string> id, AviatrixEdgeSpokeExternalDeviceConnState? state = null, CustomResourceOptions? options = null)
        {
            return new AviatrixEdgeSpokeExternalDeviceConn(name, id, state, options);
        }
    }

    public sealed class AviatrixEdgeSpokeExternalDeviceConnArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// BGP local AS number.
        /// </summary>
        [Input("bgpLocalAsNum", required: true)]
        public Input<string> BgpLocalAsNum { get; set; } = null!;

        /// <summary>
        /// BGP remote AS number.
        /// </summary>
        [Input("bgpRemoteAsNum", required: true)]
        public Input<string> BgpRemoteAsNum { get; set; } = null!;

        /// <summary>
        /// Connection name.
        /// </summary>
        [Input("connectionName", required: true)]
        public Input<string> ConnectionName { get; set; } = null!;

        /// <summary>
        /// Connection type. Valid value: 'bgp'. Default value: 'bgp'.
        /// </summary>
        [Input("connectionType")]
        public Input<string>? ConnectionType { get; set; }

        /// <summary>
        /// Edge as a Spoke name.
        /// </summary>
        [Input("gwName", required: true)]
        public Input<string> GwName { get; set; } = null!;

        /// <summary>
        /// Local LAN IP.
        /// </summary>
        [Input("localLanIp", required: true)]
        public Input<string> LocalLanIp { get; set; } = null!;

        /// <summary>
        /// Remote LAN IP.
        /// </summary>
        [Input("remoteLanIp", required: true)]
        public Input<string> RemoteLanIp { get; set; } = null!;

        /// <summary>
        /// Edge as a Spoke site iD.
        /// </summary>
        [Input("siteId", required: true)]
        public Input<string> SiteId { get; set; } = null!;

        /// <summary>
        /// Tunnel protocol. Valid value: 'LAN'. Default value: 'LAN'. Case insensitive.
        /// </summary>
        [Input("tunnelProtocol")]
        public Input<string>? TunnelProtocol { get; set; }

        public AviatrixEdgeSpokeExternalDeviceConnArgs()
        {
        }
        public static new AviatrixEdgeSpokeExternalDeviceConnArgs Empty => new AviatrixEdgeSpokeExternalDeviceConnArgs();
    }

    public sealed class AviatrixEdgeSpokeExternalDeviceConnState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// BGP local AS number.
        /// </summary>
        [Input("bgpLocalAsNum")]
        public Input<string>? BgpLocalAsNum { get; set; }

        /// <summary>
        /// BGP remote AS number.
        /// </summary>
        [Input("bgpRemoteAsNum")]
        public Input<string>? BgpRemoteAsNum { get; set; }

        /// <summary>
        /// Connection name.
        /// </summary>
        [Input("connectionName")]
        public Input<string>? ConnectionName { get; set; }

        /// <summary>
        /// Connection type. Valid value: 'bgp'. Default value: 'bgp'.
        /// </summary>
        [Input("connectionType")]
        public Input<string>? ConnectionType { get; set; }

        /// <summary>
        /// Edge as a Spoke name.
        /// </summary>
        [Input("gwName")]
        public Input<string>? GwName { get; set; }

        /// <summary>
        /// Local LAN IP.
        /// </summary>
        [Input("localLanIp")]
        public Input<string>? LocalLanIp { get; set; }

        /// <summary>
        /// Remote LAN IP.
        /// </summary>
        [Input("remoteLanIp")]
        public Input<string>? RemoteLanIp { get; set; }

        /// <summary>
        /// Edge as a Spoke site iD.
        /// </summary>
        [Input("siteId")]
        public Input<string>? SiteId { get; set; }

        /// <summary>
        /// Tunnel protocol. Valid value: 'LAN'. Default value: 'LAN'. Case insensitive.
        /// </summary>
        [Input("tunnelProtocol")]
        public Input<string>? TunnelProtocol { get; set; }

        public AviatrixEdgeSpokeExternalDeviceConnState()
        {
        }
        public static new AviatrixEdgeSpokeExternalDeviceConnState Empty => new AviatrixEdgeSpokeExternalDeviceConnState();
    }
}
