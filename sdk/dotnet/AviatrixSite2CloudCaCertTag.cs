// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aviatrix
{
    /// <summary>
    /// The **aviatrix_site2cloud_ca_cert_tag** resource creates and manages Aviatrix-created Site2Cloud CA Cert Tags.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.IO;
    /// using Pulumi;
    /// using Aviatrix = Pulumi.Aviatrix;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Create an Aviatrix Site2cloud CA Cert Tag Containing One Cert
    ///     var test = new Aviatrix.AviatrixSite2CloudCaCertTag("test", new()
    ///     {
    ///         TagName = "test",
    ///         CaCertificates = new[]
    ///         {
    ///             new Aviatrix.Inputs.AviatrixSite2CloudCaCertTagCaCertificateArgs
    ///             {
    ///                 CertContent = File.ReadAllText("/home/ubuntu/avx_gw_ca_cert_in_ui_root_only.crt"),
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.IO;
    /// using Pulumi;
    /// using Aviatrix = Pulumi.Aviatrix;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Create an Aviatrix Site2cloud CA Cert Tag Containing Multiple Certs
    ///     var test = new Aviatrix.AviatrixSite2CloudCaCertTag("test", new()
    ///     {
    ///         TagName = "test",
    ///         CaCertificates = new[]
    ///         {
    ///             new Aviatrix.Inputs.AviatrixSite2CloudCaCertTagCaCertificateArgs
    ///             {
    ///                 CertContent = File.ReadAllText("/home/ubuntu/avx_gw_ca_cert_root.crt"),
    ///             },
    ///             new Aviatrix.Inputs.AviatrixSite2CloudCaCertTagCaCertificateArgs
    ///             {
    ///                 CertContent = File.ReadAllText("/home/ubuntu/avx_gw_ca_cert_intermediate.crt"),
    ///             },
    ///             new Aviatrix.Inputs.AviatrixSite2CloudCaCertTagCaCertificateArgs
    ///             {
    ///                 CertContent = File.ReadAllText("/home/ubuntu/avx_gw_ca_cert_intermediate2.crt"),
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// **site2cloud_ca_cert_tag** can be imported using the `tag_name` and, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import aviatrix:index/aviatrixSite2CloudCaCertTag:AviatrixSite2CloudCaCertTag test tag_name
    /// ```
    /// </summary>
    [AviatrixResourceType("aviatrix:index/aviatrixSite2CloudCaCertTag:AviatrixSite2CloudCaCertTag")]
    public partial class AviatrixSite2CloudCaCertTag : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A set of CA certificates.
        /// </summary>
        [Output("caCertificates")]
        public Output<ImmutableArray<Outputs.AviatrixSite2CloudCaCertTagCaCertificate>> CaCertificates { get; private set; } = null!;

        /// <summary>
        /// Site2Cloud ca cert tag name.
        /// </summary>
        [Output("tagName")]
        public Output<string> TagName { get; private set; } = null!;


        /// <summary>
        /// Create a AviatrixSite2CloudCaCertTag resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AviatrixSite2CloudCaCertTag(string name, AviatrixSite2CloudCaCertTagArgs args, CustomResourceOptions? options = null)
            : base("aviatrix:index/aviatrixSite2CloudCaCertTag:AviatrixSite2CloudCaCertTag", name, args ?? new AviatrixSite2CloudCaCertTagArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AviatrixSite2CloudCaCertTag(string name, Input<string> id, AviatrixSite2CloudCaCertTagState? state = null, CustomResourceOptions? options = null)
            : base("aviatrix:index/aviatrixSite2CloudCaCertTag:AviatrixSite2CloudCaCertTag", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/astipkovits",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AviatrixSite2CloudCaCertTag resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AviatrixSite2CloudCaCertTag Get(string name, Input<string> id, AviatrixSite2CloudCaCertTagState? state = null, CustomResourceOptions? options = null)
        {
            return new AviatrixSite2CloudCaCertTag(name, id, state, options);
        }
    }

    public sealed class AviatrixSite2CloudCaCertTagArgs : global::Pulumi.ResourceArgs
    {
        [Input("caCertificates", required: true)]
        private InputList<Inputs.AviatrixSite2CloudCaCertTagCaCertificateArgs>? _caCertificates;

        /// <summary>
        /// A set of CA certificates.
        /// </summary>
        public InputList<Inputs.AviatrixSite2CloudCaCertTagCaCertificateArgs> CaCertificates
        {
            get => _caCertificates ?? (_caCertificates = new InputList<Inputs.AviatrixSite2CloudCaCertTagCaCertificateArgs>());
            set => _caCertificates = value;
        }

        /// <summary>
        /// Site2Cloud ca cert tag name.
        /// </summary>
        [Input("tagName", required: true)]
        public Input<string> TagName { get; set; } = null!;

        public AviatrixSite2CloudCaCertTagArgs()
        {
        }
        public static new AviatrixSite2CloudCaCertTagArgs Empty => new AviatrixSite2CloudCaCertTagArgs();
    }

    public sealed class AviatrixSite2CloudCaCertTagState : global::Pulumi.ResourceArgs
    {
        [Input("caCertificates")]
        private InputList<Inputs.AviatrixSite2CloudCaCertTagCaCertificateGetArgs>? _caCertificates;

        /// <summary>
        /// A set of CA certificates.
        /// </summary>
        public InputList<Inputs.AviatrixSite2CloudCaCertTagCaCertificateGetArgs> CaCertificates
        {
            get => _caCertificates ?? (_caCertificates = new InputList<Inputs.AviatrixSite2CloudCaCertTagCaCertificateGetArgs>());
            set => _caCertificates = value;
        }

        /// <summary>
        /// Site2Cloud ca cert tag name.
        /// </summary>
        [Input("tagName")]
        public Input<string>? TagName { get; set; }

        public AviatrixSite2CloudCaCertTagState()
        {
        }
        public static new AviatrixSite2CloudCaCertTagState Empty => new AviatrixSite2CloudCaCertTagState();
    }
}
