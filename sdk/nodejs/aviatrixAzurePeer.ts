// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The **aviatrix_azure_peer** resource allows the creation and management of the Aviatrix-created peerings between Azure VNets.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aviatrix from "@pulumi/aviatrix";
 *
 * // Create an Aviatrix Azure Peering
 * const testAzurepeer = new aviatrix.AviatrixAzurePeer("test_azurepeer", {
 *     accountName1: "test1-account",
 *     accountName2: "test2-account",
 *     vnetNameResourceGroup1: "Foo_VNet1:Bar_RG1:GUID1",
 *     vnetNameResourceGroup2: "Foo_VNet2:Bar_RG2:GUID2",
 *     vnetReg1: "Central US",
 *     vnetReg2: "East US",
 * });
 * ```
 *
 * ## Import
 *
 * **azure_peer** can be imported using the `vnet_name_resource_group1` and `vnet_name_resource_group2`, e.g.
 *
 * ```sh
 *  $ pulumi import aviatrix:index/aviatrixAzurePeer:AviatrixAzurePeer test vnet_name_resource_group1~vnet_name_resource_group2
 * ```
 */
export class AviatrixAzurePeer extends pulumi.CustomResource {
    /**
     * Get an existing AviatrixAzurePeer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AviatrixAzurePeerState, opts?: pulumi.CustomResourceOptions): AviatrixAzurePeer {
        return new AviatrixAzurePeer(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aviatrix:index/aviatrixAzurePeer:AviatrixAzurePeer';

    /**
     * Returns true if the given object is an instance of AviatrixAzurePeer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AviatrixAzurePeer {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AviatrixAzurePeer.__pulumiType;
    }

    /**
     * Name of the Azure cloud account in the Aviatrix controller for VNet 1.
     */
    public readonly accountName1!: pulumi.Output<string>;
    /**
     * Name of the Azure cloud account in the Aviatrix controller for VNet 2.
     */
    public readonly accountName2!: pulumi.Output<string>;
    /**
     * List of VNet CIDR of vnet_name_resource_group1.
     */
    public /*out*/ readonly vnetCidr1s!: pulumi.Output<string[]>;
    /**
     * List of VNet CIDR of vnet_name_resource_group2.
     */
    public /*out*/ readonly vnetCidr2s!: pulumi.Output<string[]>;
    /**
     * Azure VNet 1's name. Example: "VNet_Name1:Resource_Group_Name1:GUID1".
     */
    public readonly vnetNameResourceGroup1!: pulumi.Output<string>;
    /**
     * Azure VNet 2's name. Example: "VNet_Name2:Resource_Group_Name2:GUID2".
     */
    public readonly vnetNameResourceGroup2!: pulumi.Output<string>;
    /**
     * Region of Azure VNet 1. Example: "East US 2".
     */
    public readonly vnetReg1!: pulumi.Output<string>;
    /**
     * Region of Azure VNet 2. Example: "East US 2".
     */
    public readonly vnetReg2!: pulumi.Output<string>;

    /**
     * Create a AviatrixAzurePeer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AviatrixAzurePeerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AviatrixAzurePeerArgs | AviatrixAzurePeerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AviatrixAzurePeerState | undefined;
            resourceInputs["accountName1"] = state ? state.accountName1 : undefined;
            resourceInputs["accountName2"] = state ? state.accountName2 : undefined;
            resourceInputs["vnetCidr1s"] = state ? state.vnetCidr1s : undefined;
            resourceInputs["vnetCidr2s"] = state ? state.vnetCidr2s : undefined;
            resourceInputs["vnetNameResourceGroup1"] = state ? state.vnetNameResourceGroup1 : undefined;
            resourceInputs["vnetNameResourceGroup2"] = state ? state.vnetNameResourceGroup2 : undefined;
            resourceInputs["vnetReg1"] = state ? state.vnetReg1 : undefined;
            resourceInputs["vnetReg2"] = state ? state.vnetReg2 : undefined;
        } else {
            const args = argsOrState as AviatrixAzurePeerArgs | undefined;
            if ((!args || args.accountName1 === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountName1'");
            }
            if ((!args || args.accountName2 === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountName2'");
            }
            if ((!args || args.vnetNameResourceGroup1 === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vnetNameResourceGroup1'");
            }
            if ((!args || args.vnetNameResourceGroup2 === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vnetNameResourceGroup2'");
            }
            if ((!args || args.vnetReg1 === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vnetReg1'");
            }
            if ((!args || args.vnetReg2 === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vnetReg2'");
            }
            resourceInputs["accountName1"] = args ? args.accountName1 : undefined;
            resourceInputs["accountName2"] = args ? args.accountName2 : undefined;
            resourceInputs["vnetNameResourceGroup1"] = args ? args.vnetNameResourceGroup1 : undefined;
            resourceInputs["vnetNameResourceGroup2"] = args ? args.vnetNameResourceGroup2 : undefined;
            resourceInputs["vnetReg1"] = args ? args.vnetReg1 : undefined;
            resourceInputs["vnetReg2"] = args ? args.vnetReg2 : undefined;
            resourceInputs["vnetCidr1s"] = undefined /*out*/;
            resourceInputs["vnetCidr2s"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AviatrixAzurePeer.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AviatrixAzurePeer resources.
 */
export interface AviatrixAzurePeerState {
    /**
     * Name of the Azure cloud account in the Aviatrix controller for VNet 1.
     */
    accountName1?: pulumi.Input<string>;
    /**
     * Name of the Azure cloud account in the Aviatrix controller for VNet 2.
     */
    accountName2?: pulumi.Input<string>;
    /**
     * List of VNet CIDR of vnet_name_resource_group1.
     */
    vnetCidr1s?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of VNet CIDR of vnet_name_resource_group2.
     */
    vnetCidr2s?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Azure VNet 1's name. Example: "VNet_Name1:Resource_Group_Name1:GUID1".
     */
    vnetNameResourceGroup1?: pulumi.Input<string>;
    /**
     * Azure VNet 2's name. Example: "VNet_Name2:Resource_Group_Name2:GUID2".
     */
    vnetNameResourceGroup2?: pulumi.Input<string>;
    /**
     * Region of Azure VNet 1. Example: "East US 2".
     */
    vnetReg1?: pulumi.Input<string>;
    /**
     * Region of Azure VNet 2. Example: "East US 2".
     */
    vnetReg2?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AviatrixAzurePeer resource.
 */
export interface AviatrixAzurePeerArgs {
    /**
     * Name of the Azure cloud account in the Aviatrix controller for VNet 1.
     */
    accountName1: pulumi.Input<string>;
    /**
     * Name of the Azure cloud account in the Aviatrix controller for VNet 2.
     */
    accountName2: pulumi.Input<string>;
    /**
     * Azure VNet 1's name. Example: "VNet_Name1:Resource_Group_Name1:GUID1".
     */
    vnetNameResourceGroup1: pulumi.Input<string>;
    /**
     * Azure VNet 2's name. Example: "VNet_Name2:Resource_Group_Name2:GUID2".
     */
    vnetNameResourceGroup2: pulumi.Input<string>;
    /**
     * Region of Azure VNet 1. Example: "East US 2".
     */
    vnetReg1: pulumi.Input<string>;
    /**
     * Region of Azure VNet 2. Example: "East US 2".
     */
    vnetReg2: pulumi.Input<string>;
}
