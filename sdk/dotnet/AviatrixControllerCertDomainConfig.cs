// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aviatrix
{
    /// <summary>
    /// The **aviatrix_controller_cert_domain_config** resource allows management of an Aviatrix Controller's cert domain config. This resource is available as of provider version R2.19+.
    /// 
    /// !&gt; **WARNING:** Changing the Controller's cert domain config causes all other API calls to the controller to fail. If multiple other resources are created with the **aviatrix_controller_cert_domain_config** resource, a dependency on the **aviatrix_controller_cert_domain_config** resource must be added.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Aviatrix = Pulumi.Aviatrix;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Create an Aviatrix controller cert domain config
    ///     var test = new Aviatrix.AviatrixControllerCertDomainConfig("test", new()
    ///     {
    ///         CertDomain = "abc.com",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// **aviatrix_controller_cert_domain_config** can be imported using controller IP, e.g. controller IP is 10.11.12.13
    /// 
    /// ```sh
    ///  $ pulumi import aviatrix:index/aviatrixControllerCertDomainConfig:AviatrixControllerCertDomainConfig test 10-11-12-13
    /// ```
    /// </summary>
    [AviatrixResourceType("aviatrix:index/aviatrixControllerCertDomainConfig:AviatrixControllerCertDomainConfig")]
    public partial class AviatrixControllerCertDomainConfig : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Domain name that is used in FQDN for generating cert. Default value: "aviatrixnetwork.com".
        /// </summary>
        [Output("certDomain")]
        public Output<string?> CertDomain { get; private set; } = null!;


        /// <summary>
        /// Create a AviatrixControllerCertDomainConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AviatrixControllerCertDomainConfig(string name, AviatrixControllerCertDomainConfigArgs? args = null, CustomResourceOptions? options = null)
            : base("aviatrix:index/aviatrixControllerCertDomainConfig:AviatrixControllerCertDomainConfig", name, args ?? new AviatrixControllerCertDomainConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AviatrixControllerCertDomainConfig(string name, Input<string> id, AviatrixControllerCertDomainConfigState? state = null, CustomResourceOptions? options = null)
            : base("aviatrix:index/aviatrixControllerCertDomainConfig:AviatrixControllerCertDomainConfig", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/astipkovits",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AviatrixControllerCertDomainConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AviatrixControllerCertDomainConfig Get(string name, Input<string> id, AviatrixControllerCertDomainConfigState? state = null, CustomResourceOptions? options = null)
        {
            return new AviatrixControllerCertDomainConfig(name, id, state, options);
        }
    }

    public sealed class AviatrixControllerCertDomainConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Domain name that is used in FQDN for generating cert. Default value: "aviatrixnetwork.com".
        /// </summary>
        [Input("certDomain")]
        public Input<string>? CertDomain { get; set; }

        public AviatrixControllerCertDomainConfigArgs()
        {
        }
        public static new AviatrixControllerCertDomainConfigArgs Empty => new AviatrixControllerCertDomainConfigArgs();
    }

    public sealed class AviatrixControllerCertDomainConfigState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Domain name that is used in FQDN for generating cert. Default value: "aviatrixnetwork.com".
        /// </summary>
        [Input("certDomain")]
        public Input<string>? CertDomain { get; set; }

        public AviatrixControllerCertDomainConfigState()
        {
        }
        public static new AviatrixControllerCertDomainConfigState Empty => new AviatrixControllerCertDomainConfigState();
    }
}
