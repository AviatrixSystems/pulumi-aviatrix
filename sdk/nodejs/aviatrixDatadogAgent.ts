// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The **aviatrix_datadog_agent** resource allows the enabling and disabling of datadog agent.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aviatrix from "@pulumi/aviatrix";
 *
 * // Enable datadog agent
 * const testDatadogAgent = new aviatrix.AviatrixDatadogAgent("test_datadog_agent", {
 *     apiKey: "your_api_key",
 *     excludedGateways: [
 *         "a",
 *         "b",
 *     ],
 *     site: "datadoghq.com",
 * });
 * ```
 *
 * ## Import
 *
 * **datadog_agent** can be imported using "datadog_agent", e.g.
 *
 * ```sh
 *  $ pulumi import aviatrix:index/aviatrixDatadogAgent:AviatrixDatadogAgent test datadog_agent
 * ```
 */
export class AviatrixDatadogAgent extends pulumi.CustomResource {
    /**
     * Get an existing AviatrixDatadogAgent resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AviatrixDatadogAgentState, opts?: pulumi.CustomResourceOptions): AviatrixDatadogAgent {
        return new AviatrixDatadogAgent(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aviatrix:index/aviatrixDatadogAgent:AviatrixDatadogAgent';

    /**
     * Returns true if the given object is an instance of AviatrixDatadogAgent.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AviatrixDatadogAgent {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AviatrixDatadogAgent.__pulumiType;
    }

    /**
     * API key.
     */
    public readonly apiKey!: pulumi.Output<string>;
    /**
     * List of gateways to be excluded from logging. e.g.: ["gateway01", "gateway02", "gateway01-hagw"].
     */
    public readonly excludedGateways!: pulumi.Output<string[] | undefined>;
    /**
     * Only export metrics without exporting logs. False by default.
     */
    public readonly metricsOnly!: pulumi.Output<boolean | undefined>;
    /**
     * Site preference ("datadoghq.com" or" datadoghq.eu"). "datadoghq.com" by default.
     */
    public readonly site!: pulumi.Output<string | undefined>;
    /**
     * The status of datadog agent.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;

    /**
     * Create a AviatrixDatadogAgent resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AviatrixDatadogAgentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AviatrixDatadogAgentArgs | AviatrixDatadogAgentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AviatrixDatadogAgentState | undefined;
            resourceInputs["apiKey"] = state ? state.apiKey : undefined;
            resourceInputs["excludedGateways"] = state ? state.excludedGateways : undefined;
            resourceInputs["metricsOnly"] = state ? state.metricsOnly : undefined;
            resourceInputs["site"] = state ? state.site : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as AviatrixDatadogAgentArgs | undefined;
            if ((!args || args.apiKey === undefined) && !opts.urn) {
                throw new Error("Missing required property 'apiKey'");
            }
            resourceInputs["apiKey"] = args?.apiKey ? pulumi.secret(args.apiKey) : undefined;
            resourceInputs["excludedGateways"] = args ? args.excludedGateways : undefined;
            resourceInputs["metricsOnly"] = args ? args.metricsOnly : undefined;
            resourceInputs["site"] = args ? args.site : undefined;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["apiKey"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(AviatrixDatadogAgent.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AviatrixDatadogAgent resources.
 */
export interface AviatrixDatadogAgentState {
    /**
     * API key.
     */
    apiKey?: pulumi.Input<string>;
    /**
     * List of gateways to be excluded from logging. e.g.: ["gateway01", "gateway02", "gateway01-hagw"].
     */
    excludedGateways?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Only export metrics without exporting logs. False by default.
     */
    metricsOnly?: pulumi.Input<boolean>;
    /**
     * Site preference ("datadoghq.com" or" datadoghq.eu"). "datadoghq.com" by default.
     */
    site?: pulumi.Input<string>;
    /**
     * The status of datadog agent.
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AviatrixDatadogAgent resource.
 */
export interface AviatrixDatadogAgentArgs {
    /**
     * API key.
     */
    apiKey: pulumi.Input<string>;
    /**
     * List of gateways to be excluded from logging. e.g.: ["gateway01", "gateway02", "gateway01-hagw"].
     */
    excludedGateways?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Only export metrics without exporting logs. False by default.
     */
    metricsOnly?: pulumi.Input<boolean>;
    /**
     * Site preference ("datadoghq.com" or" datadoghq.eu"). "datadoghq.com" by default.
     */
    site?: pulumi.Input<string>;
}
