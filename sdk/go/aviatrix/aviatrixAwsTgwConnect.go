// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aviatrix

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The **aviatrix_aws_tgw_connect** resource allows the creation and management of AWS TGW Connect connections. To create
// and manage TGW Connect peers, please use `AviatrixAwsTgwConnectPeer` resources. This resource is available as of
// provider version R2.18.1+.
//
// > **NOTE:** Before creating an AWS TGW Connect, the AWS TGW must have an attached VPC via
// the `AviatrixAwsTgwVpcAttachment` resource. Also, the AWS TGW must have configured CIDRs via
// the `AviatrixAwsTgw` `cidrs` attribute.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/astipkovits/pulumi-aviatrix/sdk/go/aviatrix"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := aviatrix.NewAviatrixAwsTgwConnect(ctx, "testAwsTgwConnect", &aviatrix.AviatrixAwsTgwConnectArgs{
//				TgwName:           pulumi.Any(aviatrix_aws_tgw.Test_aws_tgw.Tgw_name),
//				ConnectionName:    pulumi.String("aws-tgw-connect"),
//				TransportVpcId:    pulumi.Any(aviatrix_aws_tgw_vpc_attachment.Test_aws_tgw_vpc_attachment.Vpc_id),
//				NetworkDomainName: pulumi.Any(aviatrix_aws_tgw_vpc_attachment.Test_aws_tgw_vpc_attachment.Network_domain_name),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// **aws_tgw_connect** can be imported using the `tgw_name` and `connection_name`, e.g.
//
// ```sh
//
//	$ pulumi import aviatrix:index/aviatrixAwsTgwConnect:AviatrixAwsTgwConnect test tgw_name~~connection_name
//
// ```
type AviatrixAwsTgwConnect struct {
	pulumi.CustomResourceState

	// Connect Attachment ID.
	ConnectAttachmentId pulumi.StringOutput `pulumi:"connectAttachmentId"`
	// Connection name.
	ConnectionName pulumi.StringOutput `pulumi:"connectionName"`
	// Network Domain name.
	NetworkDomainName pulumi.StringPtrOutput `pulumi:"networkDomainName"`
	// Security Domain name.
	//
	// Deprecated: Please use network_domain_name instead.
	SecurityDomainName pulumi.StringPtrOutput `pulumi:"securityDomainName"`
	// AWS TGW name.
	TgwName pulumi.StringOutput `pulumi:"tgwName"`
	// Transport Attachment ID.
	TransportAttachmentId pulumi.StringOutput `pulumi:"transportAttachmentId"`
	// Transport Attachment VPC ID.
	TransportVpcId pulumi.StringOutput `pulumi:"transportVpcId"`
}

// NewAviatrixAwsTgwConnect registers a new resource with the given unique name, arguments, and options.
func NewAviatrixAwsTgwConnect(ctx *pulumi.Context,
	name string, args *AviatrixAwsTgwConnectArgs, opts ...pulumi.ResourceOption) (*AviatrixAwsTgwConnect, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConnectionName == nil {
		return nil, errors.New("invalid value for required argument 'ConnectionName'")
	}
	if args.TgwName == nil {
		return nil, errors.New("invalid value for required argument 'TgwName'")
	}
	if args.TransportVpcId == nil {
		return nil, errors.New("invalid value for required argument 'TransportVpcId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource AviatrixAwsTgwConnect
	err := ctx.RegisterResource("aviatrix:index/aviatrixAwsTgwConnect:AviatrixAwsTgwConnect", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAviatrixAwsTgwConnect gets an existing AviatrixAwsTgwConnect resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAviatrixAwsTgwConnect(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AviatrixAwsTgwConnectState, opts ...pulumi.ResourceOption) (*AviatrixAwsTgwConnect, error) {
	var resource AviatrixAwsTgwConnect
	err := ctx.ReadResource("aviatrix:index/aviatrixAwsTgwConnect:AviatrixAwsTgwConnect", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AviatrixAwsTgwConnect resources.
type aviatrixAwsTgwConnectState struct {
	// Connect Attachment ID.
	ConnectAttachmentId *string `pulumi:"connectAttachmentId"`
	// Connection name.
	ConnectionName *string `pulumi:"connectionName"`
	// Network Domain name.
	NetworkDomainName *string `pulumi:"networkDomainName"`
	// Security Domain name.
	//
	// Deprecated: Please use network_domain_name instead.
	SecurityDomainName *string `pulumi:"securityDomainName"`
	// AWS TGW name.
	TgwName *string `pulumi:"tgwName"`
	// Transport Attachment ID.
	TransportAttachmentId *string `pulumi:"transportAttachmentId"`
	// Transport Attachment VPC ID.
	TransportVpcId *string `pulumi:"transportVpcId"`
}

type AviatrixAwsTgwConnectState struct {
	// Connect Attachment ID.
	ConnectAttachmentId pulumi.StringPtrInput
	// Connection name.
	ConnectionName pulumi.StringPtrInput
	// Network Domain name.
	NetworkDomainName pulumi.StringPtrInput
	// Security Domain name.
	//
	// Deprecated: Please use network_domain_name instead.
	SecurityDomainName pulumi.StringPtrInput
	// AWS TGW name.
	TgwName pulumi.StringPtrInput
	// Transport Attachment ID.
	TransportAttachmentId pulumi.StringPtrInput
	// Transport Attachment VPC ID.
	TransportVpcId pulumi.StringPtrInput
}

func (AviatrixAwsTgwConnectState) ElementType() reflect.Type {
	return reflect.TypeOf((*aviatrixAwsTgwConnectState)(nil)).Elem()
}

type aviatrixAwsTgwConnectArgs struct {
	// Connection name.
	ConnectionName string `pulumi:"connectionName"`
	// Network Domain name.
	NetworkDomainName *string `pulumi:"networkDomainName"`
	// Security Domain name.
	//
	// Deprecated: Please use network_domain_name instead.
	SecurityDomainName *string `pulumi:"securityDomainName"`
	// AWS TGW name.
	TgwName string `pulumi:"tgwName"`
	// Transport Attachment VPC ID.
	TransportVpcId string `pulumi:"transportVpcId"`
}

// The set of arguments for constructing a AviatrixAwsTgwConnect resource.
type AviatrixAwsTgwConnectArgs struct {
	// Connection name.
	ConnectionName pulumi.StringInput
	// Network Domain name.
	NetworkDomainName pulumi.StringPtrInput
	// Security Domain name.
	//
	// Deprecated: Please use network_domain_name instead.
	SecurityDomainName pulumi.StringPtrInput
	// AWS TGW name.
	TgwName pulumi.StringInput
	// Transport Attachment VPC ID.
	TransportVpcId pulumi.StringInput
}

func (AviatrixAwsTgwConnectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*aviatrixAwsTgwConnectArgs)(nil)).Elem()
}

type AviatrixAwsTgwConnectInput interface {
	pulumi.Input

	ToAviatrixAwsTgwConnectOutput() AviatrixAwsTgwConnectOutput
	ToAviatrixAwsTgwConnectOutputWithContext(ctx context.Context) AviatrixAwsTgwConnectOutput
}

func (*AviatrixAwsTgwConnect) ElementType() reflect.Type {
	return reflect.TypeOf((**AviatrixAwsTgwConnect)(nil)).Elem()
}

func (i *AviatrixAwsTgwConnect) ToAviatrixAwsTgwConnectOutput() AviatrixAwsTgwConnectOutput {
	return i.ToAviatrixAwsTgwConnectOutputWithContext(context.Background())
}

func (i *AviatrixAwsTgwConnect) ToAviatrixAwsTgwConnectOutputWithContext(ctx context.Context) AviatrixAwsTgwConnectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixAwsTgwConnectOutput)
}

// AviatrixAwsTgwConnectArrayInput is an input type that accepts AviatrixAwsTgwConnectArray and AviatrixAwsTgwConnectArrayOutput values.
// You can construct a concrete instance of `AviatrixAwsTgwConnectArrayInput` via:
//
//	AviatrixAwsTgwConnectArray{ AviatrixAwsTgwConnectArgs{...} }
type AviatrixAwsTgwConnectArrayInput interface {
	pulumi.Input

	ToAviatrixAwsTgwConnectArrayOutput() AviatrixAwsTgwConnectArrayOutput
	ToAviatrixAwsTgwConnectArrayOutputWithContext(context.Context) AviatrixAwsTgwConnectArrayOutput
}

type AviatrixAwsTgwConnectArray []AviatrixAwsTgwConnectInput

func (AviatrixAwsTgwConnectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AviatrixAwsTgwConnect)(nil)).Elem()
}

func (i AviatrixAwsTgwConnectArray) ToAviatrixAwsTgwConnectArrayOutput() AviatrixAwsTgwConnectArrayOutput {
	return i.ToAviatrixAwsTgwConnectArrayOutputWithContext(context.Background())
}

func (i AviatrixAwsTgwConnectArray) ToAviatrixAwsTgwConnectArrayOutputWithContext(ctx context.Context) AviatrixAwsTgwConnectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixAwsTgwConnectArrayOutput)
}

// AviatrixAwsTgwConnectMapInput is an input type that accepts AviatrixAwsTgwConnectMap and AviatrixAwsTgwConnectMapOutput values.
// You can construct a concrete instance of `AviatrixAwsTgwConnectMapInput` via:
//
//	AviatrixAwsTgwConnectMap{ "key": AviatrixAwsTgwConnectArgs{...} }
type AviatrixAwsTgwConnectMapInput interface {
	pulumi.Input

	ToAviatrixAwsTgwConnectMapOutput() AviatrixAwsTgwConnectMapOutput
	ToAviatrixAwsTgwConnectMapOutputWithContext(context.Context) AviatrixAwsTgwConnectMapOutput
}

type AviatrixAwsTgwConnectMap map[string]AviatrixAwsTgwConnectInput

func (AviatrixAwsTgwConnectMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AviatrixAwsTgwConnect)(nil)).Elem()
}

func (i AviatrixAwsTgwConnectMap) ToAviatrixAwsTgwConnectMapOutput() AviatrixAwsTgwConnectMapOutput {
	return i.ToAviatrixAwsTgwConnectMapOutputWithContext(context.Background())
}

func (i AviatrixAwsTgwConnectMap) ToAviatrixAwsTgwConnectMapOutputWithContext(ctx context.Context) AviatrixAwsTgwConnectMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixAwsTgwConnectMapOutput)
}

type AviatrixAwsTgwConnectOutput struct{ *pulumi.OutputState }

func (AviatrixAwsTgwConnectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AviatrixAwsTgwConnect)(nil)).Elem()
}

func (o AviatrixAwsTgwConnectOutput) ToAviatrixAwsTgwConnectOutput() AviatrixAwsTgwConnectOutput {
	return o
}

func (o AviatrixAwsTgwConnectOutput) ToAviatrixAwsTgwConnectOutputWithContext(ctx context.Context) AviatrixAwsTgwConnectOutput {
	return o
}

// Connect Attachment ID.
func (o AviatrixAwsTgwConnectOutput) ConnectAttachmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixAwsTgwConnect) pulumi.StringOutput { return v.ConnectAttachmentId }).(pulumi.StringOutput)
}

// Connection name.
func (o AviatrixAwsTgwConnectOutput) ConnectionName() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixAwsTgwConnect) pulumi.StringOutput { return v.ConnectionName }).(pulumi.StringOutput)
}

// Network Domain name.
func (o AviatrixAwsTgwConnectOutput) NetworkDomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixAwsTgwConnect) pulumi.StringPtrOutput { return v.NetworkDomainName }).(pulumi.StringPtrOutput)
}

// Security Domain name.
//
// Deprecated: Please use network_domain_name instead.
func (o AviatrixAwsTgwConnectOutput) SecurityDomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AviatrixAwsTgwConnect) pulumi.StringPtrOutput { return v.SecurityDomainName }).(pulumi.StringPtrOutput)
}

// AWS TGW name.
func (o AviatrixAwsTgwConnectOutput) TgwName() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixAwsTgwConnect) pulumi.StringOutput { return v.TgwName }).(pulumi.StringOutput)
}

// Transport Attachment ID.
func (o AviatrixAwsTgwConnectOutput) TransportAttachmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixAwsTgwConnect) pulumi.StringOutput { return v.TransportAttachmentId }).(pulumi.StringOutput)
}

// Transport Attachment VPC ID.
func (o AviatrixAwsTgwConnectOutput) TransportVpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixAwsTgwConnect) pulumi.StringOutput { return v.TransportVpcId }).(pulumi.StringOutput)
}

type AviatrixAwsTgwConnectArrayOutput struct{ *pulumi.OutputState }

func (AviatrixAwsTgwConnectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AviatrixAwsTgwConnect)(nil)).Elem()
}

func (o AviatrixAwsTgwConnectArrayOutput) ToAviatrixAwsTgwConnectArrayOutput() AviatrixAwsTgwConnectArrayOutput {
	return o
}

func (o AviatrixAwsTgwConnectArrayOutput) ToAviatrixAwsTgwConnectArrayOutputWithContext(ctx context.Context) AviatrixAwsTgwConnectArrayOutput {
	return o
}

func (o AviatrixAwsTgwConnectArrayOutput) Index(i pulumi.IntInput) AviatrixAwsTgwConnectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AviatrixAwsTgwConnect {
		return vs[0].([]*AviatrixAwsTgwConnect)[vs[1].(int)]
	}).(AviatrixAwsTgwConnectOutput)
}

type AviatrixAwsTgwConnectMapOutput struct{ *pulumi.OutputState }

func (AviatrixAwsTgwConnectMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AviatrixAwsTgwConnect)(nil)).Elem()
}

func (o AviatrixAwsTgwConnectMapOutput) ToAviatrixAwsTgwConnectMapOutput() AviatrixAwsTgwConnectMapOutput {
	return o
}

func (o AviatrixAwsTgwConnectMapOutput) ToAviatrixAwsTgwConnectMapOutputWithContext(ctx context.Context) AviatrixAwsTgwConnectMapOutput {
	return o
}

func (o AviatrixAwsTgwConnectMapOutput) MapIndex(k pulumi.StringInput) AviatrixAwsTgwConnectOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AviatrixAwsTgwConnect {
		return vs[0].(map[string]*AviatrixAwsTgwConnect)[vs[1].(string)]
	}).(AviatrixAwsTgwConnectOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixAwsTgwConnectInput)(nil)).Elem(), &AviatrixAwsTgwConnect{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixAwsTgwConnectArrayInput)(nil)).Elem(), AviatrixAwsTgwConnectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixAwsTgwConnectMapInput)(nil)).Elem(), AviatrixAwsTgwConnectMap{})
	pulumi.RegisterOutputType(AviatrixAwsTgwConnectOutput{})
	pulumi.RegisterOutputType(AviatrixAwsTgwConnectArrayOutput{})
	pulumi.RegisterOutputType(AviatrixAwsTgwConnectMapOutput{})
}
