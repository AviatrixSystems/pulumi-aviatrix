// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aviatrix
{
    [AviatrixResourceType("aviatrix:index/aviatrixVpc:AviatrixVpc")]
    public partial class AviatrixVpc : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Account name. This account will be used to create an Aviatrix VPC.
        /// </summary>
        [Output("accountName")]
        public Output<string> AccountName { get; private set; } = null!;

        /// <summary>
        /// List of OCI availability domains.
        /// </summary>
        [Output("availabilityDomains")]
        public Output<ImmutableArray<string>> AvailabilityDomains { get; private set; } = null!;

        /// <summary>
        /// Specify the VPC as Aviatrix FireNet VPC or not. Required to be false for GCP provider.
        /// </summary>
        [Output("aviatrixFirenetVpc")]
        public Output<bool?> AviatrixFirenetVpc { get; private set; } = null!;

        /// <summary>
        /// Specify the VPC as Aviatrix Transit VPC or not. Required to be false for GCP provider.
        /// </summary>
        [Output("aviatrixTransitVpc")]
        public Output<bool?> AviatrixTransitVpc { get; private set; } = null!;

        /// <summary>
        /// Azure vnet resource ID.
        /// </summary>
        [Output("azureVnetResourceId")]
        public Output<string> AzureVnetResourceId { get; private set; } = null!;

        /// <summary>
        /// Subnet of the VPC to be created. Required to be empty for GCP provider, and non-empty for other providers.
        /// </summary>
        [Output("cidr")]
        public Output<string?> Cidr { get; private set; } = null!;

        /// <summary>
        /// Type of cloud service provider.
        /// </summary>
        [Output("cloudType")]
        public Output<int> CloudType { get; private set; } = null!;

        /// <summary>
        /// Enable Native AWS GWLB for FireNet Function. Only valid with cloud_type = 1 (AWS). Valid values: true or false. Default
        /// value: false. Available as of provider version R2.18+.
        /// </summary>
        [Output("enableNativeGwlb")]
        public Output<bool?> EnableNativeGwlb { get; private set; } = null!;

        /// <summary>
        /// Switch to enable private oob subnet. Only supported for AWS/AWSGov provider. Valid values: true, false. Default value:
        /// false.
        /// </summary>
        [Output("enablePrivateOobSubnet")]
        public Output<bool?> EnablePrivateOobSubnet { get; private set; } = null!;

        /// <summary>
        /// List of OCI fault domains.
        /// </summary>
        [Output("faultDomains")]
        public Output<ImmutableArray<string>> FaultDomains { get; private set; } = null!;

        /// <summary>
        /// Name of the VPC to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Number of public subnet and private subnet pair to be created.
        /// </summary>
        [Output("numOfSubnetPairs")]
        public Output<int?> NumOfSubnetPairs { get; private set; } = null!;

        /// <summary>
        /// Switch to only launch private subnets. Only available when Private Mode is enabled on the Controller.
        /// </summary>
        [Output("privateModeSubnets")]
        public Output<bool?> PrivateModeSubnets { get; private set; } = null!;

        /// <summary>
        /// List of private subnet of the VPC to be created.
        /// </summary>
        [Output("privateSubnets")]
        public Output<ImmutableArray<Outputs.AviatrixVpcPrivateSubnet>> PrivateSubnets { get; private set; } = null!;

        /// <summary>
        /// List of public subnet of the VPC to be created.
        /// </summary>
        [Output("publicSubnets")]
        public Output<ImmutableArray<Outputs.AviatrixVpcPublicSubnet>> PublicSubnets { get; private set; } = null!;

        /// <summary>
        /// Region of cloud provider. Required to be empty for GCP provider, and non-empty for other providers.
        /// </summary>
        [Output("region")]
        public Output<string?> Region { get; private set; } = null!;

        /// <summary>
        /// Resource group of the Azure VPC created.
        /// </summary>
        [Output("resourceGroup")]
        public Output<string> ResourceGroup { get; private set; } = null!;

        /// <summary>
        /// List of route table ids associated with this VPC.
        /// </summary>
        [Output("routeTables")]
        public Output<ImmutableArray<string>> RouteTables { get; private set; } = null!;

        /// <summary>
        /// Subnet size.
        /// </summary>
        [Output("subnetSize")]
        public Output<int?> SubnetSize { get; private set; } = null!;

        /// <summary>
        /// List of subnet of the VPC to be created. Required to be non-empty for GCP provider, and empty for other providers.
        /// </summary>
        [Output("subnets")]
        public Output<ImmutableArray<Outputs.AviatrixVpcSubnet>> Subnets { get; private set; } = null!;

        /// <summary>
        /// ID of the VPC created.
        /// </summary>
        [Output("vpcId")]
        public Output<string> VpcId { get; private set; } = null!;


        /// <summary>
        /// Create a AviatrixVpc resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AviatrixVpc(string name, AviatrixVpcArgs args, CustomResourceOptions? options = null)
            : base("aviatrix:index/aviatrixVpc:AviatrixVpc", name, args ?? new AviatrixVpcArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AviatrixVpc(string name, Input<string> id, AviatrixVpcState? state = null, CustomResourceOptions? options = null)
            : base("aviatrix:index/aviatrixVpc:AviatrixVpc", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/astipkovits/pulumi-aviatrix/releases/",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AviatrixVpc resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AviatrixVpc Get(string name, Input<string> id, AviatrixVpcState? state = null, CustomResourceOptions? options = null)
        {
            return new AviatrixVpc(name, id, state, options);
        }
    }

    public sealed class AviatrixVpcArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Account name. This account will be used to create an Aviatrix VPC.
        /// </summary>
        [Input("accountName", required: true)]
        public Input<string> AccountName { get; set; } = null!;

        /// <summary>
        /// Specify the VPC as Aviatrix FireNet VPC or not. Required to be false for GCP provider.
        /// </summary>
        [Input("aviatrixFirenetVpc")]
        public Input<bool>? AviatrixFirenetVpc { get; set; }

        /// <summary>
        /// Specify the VPC as Aviatrix Transit VPC or not. Required to be false for GCP provider.
        /// </summary>
        [Input("aviatrixTransitVpc")]
        public Input<bool>? AviatrixTransitVpc { get; set; }

        /// <summary>
        /// Subnet of the VPC to be created. Required to be empty for GCP provider, and non-empty for other providers.
        /// </summary>
        [Input("cidr")]
        public Input<string>? Cidr { get; set; }

        /// <summary>
        /// Type of cloud service provider.
        /// </summary>
        [Input("cloudType", required: true)]
        public Input<int> CloudType { get; set; } = null!;

        /// <summary>
        /// Enable Native AWS GWLB for FireNet Function. Only valid with cloud_type = 1 (AWS). Valid values: true or false. Default
        /// value: false. Available as of provider version R2.18+.
        /// </summary>
        [Input("enableNativeGwlb")]
        public Input<bool>? EnableNativeGwlb { get; set; }

        /// <summary>
        /// Switch to enable private oob subnet. Only supported for AWS/AWSGov provider. Valid values: true, false. Default value:
        /// false.
        /// </summary>
        [Input("enablePrivateOobSubnet")]
        public Input<bool>? EnablePrivateOobSubnet { get; set; }

        /// <summary>
        /// Name of the VPC to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Number of public subnet and private subnet pair to be created.
        /// </summary>
        [Input("numOfSubnetPairs")]
        public Input<int>? NumOfSubnetPairs { get; set; }

        /// <summary>
        /// Switch to only launch private subnets. Only available when Private Mode is enabled on the Controller.
        /// </summary>
        [Input("privateModeSubnets")]
        public Input<bool>? PrivateModeSubnets { get; set; }

        /// <summary>
        /// Region of cloud provider. Required to be empty for GCP provider, and non-empty for other providers.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// Resource group of the Azure VPC created.
        /// </summary>
        [Input("resourceGroup")]
        public Input<string>? ResourceGroup { get; set; }

        /// <summary>
        /// Subnet size.
        /// </summary>
        [Input("subnetSize")]
        public Input<int>? SubnetSize { get; set; }

        [Input("subnets")]
        private InputList<Inputs.AviatrixVpcSubnetArgs>? _subnets;

        /// <summary>
        /// List of subnet of the VPC to be created. Required to be non-empty for GCP provider, and empty for other providers.
        /// </summary>
        public InputList<Inputs.AviatrixVpcSubnetArgs> Subnets
        {
            get => _subnets ?? (_subnets = new InputList<Inputs.AviatrixVpcSubnetArgs>());
            set => _subnets = value;
        }

        public AviatrixVpcArgs()
        {
        }
        public static new AviatrixVpcArgs Empty => new AviatrixVpcArgs();
    }

    public sealed class AviatrixVpcState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Account name. This account will be used to create an Aviatrix VPC.
        /// </summary>
        [Input("accountName")]
        public Input<string>? AccountName { get; set; }

        [Input("availabilityDomains")]
        private InputList<string>? _availabilityDomains;

        /// <summary>
        /// List of OCI availability domains.
        /// </summary>
        public InputList<string> AvailabilityDomains
        {
            get => _availabilityDomains ?? (_availabilityDomains = new InputList<string>());
            set => _availabilityDomains = value;
        }

        /// <summary>
        /// Specify the VPC as Aviatrix FireNet VPC or not. Required to be false for GCP provider.
        /// </summary>
        [Input("aviatrixFirenetVpc")]
        public Input<bool>? AviatrixFirenetVpc { get; set; }

        /// <summary>
        /// Specify the VPC as Aviatrix Transit VPC or not. Required to be false for GCP provider.
        /// </summary>
        [Input("aviatrixTransitVpc")]
        public Input<bool>? AviatrixTransitVpc { get; set; }

        /// <summary>
        /// Azure vnet resource ID.
        /// </summary>
        [Input("azureVnetResourceId")]
        public Input<string>? AzureVnetResourceId { get; set; }

        /// <summary>
        /// Subnet of the VPC to be created. Required to be empty for GCP provider, and non-empty for other providers.
        /// </summary>
        [Input("cidr")]
        public Input<string>? Cidr { get; set; }

        /// <summary>
        /// Type of cloud service provider.
        /// </summary>
        [Input("cloudType")]
        public Input<int>? CloudType { get; set; }

        /// <summary>
        /// Enable Native AWS GWLB for FireNet Function. Only valid with cloud_type = 1 (AWS). Valid values: true or false. Default
        /// value: false. Available as of provider version R2.18+.
        /// </summary>
        [Input("enableNativeGwlb")]
        public Input<bool>? EnableNativeGwlb { get; set; }

        /// <summary>
        /// Switch to enable private oob subnet. Only supported for AWS/AWSGov provider. Valid values: true, false. Default value:
        /// false.
        /// </summary>
        [Input("enablePrivateOobSubnet")]
        public Input<bool>? EnablePrivateOobSubnet { get; set; }

        [Input("faultDomains")]
        private InputList<string>? _faultDomains;

        /// <summary>
        /// List of OCI fault domains.
        /// </summary>
        public InputList<string> FaultDomains
        {
            get => _faultDomains ?? (_faultDomains = new InputList<string>());
            set => _faultDomains = value;
        }

        /// <summary>
        /// Name of the VPC to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Number of public subnet and private subnet pair to be created.
        /// </summary>
        [Input("numOfSubnetPairs")]
        public Input<int>? NumOfSubnetPairs { get; set; }

        /// <summary>
        /// Switch to only launch private subnets. Only available when Private Mode is enabled on the Controller.
        /// </summary>
        [Input("privateModeSubnets")]
        public Input<bool>? PrivateModeSubnets { get; set; }

        [Input("privateSubnets")]
        private InputList<Inputs.AviatrixVpcPrivateSubnetGetArgs>? _privateSubnets;

        /// <summary>
        /// List of private subnet of the VPC to be created.
        /// </summary>
        public InputList<Inputs.AviatrixVpcPrivateSubnetGetArgs> PrivateSubnets
        {
            get => _privateSubnets ?? (_privateSubnets = new InputList<Inputs.AviatrixVpcPrivateSubnetGetArgs>());
            set => _privateSubnets = value;
        }

        [Input("publicSubnets")]
        private InputList<Inputs.AviatrixVpcPublicSubnetGetArgs>? _publicSubnets;

        /// <summary>
        /// List of public subnet of the VPC to be created.
        /// </summary>
        public InputList<Inputs.AviatrixVpcPublicSubnetGetArgs> PublicSubnets
        {
            get => _publicSubnets ?? (_publicSubnets = new InputList<Inputs.AviatrixVpcPublicSubnetGetArgs>());
            set => _publicSubnets = value;
        }

        /// <summary>
        /// Region of cloud provider. Required to be empty for GCP provider, and non-empty for other providers.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// Resource group of the Azure VPC created.
        /// </summary>
        [Input("resourceGroup")]
        public Input<string>? ResourceGroup { get; set; }

        [Input("routeTables")]
        private InputList<string>? _routeTables;

        /// <summary>
        /// List of route table ids associated with this VPC.
        /// </summary>
        public InputList<string> RouteTables
        {
            get => _routeTables ?? (_routeTables = new InputList<string>());
            set => _routeTables = value;
        }

        /// <summary>
        /// Subnet size.
        /// </summary>
        [Input("subnetSize")]
        public Input<int>? SubnetSize { get; set; }

        [Input("subnets")]
        private InputList<Inputs.AviatrixVpcSubnetGetArgs>? _subnets;

        /// <summary>
        /// List of subnet of the VPC to be created. Required to be non-empty for GCP provider, and empty for other providers.
        /// </summary>
        public InputList<Inputs.AviatrixVpcSubnetGetArgs> Subnets
        {
            get => _subnets ?? (_subnets = new InputList<Inputs.AviatrixVpcSubnetGetArgs>());
            set => _subnets = value;
        }

        /// <summary>
        /// ID of the VPC created.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public AviatrixVpcState()
        {
        }
        public static new AviatrixVpcState Empty => new AviatrixVpcState();
    }
}
