// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aviatrix
{
    [AviatrixResourceType("aviatrix:index/aviatrixControllerPrivateModeConfig:AviatrixControllerPrivateModeConfig")]
    public partial class AviatrixControllerPrivateModeConfig : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Copilot instance ID to associate with the Controller for Private Mode.
        /// </summary>
        [Output("copilotInstanceId")]
        public Output<string?> CopilotInstanceId { get; private set; } = null!;

        /// <summary>
        /// Whether to enable Private Mode on the Controller.
        /// </summary>
        [Output("enablePrivateMode")]
        public Output<bool> EnablePrivateMode { get; private set; } = null!;

        /// <summary>
        /// Set of proxies.
        /// </summary>
        [Output("proxies")]
        public Output<ImmutableArray<string>> Proxies { get; private set; } = null!;


        /// <summary>
        /// Create a AviatrixControllerPrivateModeConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AviatrixControllerPrivateModeConfig(string name, AviatrixControllerPrivateModeConfigArgs args, CustomResourceOptions? options = null)
            : base("aviatrix:index/aviatrixControllerPrivateModeConfig:AviatrixControllerPrivateModeConfig", name, args ?? new AviatrixControllerPrivateModeConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AviatrixControllerPrivateModeConfig(string name, Input<string> id, AviatrixControllerPrivateModeConfigState? state = null, CustomResourceOptions? options = null)
            : base("aviatrix:index/aviatrixControllerPrivateModeConfig:AviatrixControllerPrivateModeConfig", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/astipkovits/pulumi-aviatrix/raw/main/releases/",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AviatrixControllerPrivateModeConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AviatrixControllerPrivateModeConfig Get(string name, Input<string> id, AviatrixControllerPrivateModeConfigState? state = null, CustomResourceOptions? options = null)
        {
            return new AviatrixControllerPrivateModeConfig(name, id, state, options);
        }
    }

    public sealed class AviatrixControllerPrivateModeConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Copilot instance ID to associate with the Controller for Private Mode.
        /// </summary>
        [Input("copilotInstanceId")]
        public Input<string>? CopilotInstanceId { get; set; }

        /// <summary>
        /// Whether to enable Private Mode on the Controller.
        /// </summary>
        [Input("enablePrivateMode", required: true)]
        public Input<bool> EnablePrivateMode { get; set; } = null!;

        [Input("proxies")]
        private InputList<string>? _proxies;

        /// <summary>
        /// Set of proxies.
        /// </summary>
        public InputList<string> Proxies
        {
            get => _proxies ?? (_proxies = new InputList<string>());
            set => _proxies = value;
        }

        public AviatrixControllerPrivateModeConfigArgs()
        {
        }
        public static new AviatrixControllerPrivateModeConfigArgs Empty => new AviatrixControllerPrivateModeConfigArgs();
    }

    public sealed class AviatrixControllerPrivateModeConfigState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Copilot instance ID to associate with the Controller for Private Mode.
        /// </summary>
        [Input("copilotInstanceId")]
        public Input<string>? CopilotInstanceId { get; set; }

        /// <summary>
        /// Whether to enable Private Mode on the Controller.
        /// </summary>
        [Input("enablePrivateMode")]
        public Input<bool>? EnablePrivateMode { get; set; }

        [Input("proxies")]
        private InputList<string>? _proxies;

        /// <summary>
        /// Set of proxies.
        /// </summary>
        public InputList<string> Proxies
        {
            get => _proxies ?? (_proxies = new InputList<string>());
            set => _proxies = value;
        }

        public AviatrixControllerPrivateModeConfigState()
        {
        }
        public static new AviatrixControllerPrivateModeConfigState Empty => new AviatrixControllerPrivateModeConfigState();
    }
}
