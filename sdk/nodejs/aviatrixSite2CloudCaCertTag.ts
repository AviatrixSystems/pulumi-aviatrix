// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

export class AviatrixSite2CloudCaCertTag extends pulumi.CustomResource {
    /**
     * Get an existing AviatrixSite2CloudCaCertTag resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AviatrixSite2CloudCaCertTagState, opts?: pulumi.CustomResourceOptions): AviatrixSite2CloudCaCertTag {
        return new AviatrixSite2CloudCaCertTag(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aviatrix:index/aviatrixSite2CloudCaCertTag:AviatrixSite2CloudCaCertTag';

    /**
     * Returns true if the given object is an instance of AviatrixSite2CloudCaCertTag.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AviatrixSite2CloudCaCertTag {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AviatrixSite2CloudCaCertTag.__pulumiType;
    }

    /**
     * A set of CA certificates.
     */
    public readonly caCertificates!: pulumi.Output<outputs.AviatrixSite2CloudCaCertTagCaCertificate[]>;
    /**
     * Unique name of the ca cert tag.
     */
    public readonly tagName!: pulumi.Output<string>;

    /**
     * Create a AviatrixSite2CloudCaCertTag resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AviatrixSite2CloudCaCertTagArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AviatrixSite2CloudCaCertTagArgs | AviatrixSite2CloudCaCertTagState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AviatrixSite2CloudCaCertTagState | undefined;
            resourceInputs["caCertificates"] = state ? state.caCertificates : undefined;
            resourceInputs["tagName"] = state ? state.tagName : undefined;
        } else {
            const args = argsOrState as AviatrixSite2CloudCaCertTagArgs | undefined;
            if ((!args || args.caCertificates === undefined) && !opts.urn) {
                throw new Error("Missing required property 'caCertificates'");
            }
            if ((!args || args.tagName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tagName'");
            }
            resourceInputs["caCertificates"] = args ? args.caCertificates : undefined;
            resourceInputs["tagName"] = args ? args.tagName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AviatrixSite2CloudCaCertTag.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AviatrixSite2CloudCaCertTag resources.
 */
export interface AviatrixSite2CloudCaCertTagState {
    /**
     * A set of CA certificates.
     */
    caCertificates?: pulumi.Input<pulumi.Input<inputs.AviatrixSite2CloudCaCertTagCaCertificate>[]>;
    /**
     * Unique name of the ca cert tag.
     */
    tagName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AviatrixSite2CloudCaCertTag resource.
 */
export interface AviatrixSite2CloudCaCertTagArgs {
    /**
     * A set of CA certificates.
     */
    caCertificates: pulumi.Input<pulumi.Input<inputs.AviatrixSite2CloudCaCertTagCaCertificate>[]>;
    /**
     * Unique name of the ca cert tag.
     */
    tagName: pulumi.Input<string>;
}
