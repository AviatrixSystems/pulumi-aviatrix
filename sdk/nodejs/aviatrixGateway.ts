// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Import
 *
 * **gateway** can be imported using the `gw_name`, e.g.
 *
 * ```sh
 *  $ pulumi import aviatrix:index/aviatrixGateway:AviatrixGateway test gw_name
 * ```
 */
export class AviatrixGateway extends pulumi.CustomResource {
    /**
     * Get an existing AviatrixGateway resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AviatrixGatewayState, opts?: pulumi.CustomResourceOptions): AviatrixGateway {
        return new AviatrixGateway(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aviatrix:index/aviatrixGateway:AviatrixGateway';

    /**
     * Returns true if the given object is an instance of AviatrixGateway.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AviatrixGateway {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AviatrixGateway.__pulumiType;
    }

    /**
     * Account name. This account will be used to launch Aviatrix gateway.
     */
    public readonly accountName!: pulumi.Output<string>;
    /**
     * A list of destination CIDR ranges that will also go through the VPN tunnel when Split Tunnel Mode is enabled.
     */
    public readonly additionalCidrs!: pulumi.Output<string | undefined>;
    /**
     * A list of CIDR ranges separated by comma to configure when "Designated Gateway" feature is enabled. Example: "10.8.0.0/16,10.9.0.0/16,10.10.0.0/16".
     */
    public readonly additionalCidrsDesignatedGateway!: pulumi.Output<string | undefined>;
    /**
     * If set to false, use an available address in Elastic IP pool for this gateway. Otherwise, allocate a new Elastic IP and use it for this gateway. Available in Controller 2.7+. Valid values: true, false. Default: true.
     */
    public readonly allocateNewEip!: pulumi.Output<boolean | undefined>;
    /**
     * Availability domain. Required and valid only for OCI. Available as of provider version R2.19.3.
     */
    public readonly availabilityDomain!: pulumi.Output<string>;
    /**
     * Name of public IP Address resource and its resource group in Azure to be assigned to the gateway instance. Example: "IP_Name:Resource_Group_Name". Required when `allocateNewEip` is false and `cloudType` is Azure, AzureGov or AzureChina. Available as of provider version 2.20+.
     */
    public readonly azureEipNameResourceGroup!: pulumi.Output<string>;
    /**
     * Cloud instance ID of the gateway.
     */
    public /*out*/ readonly cloudInstanceId!: pulumi.Output<string>;
    /**
     * Cloud service provider to use to launch the gateway. Requires an integer value. Currently supports AWS(1), GCP(4), Azure(8), OCI(16), AzureGov(32), AWSGov(256), AWSChina(1024), AzureChina(2048), Alibaba Cloud (8192), AWS Top Secret (16384) and AWS Secret (32768).
     */
    public readonly cloudType!: pulumi.Output<number>;
    /**
     * Customer-managed key ID.
     */
    public readonly customerManagedKeys!: pulumi.Output<string | undefined>;
    /**
     * API hostname for DUO auth mode. Required: Yes if `otpMode` is "2".
     */
    public readonly duoApiHostname!: pulumi.Output<string | undefined>;
    /**
     * Integration key for DUO auth mode. Required if `otpMode` is "2".
     */
    public readonly duoIntegrationKey!: pulumi.Output<string | undefined>;
    /**
     * Push mode for DUO auth. Required if `otpMode` is "2". Valid values: "auto", "selective" and "token".
     */
    public readonly duoPushMode!: pulumi.Output<string | undefined>;
    /**
     * Secret key for DUO auth mode. Required if `otpMode` is "2".
     */
    public readonly duoSecretKey!: pulumi.Output<string | undefined>;
    /**
     * Specified EIP to use for gateway creation. Required when `allocateNewEip` is false.  Available in Controller version 3.5+. Only available for AWS, GCP, Azure, OCI, AzureGov, AWSGov, AWSChina, AzureChina, AWS Top Secret and AWS Secret.
     */
    public readonly eip!: pulumi.Output<string>;
    /**
     * ELB DNS name.
     */
    public /*out*/ readonly elbDnsName!: pulumi.Output<string>;
    /**
     * A name for the ELB that is created. If it is not specified, a name is generated automatically.
     */
    public readonly elbName!: pulumi.Output<string>;
    /**
     * Enable Designated Gateway feature for Gateway. Only supported for AWS, AWSGov, AWSChina, AWS Top Secret and AWS Secret gateways. Valid values: true, false. Default value: false. Please view documentation [here](https://docs.aviatrix.com/HowTos/gateway.html#designated-gateway) for more information on this feature.
     */
    public readonly enableDesignatedGateway!: pulumi.Output<boolean | undefined>;
    /**
     * Specify whether to enable ELB or not. Not supported for OCI gateways. Valid values: true, false.
     */
    public readonly enableElb!: pulumi.Output<boolean | undefined>;
    /**
     * Enable EBS volume encryption for the gateway. Only supported for AWS, AWSGov, AWSChina, AWS Top Secret and AWS Secret gateways. Valid values: true, false. Default value: false.
     */
    public readonly enableEncryptVolume!: pulumi.Output<boolean | undefined>;
    /**
     * Enable jumbo frames for this gateway. Default value is true.
     */
    public readonly enableJumboFrame!: pulumi.Output<boolean | undefined>;
    /**
     * Enable/disable LDAP. Valid values: true, false. Default value: false.
     */
    public readonly enableLdap!: pulumi.Output<boolean | undefined>;
    /**
     * If set to true, the [Monitor Gateway Subnets](https://docs.aviatrix.com/HowTos/gateway.html#monitor-gateway-subnet) feature is enabled. Default value is false. Available in provider version R2.17.1+.
     */
    public readonly enableMonitorGatewaySubnets!: pulumi.Output<boolean | undefined>;
    /**
     * Create a [Public Subnet Filtering gateway](https://docs.aviatrix.com/HowTos/public_subnet_filtering_faq.html).
     */
    public readonly enablePublicSubnetFiltering!: pulumi.Output<boolean | undefined>;
    /**
     * Enable spot instance. NOT supported for production deployment.
     */
    public readonly enableSpotInstance!: pulumi.Output<boolean | undefined>;
    /**
     * Enable VPC DNS Server for gateway. Currently only supported for AWS, Azure, AzureGov, AWSGov, AWSChina, AzureChina, Alibaba Cloud, AWS Top Secret and AWS Secret gateways. Valid values: true, false. Default value: false.
     */
    public readonly enableVpcDnsServer!: pulumi.Output<boolean | undefined>;
    /**
     * Enable/disable VPN NAT. Only supported for VPN gateway. Valid values: true, false. Default value: true.
     */
    public readonly enableVpnNat!: pulumi.Output<boolean | undefined>;
    /**
     * Fault domain. Required and valid only for OCI. Available as of provider version R2.19.3.
     */
    public readonly faultDomain!: pulumi.Output<string>;
    /**
     * If `fqdnLanCidr` is set, the FQDN gateway will be created with an additional LAN interface using the provided CIDR. This attribute is required when enabling FQDN gateway FireNet in Azure or GCP. Available in provider version R2.17.1+.
     */
    public readonly fqdnLanCidr!: pulumi.Output<string | undefined>;
    /**
     * The lan interface id of the of FQDN gateway with additional LAN interface. This attribute will be exported when enabling FQDN gateway firenet in Azure. Available in provider version R2.17.1+.
     */
    public /*out*/ readonly fqdnLanInterface!: pulumi.Output<string>;
    /**
     * FQDN LAN VPC ID. This attribute is required when enabling FQDN gateway FireNet in GCP. Available as of provider version R2.18.1+.
     */
    public readonly fqdnLanVpcId!: pulumi.Output<string | undefined>;
    /**
     * Name of the Aviatrix gateway to be created.
     */
    public readonly gwName!: pulumi.Output<string>;
    /**
     * Size of the gateway instance. Example: AWS/AWSGov/AWSChina: "t2.large", GCP: "n1-standard-1", Azure/AzureGov/AzureChina: "Standard_B1s", OCI: "VM.Standard2.2".
     */
    public readonly gwSize!: pulumi.Output<string>;
    /**
     * It sets the value (seconds) of the [idle timeout](https://docs.aviatrix.com/HowTos/openvpn_faq.html#how-do-i-fix-the-aviatrix-vpn-timing-out-too-quickly). This idle timeout feature is enable only if this attribute is set, otherwise it is disabled. The entered value must be an integer number greater than 300.  Available in provider version R2.17.1+.
     */
    public readonly idleTimeout!: pulumi.Output<number | undefined>;
    /**
     * The image version of the gateway. Use `aviatrix.getAviatrixGatewayImage` data source to programmatically retrieve this value for the desired `softwareVersion`. If set, we will attempt to update the gateway to the specified version if current version is different. If left blank, the gateway upgrades can be managed with the `aviatrix.AviatrixControllerConfig` resource. Type: String. Example: "hvm-cloudx-aws-022021". Available as of provider version R2.20.0.
     */
    public readonly imageVersion!: pulumi.Output<string>;
    /**
     * Enable [Insane Mode](https://docs.aviatrix.com/HowTos/insane_mode.html) for Gateway. Insane Mode gateway size must be at least c5 series (AWS) or Standard_D3_v2 (Azure/AzureGov). If enabled, a valid /26 CIDR segment of the VPC must be specified to create a new subnet. Only supported for AWS, AWSGov, Azure, AzureGov, AWS China, Azure China, AWS Top Secret or AWS Secret.  Valid values: true, false.
     */
    public readonly insaneMode!: pulumi.Output<boolean | undefined>;
    /**
     * Region + Availability Zone of subnet being created for Insane Mode gateway. Required for AWS, AWSGov, AWS China, AWS Top Secret or AWS Secret if `insaneMode` is set. Example: AWS: "us-west-1a".
     */
    public readonly insaneModeAz!: pulumi.Output<string | undefined>;
    /**
     * LDAP base DN. Required if `enableLdap` is true.
     */
    public readonly ldapBaseDn!: pulumi.Output<string | undefined>;
    /**
     * LDAP bind DN. Required if `enableLdap` is true.
     */
    public readonly ldapBindDn!: pulumi.Output<string | undefined>;
    /**
     * LDAP password. Required if `enableLdap` is true.
     */
    public readonly ldapPassword!: pulumi.Output<string | undefined>;
    /**
     * LDAP server address. Required if `enableLdap` is true.
     */
    public readonly ldapServer!: pulumi.Output<string | undefined>;
    /**
     * LDAP user attribute. Required if `enableLdap` is true.
     */
    public readonly ldapUsernameAttribute!: pulumi.Output<string | undefined>;
    /**
     * Maximum number of active VPN users allowed to be connected to this gateway. Required if `vpnAccess` is true. Make sure the number is smaller than the VPN CIDR block. Example: 100. **NOTE: Please see notes here in regards to any deltas found in your state with the addition of this argument in R1.14.**
     */
    public readonly maxVpnConn!: pulumi.Output<string | undefined>;
    /**
     * Set of monitored instance ids. Only valid when 'enable_monitor_gateway_subnets' = true. Available in provider version R2.17.1+.
     */
    public readonly monitorExcludeLists!: pulumi.Output<string[] | undefined>;
    /**
     * A list of DNS servers used to resolve domain names by a connected VPN user when Split Tunnel Mode is enabled.
     */
    public readonly nameServers!: pulumi.Output<string | undefined>;
    /**
     * Token for Okta auth mode. Required if `otpMode` is "3".
     */
    public readonly oktaToken!: pulumi.Output<string | undefined>;
    /**
     * URL for Okta auth mode. Required if `otpMode` is "3".
     */
    public readonly oktaUrl!: pulumi.Output<string | undefined>;
    /**
     * Username suffix for Okta auth mode. Example: "aviatrix.com".
     */
    public readonly oktaUsernameSuffix!: pulumi.Output<string | undefined>;
    /**
     * Two step authentication mode. Valid values: "2" for DUO, "3" for Okta.
     */
    public readonly otpMode!: pulumi.Output<string | undefined>;
    /**
     * Peering HA gateway availability domain. Required and valid only for OCI. Available as of provider version R2.19.3.
     */
    public readonly peeringHaAvailabilityDomain!: pulumi.Output<string>;
    /**
     * Name of public IP address resource and its resource group in Azure to be assigned to the HA peering instance. Example: "IP_Name:Resource_Group_Name". Required if `peeringHaEip` is set and `cloudType` is Azure, AzureGov or AzureChina. Available as of provider version 2.20+.
     */
    public readonly peeringHaAzureEipNameResourceGroup!: pulumi.Output<string>;
    /**
     * Cloud instance ID of the HA gateway.
     */
    public /*out*/ readonly peeringHaCloudInstanceId!: pulumi.Output<string>;
    /**
     * Public IP address to be assigned to the HA peering instance. Only available for AWS, GCP, Azure, OCI, AzureGov, AWSGov, AWSChina, AzureChina, AWS Top Secret and AWS Secret.
     */
    public readonly peeringHaEip!: pulumi.Output<string>;
    /**
     * Peering HA gateway fault domain. Required and valid only for OCI. Available as of provider version R2.19.3.
     */
    public readonly peeringHaFaultDomain!: pulumi.Output<string>;
    /**
     * Aviatrix gateway unique name of HA gateway.
     */
    public /*out*/ readonly peeringHaGwName!: pulumi.Output<string>;
    /**
     * Size of the Peering HA Gateway to be created. Required if enabling Peering HA. **NOTE: Please see notes here in regards to any deltas found in your state with the addition of this argument in R1.8.**
     */
    public readonly peeringHaGwSize!: pulumi.Output<string | undefined>;
    /**
     * The image version of the HA gateway. Use `aviatrix.getAviatrixGatewayImage` data source to programmatically retrieve this value for the desired `haSoftwareVersion`. If set, we will attempt to update the HA gateway to the specified version if current version is different. If left blank, the gateway upgrades can be managed with the `aviatrix.AviatrixControllerConfig` resource. Type: String. Example: "hvm-cloudx-aws-022021". Available as of provider version R2.20.0.
     */
    public readonly peeringHaImageVersion!: pulumi.Output<string>;
    /**
     * Region + Availability Zone of subnet being created for Insane Mode-enabled Peering HA Gateway. Required for AWS only if `insaneMode` is set and `peeringHaSubnet` is set. Example: AWS: "us-west-1a".
     */
    public readonly peeringHaInsaneModeAz!: pulumi.Output<string | undefined>;
    /**
     * Private IP address of HA gateway.
     */
    public /*out*/ readonly peeringHaPrivateIp!: pulumi.Output<string>;
    /**
     * HA security group used for the gateway.
     */
    public /*out*/ readonly peeringHaSecurityGroupId!: pulumi.Output<string>;
    /**
     * The software version of the HA gateway. If set, we will attempt to update the HA gateway to the specified version if current version is different. If left blank, the HA gateway upgrade can be managed with the `aviatrix.AviatrixControllerConfig` resource. Type: String. Example: "6.5.821". Available as of provider version R2.20.0.
     */
    public readonly peeringHaSoftwareVersion!: pulumi.Output<string>;
    /**
     * Public subnet CIDR to create Peering HA Gateway in. Required if enabling Peering HA for AWS/AWSGov/AWS Top Secret/AWS Secret/Azure/AzureGov/Alibaba Cloud. Optional if enabling Peering HA for GCP. Example: AWS: "10.0.0.0/16".
     */
    public readonly peeringHaSubnet!: pulumi.Output<string | undefined>;
    /**
     * Zone to create Peering HA Gateway in. Required if enabling Peering HA for GCP. Example: GCP: "us-west1-c". Optional for Azure. Valid values for Azure gateways are in the form "az-n". Example: "az-2". Available for Azure as of provider version R2.17+.
     */
    public readonly peeringHaZone!: pulumi.Output<string | undefined>;
    /**
     * Private IP address of the gateway created.
     */
    public /*out*/ readonly privateIp!: pulumi.Output<string>;
    /**
     * DNS server used by the gateway. Default is "8.8.8.8", can be overridden with the VPC's setting.
     */
    public /*out*/ readonly publicDnsServer!: pulumi.Output<string>;
    /**
     * Whether to enforce Guard Duty IP blocking.  Only valid when `enablePublicSubnetFiltering` attribute is true. Valid values: true or false. Default value: true. Available as of provider version R2.18+.
     */
    public readonly publicSubnetFilteringGuardDutyEnforced!: pulumi.Output<boolean | undefined>;
    /**
     * Route tables whose associated public subnets are protected for the HA PSF gateway. Required when `enablePublicSubnetFiltering` and `peeringHaSubnet` are set. Available as of provider version R2.18+.
     */
    public readonly publicSubnetFilteringHaRouteTables!: pulumi.Output<string[] | undefined>;
    /**
     * Route tables whose associated public subnets are protected. Only valid when `enablePublicSubnetFiltering` attribute is true. Available as of provider version R2.18+.
     */
    public readonly publicSubnetFilteringRouteTables!: pulumi.Output<string[] | undefined>;
    /**
     * It sets the value (seconds) of the [renegotiation interval](https://docs.aviatrix.com/HowTos/openvpn_faq.html#how-do-i-fix-the-aviatrix-vpn-timing-out-too-quickly). This renegotiation interval feature is enable only if this attribute is set, otherwise it is disabled. The entered value must be an integer number greater than 300. Available in provider version R2.17.1+.
     */
    public readonly renegotiationInterval!: pulumi.Output<number | undefined>;
    /**
     * Gateway ethernet interface RX queue size. Once set, can't be deleted or disabled. Available for AWS as of provider version R2.22+.
     */
    public readonly rxQueueSize!: pulumi.Output<string | undefined>;
    /**
     * Enable/disable SAML. This field is available in Controller version 3.3 or later release. Valid values: true, false. Default value: false.
     */
    public readonly samlEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * A list of domain names that will use the NameServer when a specific name is not in the destination when Split Tunnel Mode is enabled.
     */
    public readonly searchDomains!: pulumi.Output<string | undefined>;
    /**
     * Security group used for the gateway.
     */
    public /*out*/ readonly securityGroupId!: pulumi.Output<string>;
    /**
     * If enabled, Controller monitors the health of the gateway and restarts the gateway if it becomes unreachable. Valid values: true, false. Default value: false.
     */
    public readonly singleAzHa!: pulumi.Output<boolean | undefined>;
    /**
     * Enable Source NAT in "single ip" mode for this gateway. Valid values: true, false. Default value: false. **NOTE: If using SNAT for FQDN use-case, please see notes here.**
     */
    public readonly singleIpSnat!: pulumi.Output<boolean | undefined>;
    /**
     * The software version of the gateway. If set, we will attempt to update the gateway to the specified version if current version is different. If left blank, the gateway upgrade can be managed with the `aviatrix.AviatrixControllerConfig` resource. Type: String. Example: "6.5.821". Available as of provider version R2.20.0.
     */
    public readonly softwareVersion!: pulumi.Output<string>;
    /**
     * Enable/disable Split Tunnel Mode. Valid values: true, false. Default value: true. Please see [here](https://docs.aviatrix.com/HowTos/gateway.html#split-tunnel-mode) for more information on split tunnel.
     */
    public readonly splitTunnel!: pulumi.Output<boolean | undefined>;
    /**
     * Price for spot instance. NOT supported for production deployment.
     */
    public readonly spotPrice!: pulumi.Output<string | undefined>;
    /**
     * A VPC network address range selected from one of the available network ranges. Example: "172.31.0.0/20". **NOTE: If using `insaneMode`, please see notes here.**
     */
    public readonly subnet!: pulumi.Output<string>;
    /**
     * (Optional) Tag list of the gateway instance. Only available for AWS, AWSGov, AWSChina, Azure, AzureGov and AzureChina gateways. Example: ["key1:value1", "key2:value2"].
     * * `storageName` (Optional) Specify a storage account. Required if `cloudType` is 2048 (AzureChina). Removed in Provider version 2.21.0+.
     *
     * @deprecated Use tags instead.
     */
    public readonly tagLists!: pulumi.Output<string[] | undefined>;
    /**
     * Map of tags to assign to the gateway. Only available for AWS, AWSGov, AWSChina, Azure, AzureGov, AzureChina, AWS Top Secret and AWS Secret gateways. Allowed characters vary by cloud type but always include: letters, spaces, and numbers. AWS, AWSGov, AWSChina, AWS Top Secret and AWS Secret allow the use of any character.  Azure, AzureGov and AzureChina allows the following special characters: + - = . _ : @. Example: {"key1" = "value1", "key2" = "value2"}.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The IPSec tunnel down detection time for the Gateway.
     */
    public readonly tunnelDetectionTime!: pulumi.Output<number>;
    /**
     * VPC ID/VNet name of cloud provider. Example: AWS/AWSGov/AWSChina: "vpc-abcd1234", GCP: "vpc-gcp-test~-~project-id", Azure/AzureGov/AzureChina: "vnet_name:rg_name:resource_guid", OCI: "ocid1.vcn.oc1.iad.aaaaaaaaba3pv6wkcr4jqae5f44n2b2m2yt2j6rx32uzr4h25vqstifsfdsq".
     */
    public readonly vpcId!: pulumi.Output<string>;
    /**
     * VPC region the gateway will be created in. Example: AWS: "us-east-1", GCP: "us-west2-a", Azure: "East US 2", OCI: "us-ashburn-1", AzureGov: "USGov Arizona", AWSGov: "us-gov-west-1", AWSChina: "cn-north-1", AzureChina: "China North", AWS Top Secret: "us-iso-east-1", AWS Secret: "us-isob-east-1".
     */
    public readonly vpcReg!: pulumi.Output<string>;
    /**
     * Enable [user access through VPN](https://docs.aviatrix.com/HowTos/gateway.html#vpn-access) to this gateway. Valid values: true, false.
     */
    public readonly vpnAccess!: pulumi.Output<boolean | undefined>;
    /**
     * VPN CIDR block for the gateway. Required if `vpnAccess` is true. Example: "192.168.43.0/24".
     */
    public readonly vpnCidr!: pulumi.Output<string | undefined>;
    /**
     * Transport mode for VPN connection. All `cloudTypes` support TCP with ELB, and UDP without ELB. AWS(1) additionally supports UDP with ELB. Valid values: "TCP", "UDP". If not specified, "TCP" will be used.
     */
    public readonly vpnProtocol!: pulumi.Output<string>;
    /**
     * Availability Zone. Only available for Azure and Public Subnet Filtering gateway. Available for Azure as of provider version R2.17+.
     */
    public readonly zone!: pulumi.Output<string | undefined>;

    /**
     * Create a AviatrixGateway resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AviatrixGatewayArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AviatrixGatewayArgs | AviatrixGatewayState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AviatrixGatewayState | undefined;
            resourceInputs["accountName"] = state ? state.accountName : undefined;
            resourceInputs["additionalCidrs"] = state ? state.additionalCidrs : undefined;
            resourceInputs["additionalCidrsDesignatedGateway"] = state ? state.additionalCidrsDesignatedGateway : undefined;
            resourceInputs["allocateNewEip"] = state ? state.allocateNewEip : undefined;
            resourceInputs["availabilityDomain"] = state ? state.availabilityDomain : undefined;
            resourceInputs["azureEipNameResourceGroup"] = state ? state.azureEipNameResourceGroup : undefined;
            resourceInputs["cloudInstanceId"] = state ? state.cloudInstanceId : undefined;
            resourceInputs["cloudType"] = state ? state.cloudType : undefined;
            resourceInputs["customerManagedKeys"] = state ? state.customerManagedKeys : undefined;
            resourceInputs["duoApiHostname"] = state ? state.duoApiHostname : undefined;
            resourceInputs["duoIntegrationKey"] = state ? state.duoIntegrationKey : undefined;
            resourceInputs["duoPushMode"] = state ? state.duoPushMode : undefined;
            resourceInputs["duoSecretKey"] = state ? state.duoSecretKey : undefined;
            resourceInputs["eip"] = state ? state.eip : undefined;
            resourceInputs["elbDnsName"] = state ? state.elbDnsName : undefined;
            resourceInputs["elbName"] = state ? state.elbName : undefined;
            resourceInputs["enableDesignatedGateway"] = state ? state.enableDesignatedGateway : undefined;
            resourceInputs["enableElb"] = state ? state.enableElb : undefined;
            resourceInputs["enableEncryptVolume"] = state ? state.enableEncryptVolume : undefined;
            resourceInputs["enableJumboFrame"] = state ? state.enableJumboFrame : undefined;
            resourceInputs["enableLdap"] = state ? state.enableLdap : undefined;
            resourceInputs["enableMonitorGatewaySubnets"] = state ? state.enableMonitorGatewaySubnets : undefined;
            resourceInputs["enablePublicSubnetFiltering"] = state ? state.enablePublicSubnetFiltering : undefined;
            resourceInputs["enableSpotInstance"] = state ? state.enableSpotInstance : undefined;
            resourceInputs["enableVpcDnsServer"] = state ? state.enableVpcDnsServer : undefined;
            resourceInputs["enableVpnNat"] = state ? state.enableVpnNat : undefined;
            resourceInputs["faultDomain"] = state ? state.faultDomain : undefined;
            resourceInputs["fqdnLanCidr"] = state ? state.fqdnLanCidr : undefined;
            resourceInputs["fqdnLanInterface"] = state ? state.fqdnLanInterface : undefined;
            resourceInputs["fqdnLanVpcId"] = state ? state.fqdnLanVpcId : undefined;
            resourceInputs["gwName"] = state ? state.gwName : undefined;
            resourceInputs["gwSize"] = state ? state.gwSize : undefined;
            resourceInputs["idleTimeout"] = state ? state.idleTimeout : undefined;
            resourceInputs["imageVersion"] = state ? state.imageVersion : undefined;
            resourceInputs["insaneMode"] = state ? state.insaneMode : undefined;
            resourceInputs["insaneModeAz"] = state ? state.insaneModeAz : undefined;
            resourceInputs["ldapBaseDn"] = state ? state.ldapBaseDn : undefined;
            resourceInputs["ldapBindDn"] = state ? state.ldapBindDn : undefined;
            resourceInputs["ldapPassword"] = state ? state.ldapPassword : undefined;
            resourceInputs["ldapServer"] = state ? state.ldapServer : undefined;
            resourceInputs["ldapUsernameAttribute"] = state ? state.ldapUsernameAttribute : undefined;
            resourceInputs["maxVpnConn"] = state ? state.maxVpnConn : undefined;
            resourceInputs["monitorExcludeLists"] = state ? state.monitorExcludeLists : undefined;
            resourceInputs["nameServers"] = state ? state.nameServers : undefined;
            resourceInputs["oktaToken"] = state ? state.oktaToken : undefined;
            resourceInputs["oktaUrl"] = state ? state.oktaUrl : undefined;
            resourceInputs["oktaUsernameSuffix"] = state ? state.oktaUsernameSuffix : undefined;
            resourceInputs["otpMode"] = state ? state.otpMode : undefined;
            resourceInputs["peeringHaAvailabilityDomain"] = state ? state.peeringHaAvailabilityDomain : undefined;
            resourceInputs["peeringHaAzureEipNameResourceGroup"] = state ? state.peeringHaAzureEipNameResourceGroup : undefined;
            resourceInputs["peeringHaCloudInstanceId"] = state ? state.peeringHaCloudInstanceId : undefined;
            resourceInputs["peeringHaEip"] = state ? state.peeringHaEip : undefined;
            resourceInputs["peeringHaFaultDomain"] = state ? state.peeringHaFaultDomain : undefined;
            resourceInputs["peeringHaGwName"] = state ? state.peeringHaGwName : undefined;
            resourceInputs["peeringHaGwSize"] = state ? state.peeringHaGwSize : undefined;
            resourceInputs["peeringHaImageVersion"] = state ? state.peeringHaImageVersion : undefined;
            resourceInputs["peeringHaInsaneModeAz"] = state ? state.peeringHaInsaneModeAz : undefined;
            resourceInputs["peeringHaPrivateIp"] = state ? state.peeringHaPrivateIp : undefined;
            resourceInputs["peeringHaSecurityGroupId"] = state ? state.peeringHaSecurityGroupId : undefined;
            resourceInputs["peeringHaSoftwareVersion"] = state ? state.peeringHaSoftwareVersion : undefined;
            resourceInputs["peeringHaSubnet"] = state ? state.peeringHaSubnet : undefined;
            resourceInputs["peeringHaZone"] = state ? state.peeringHaZone : undefined;
            resourceInputs["privateIp"] = state ? state.privateIp : undefined;
            resourceInputs["publicDnsServer"] = state ? state.publicDnsServer : undefined;
            resourceInputs["publicSubnetFilteringGuardDutyEnforced"] = state ? state.publicSubnetFilteringGuardDutyEnforced : undefined;
            resourceInputs["publicSubnetFilteringHaRouteTables"] = state ? state.publicSubnetFilteringHaRouteTables : undefined;
            resourceInputs["publicSubnetFilteringRouteTables"] = state ? state.publicSubnetFilteringRouteTables : undefined;
            resourceInputs["renegotiationInterval"] = state ? state.renegotiationInterval : undefined;
            resourceInputs["rxQueueSize"] = state ? state.rxQueueSize : undefined;
            resourceInputs["samlEnabled"] = state ? state.samlEnabled : undefined;
            resourceInputs["searchDomains"] = state ? state.searchDomains : undefined;
            resourceInputs["securityGroupId"] = state ? state.securityGroupId : undefined;
            resourceInputs["singleAzHa"] = state ? state.singleAzHa : undefined;
            resourceInputs["singleIpSnat"] = state ? state.singleIpSnat : undefined;
            resourceInputs["softwareVersion"] = state ? state.softwareVersion : undefined;
            resourceInputs["splitTunnel"] = state ? state.splitTunnel : undefined;
            resourceInputs["spotPrice"] = state ? state.spotPrice : undefined;
            resourceInputs["subnet"] = state ? state.subnet : undefined;
            resourceInputs["tagLists"] = state ? state.tagLists : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tunnelDetectionTime"] = state ? state.tunnelDetectionTime : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
            resourceInputs["vpcReg"] = state ? state.vpcReg : undefined;
            resourceInputs["vpnAccess"] = state ? state.vpnAccess : undefined;
            resourceInputs["vpnCidr"] = state ? state.vpnCidr : undefined;
            resourceInputs["vpnProtocol"] = state ? state.vpnProtocol : undefined;
            resourceInputs["zone"] = state ? state.zone : undefined;
        } else {
            const args = argsOrState as AviatrixGatewayArgs | undefined;
            if ((!args || args.accountName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountName'");
            }
            if ((!args || args.cloudType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cloudType'");
            }
            if ((!args || args.gwName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'gwName'");
            }
            if ((!args || args.gwSize === undefined) && !opts.urn) {
                throw new Error("Missing required property 'gwSize'");
            }
            if ((!args || args.subnet === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnet'");
            }
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            if ((!args || args.vpcReg === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcReg'");
            }
            resourceInputs["accountName"] = args ? args.accountName : undefined;
            resourceInputs["additionalCidrs"] = args ? args.additionalCidrs : undefined;
            resourceInputs["additionalCidrsDesignatedGateway"] = args ? args.additionalCidrsDesignatedGateway : undefined;
            resourceInputs["allocateNewEip"] = args ? args.allocateNewEip : undefined;
            resourceInputs["availabilityDomain"] = args ? args.availabilityDomain : undefined;
            resourceInputs["azureEipNameResourceGroup"] = args ? args.azureEipNameResourceGroup : undefined;
            resourceInputs["cloudType"] = args ? args.cloudType : undefined;
            resourceInputs["customerManagedKeys"] = args?.customerManagedKeys ? pulumi.secret(args.customerManagedKeys) : undefined;
            resourceInputs["duoApiHostname"] = args ? args.duoApiHostname : undefined;
            resourceInputs["duoIntegrationKey"] = args ? args.duoIntegrationKey : undefined;
            resourceInputs["duoPushMode"] = args ? args.duoPushMode : undefined;
            resourceInputs["duoSecretKey"] = args?.duoSecretKey ? pulumi.secret(args.duoSecretKey) : undefined;
            resourceInputs["eip"] = args ? args.eip : undefined;
            resourceInputs["elbName"] = args ? args.elbName : undefined;
            resourceInputs["enableDesignatedGateway"] = args ? args.enableDesignatedGateway : undefined;
            resourceInputs["enableElb"] = args ? args.enableElb : undefined;
            resourceInputs["enableEncryptVolume"] = args ? args.enableEncryptVolume : undefined;
            resourceInputs["enableJumboFrame"] = args ? args.enableJumboFrame : undefined;
            resourceInputs["enableLdap"] = args ? args.enableLdap : undefined;
            resourceInputs["enableMonitorGatewaySubnets"] = args ? args.enableMonitorGatewaySubnets : undefined;
            resourceInputs["enablePublicSubnetFiltering"] = args ? args.enablePublicSubnetFiltering : undefined;
            resourceInputs["enableSpotInstance"] = args ? args.enableSpotInstance : undefined;
            resourceInputs["enableVpcDnsServer"] = args ? args.enableVpcDnsServer : undefined;
            resourceInputs["enableVpnNat"] = args ? args.enableVpnNat : undefined;
            resourceInputs["faultDomain"] = args ? args.faultDomain : undefined;
            resourceInputs["fqdnLanCidr"] = args ? args.fqdnLanCidr : undefined;
            resourceInputs["fqdnLanVpcId"] = args ? args.fqdnLanVpcId : undefined;
            resourceInputs["gwName"] = args ? args.gwName : undefined;
            resourceInputs["gwSize"] = args ? args.gwSize : undefined;
            resourceInputs["idleTimeout"] = args ? args.idleTimeout : undefined;
            resourceInputs["imageVersion"] = args ? args.imageVersion : undefined;
            resourceInputs["insaneMode"] = args ? args.insaneMode : undefined;
            resourceInputs["insaneModeAz"] = args ? args.insaneModeAz : undefined;
            resourceInputs["ldapBaseDn"] = args ? args.ldapBaseDn : undefined;
            resourceInputs["ldapBindDn"] = args ? args.ldapBindDn : undefined;
            resourceInputs["ldapPassword"] = args?.ldapPassword ? pulumi.secret(args.ldapPassword) : undefined;
            resourceInputs["ldapServer"] = args ? args.ldapServer : undefined;
            resourceInputs["ldapUsernameAttribute"] = args ? args.ldapUsernameAttribute : undefined;
            resourceInputs["maxVpnConn"] = args ? args.maxVpnConn : undefined;
            resourceInputs["monitorExcludeLists"] = args ? args.monitorExcludeLists : undefined;
            resourceInputs["nameServers"] = args ? args.nameServers : undefined;
            resourceInputs["oktaToken"] = args?.oktaToken ? pulumi.secret(args.oktaToken) : undefined;
            resourceInputs["oktaUrl"] = args ? args.oktaUrl : undefined;
            resourceInputs["oktaUsernameSuffix"] = args ? args.oktaUsernameSuffix : undefined;
            resourceInputs["otpMode"] = args ? args.otpMode : undefined;
            resourceInputs["peeringHaAvailabilityDomain"] = args ? args.peeringHaAvailabilityDomain : undefined;
            resourceInputs["peeringHaAzureEipNameResourceGroup"] = args ? args.peeringHaAzureEipNameResourceGroup : undefined;
            resourceInputs["peeringHaEip"] = args ? args.peeringHaEip : undefined;
            resourceInputs["peeringHaFaultDomain"] = args ? args.peeringHaFaultDomain : undefined;
            resourceInputs["peeringHaGwSize"] = args ? args.peeringHaGwSize : undefined;
            resourceInputs["peeringHaImageVersion"] = args ? args.peeringHaImageVersion : undefined;
            resourceInputs["peeringHaInsaneModeAz"] = args ? args.peeringHaInsaneModeAz : undefined;
            resourceInputs["peeringHaSoftwareVersion"] = args ? args.peeringHaSoftwareVersion : undefined;
            resourceInputs["peeringHaSubnet"] = args ? args.peeringHaSubnet : undefined;
            resourceInputs["peeringHaZone"] = args ? args.peeringHaZone : undefined;
            resourceInputs["publicSubnetFilteringGuardDutyEnforced"] = args ? args.publicSubnetFilteringGuardDutyEnforced : undefined;
            resourceInputs["publicSubnetFilteringHaRouteTables"] = args ? args.publicSubnetFilteringHaRouteTables : undefined;
            resourceInputs["publicSubnetFilteringRouteTables"] = args ? args.publicSubnetFilteringRouteTables : undefined;
            resourceInputs["renegotiationInterval"] = args ? args.renegotiationInterval : undefined;
            resourceInputs["rxQueueSize"] = args ? args.rxQueueSize : undefined;
            resourceInputs["samlEnabled"] = args ? args.samlEnabled : undefined;
            resourceInputs["searchDomains"] = args ? args.searchDomains : undefined;
            resourceInputs["singleAzHa"] = args ? args.singleAzHa : undefined;
            resourceInputs["singleIpSnat"] = args ? args.singleIpSnat : undefined;
            resourceInputs["softwareVersion"] = args ? args.softwareVersion : undefined;
            resourceInputs["splitTunnel"] = args ? args.splitTunnel : undefined;
            resourceInputs["spotPrice"] = args ? args.spotPrice : undefined;
            resourceInputs["subnet"] = args ? args.subnet : undefined;
            resourceInputs["tagLists"] = args ? args.tagLists : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["tunnelDetectionTime"] = args ? args.tunnelDetectionTime : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["vpcReg"] = args ? args.vpcReg : undefined;
            resourceInputs["vpnAccess"] = args ? args.vpnAccess : undefined;
            resourceInputs["vpnCidr"] = args ? args.vpnCidr : undefined;
            resourceInputs["vpnProtocol"] = args ? args.vpnProtocol : undefined;
            resourceInputs["zone"] = args ? args.zone : undefined;
            resourceInputs["cloudInstanceId"] = undefined /*out*/;
            resourceInputs["elbDnsName"] = undefined /*out*/;
            resourceInputs["fqdnLanInterface"] = undefined /*out*/;
            resourceInputs["peeringHaCloudInstanceId"] = undefined /*out*/;
            resourceInputs["peeringHaGwName"] = undefined /*out*/;
            resourceInputs["peeringHaPrivateIp"] = undefined /*out*/;
            resourceInputs["peeringHaSecurityGroupId"] = undefined /*out*/;
            resourceInputs["privateIp"] = undefined /*out*/;
            resourceInputs["publicDnsServer"] = undefined /*out*/;
            resourceInputs["securityGroupId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["customerManagedKeys", "duoSecretKey", "ldapPassword", "oktaToken"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(AviatrixGateway.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AviatrixGateway resources.
 */
export interface AviatrixGatewayState {
    /**
     * Account name. This account will be used to launch Aviatrix gateway.
     */
    accountName?: pulumi.Input<string>;
    /**
     * A list of destination CIDR ranges that will also go through the VPN tunnel when Split Tunnel Mode is enabled.
     */
    additionalCidrs?: pulumi.Input<string>;
    /**
     * A list of CIDR ranges separated by comma to configure when "Designated Gateway" feature is enabled. Example: "10.8.0.0/16,10.9.0.0/16,10.10.0.0/16".
     */
    additionalCidrsDesignatedGateway?: pulumi.Input<string>;
    /**
     * If set to false, use an available address in Elastic IP pool for this gateway. Otherwise, allocate a new Elastic IP and use it for this gateway. Available in Controller 2.7+. Valid values: true, false. Default: true.
     */
    allocateNewEip?: pulumi.Input<boolean>;
    /**
     * Availability domain. Required and valid only for OCI. Available as of provider version R2.19.3.
     */
    availabilityDomain?: pulumi.Input<string>;
    /**
     * Name of public IP Address resource and its resource group in Azure to be assigned to the gateway instance. Example: "IP_Name:Resource_Group_Name". Required when `allocateNewEip` is false and `cloudType` is Azure, AzureGov or AzureChina. Available as of provider version 2.20+.
     */
    azureEipNameResourceGroup?: pulumi.Input<string>;
    /**
     * Cloud instance ID of the gateway.
     */
    cloudInstanceId?: pulumi.Input<string>;
    /**
     * Cloud service provider to use to launch the gateway. Requires an integer value. Currently supports AWS(1), GCP(4), Azure(8), OCI(16), AzureGov(32), AWSGov(256), AWSChina(1024), AzureChina(2048), Alibaba Cloud (8192), AWS Top Secret (16384) and AWS Secret (32768).
     */
    cloudType?: pulumi.Input<number>;
    /**
     * Customer-managed key ID.
     */
    customerManagedKeys?: pulumi.Input<string>;
    /**
     * API hostname for DUO auth mode. Required: Yes if `otpMode` is "2".
     */
    duoApiHostname?: pulumi.Input<string>;
    /**
     * Integration key for DUO auth mode. Required if `otpMode` is "2".
     */
    duoIntegrationKey?: pulumi.Input<string>;
    /**
     * Push mode for DUO auth. Required if `otpMode` is "2". Valid values: "auto", "selective" and "token".
     */
    duoPushMode?: pulumi.Input<string>;
    /**
     * Secret key for DUO auth mode. Required if `otpMode` is "2".
     */
    duoSecretKey?: pulumi.Input<string>;
    /**
     * Specified EIP to use for gateway creation. Required when `allocateNewEip` is false.  Available in Controller version 3.5+. Only available for AWS, GCP, Azure, OCI, AzureGov, AWSGov, AWSChina, AzureChina, AWS Top Secret and AWS Secret.
     */
    eip?: pulumi.Input<string>;
    /**
     * ELB DNS name.
     */
    elbDnsName?: pulumi.Input<string>;
    /**
     * A name for the ELB that is created. If it is not specified, a name is generated automatically.
     */
    elbName?: pulumi.Input<string>;
    /**
     * Enable Designated Gateway feature for Gateway. Only supported for AWS, AWSGov, AWSChina, AWS Top Secret and AWS Secret gateways. Valid values: true, false. Default value: false. Please view documentation [here](https://docs.aviatrix.com/HowTos/gateway.html#designated-gateway) for more information on this feature.
     */
    enableDesignatedGateway?: pulumi.Input<boolean>;
    /**
     * Specify whether to enable ELB or not. Not supported for OCI gateways. Valid values: true, false.
     */
    enableElb?: pulumi.Input<boolean>;
    /**
     * Enable EBS volume encryption for the gateway. Only supported for AWS, AWSGov, AWSChina, AWS Top Secret and AWS Secret gateways. Valid values: true, false. Default value: false.
     */
    enableEncryptVolume?: pulumi.Input<boolean>;
    /**
     * Enable jumbo frames for this gateway. Default value is true.
     */
    enableJumboFrame?: pulumi.Input<boolean>;
    /**
     * Enable/disable LDAP. Valid values: true, false. Default value: false.
     */
    enableLdap?: pulumi.Input<boolean>;
    /**
     * If set to true, the [Monitor Gateway Subnets](https://docs.aviatrix.com/HowTos/gateway.html#monitor-gateway-subnet) feature is enabled. Default value is false. Available in provider version R2.17.1+.
     */
    enableMonitorGatewaySubnets?: pulumi.Input<boolean>;
    /**
     * Create a [Public Subnet Filtering gateway](https://docs.aviatrix.com/HowTos/public_subnet_filtering_faq.html).
     */
    enablePublicSubnetFiltering?: pulumi.Input<boolean>;
    /**
     * Enable spot instance. NOT supported for production deployment.
     */
    enableSpotInstance?: pulumi.Input<boolean>;
    /**
     * Enable VPC DNS Server for gateway. Currently only supported for AWS, Azure, AzureGov, AWSGov, AWSChina, AzureChina, Alibaba Cloud, AWS Top Secret and AWS Secret gateways. Valid values: true, false. Default value: false.
     */
    enableVpcDnsServer?: pulumi.Input<boolean>;
    /**
     * Enable/disable VPN NAT. Only supported for VPN gateway. Valid values: true, false. Default value: true.
     */
    enableVpnNat?: pulumi.Input<boolean>;
    /**
     * Fault domain. Required and valid only for OCI. Available as of provider version R2.19.3.
     */
    faultDomain?: pulumi.Input<string>;
    /**
     * If `fqdnLanCidr` is set, the FQDN gateway will be created with an additional LAN interface using the provided CIDR. This attribute is required when enabling FQDN gateway FireNet in Azure or GCP. Available in provider version R2.17.1+.
     */
    fqdnLanCidr?: pulumi.Input<string>;
    /**
     * The lan interface id of the of FQDN gateway with additional LAN interface. This attribute will be exported when enabling FQDN gateway firenet in Azure. Available in provider version R2.17.1+.
     */
    fqdnLanInterface?: pulumi.Input<string>;
    /**
     * FQDN LAN VPC ID. This attribute is required when enabling FQDN gateway FireNet in GCP. Available as of provider version R2.18.1+.
     */
    fqdnLanVpcId?: pulumi.Input<string>;
    /**
     * Name of the Aviatrix gateway to be created.
     */
    gwName?: pulumi.Input<string>;
    /**
     * Size of the gateway instance. Example: AWS/AWSGov/AWSChina: "t2.large", GCP: "n1-standard-1", Azure/AzureGov/AzureChina: "Standard_B1s", OCI: "VM.Standard2.2".
     */
    gwSize?: pulumi.Input<string>;
    /**
     * It sets the value (seconds) of the [idle timeout](https://docs.aviatrix.com/HowTos/openvpn_faq.html#how-do-i-fix-the-aviatrix-vpn-timing-out-too-quickly). This idle timeout feature is enable only if this attribute is set, otherwise it is disabled. The entered value must be an integer number greater than 300.  Available in provider version R2.17.1+.
     */
    idleTimeout?: pulumi.Input<number>;
    /**
     * The image version of the gateway. Use `aviatrix.getAviatrixGatewayImage` data source to programmatically retrieve this value for the desired `softwareVersion`. If set, we will attempt to update the gateway to the specified version if current version is different. If left blank, the gateway upgrades can be managed with the `aviatrix.AviatrixControllerConfig` resource. Type: String. Example: "hvm-cloudx-aws-022021". Available as of provider version R2.20.0.
     */
    imageVersion?: pulumi.Input<string>;
    /**
     * Enable [Insane Mode](https://docs.aviatrix.com/HowTos/insane_mode.html) for Gateway. Insane Mode gateway size must be at least c5 series (AWS) or Standard_D3_v2 (Azure/AzureGov). If enabled, a valid /26 CIDR segment of the VPC must be specified to create a new subnet. Only supported for AWS, AWSGov, Azure, AzureGov, AWS China, Azure China, AWS Top Secret or AWS Secret.  Valid values: true, false.
     */
    insaneMode?: pulumi.Input<boolean>;
    /**
     * Region + Availability Zone of subnet being created for Insane Mode gateway. Required for AWS, AWSGov, AWS China, AWS Top Secret or AWS Secret if `insaneMode` is set. Example: AWS: "us-west-1a".
     */
    insaneModeAz?: pulumi.Input<string>;
    /**
     * LDAP base DN. Required if `enableLdap` is true.
     */
    ldapBaseDn?: pulumi.Input<string>;
    /**
     * LDAP bind DN. Required if `enableLdap` is true.
     */
    ldapBindDn?: pulumi.Input<string>;
    /**
     * LDAP password. Required if `enableLdap` is true.
     */
    ldapPassword?: pulumi.Input<string>;
    /**
     * LDAP server address. Required if `enableLdap` is true.
     */
    ldapServer?: pulumi.Input<string>;
    /**
     * LDAP user attribute. Required if `enableLdap` is true.
     */
    ldapUsernameAttribute?: pulumi.Input<string>;
    /**
     * Maximum number of active VPN users allowed to be connected to this gateway. Required if `vpnAccess` is true. Make sure the number is smaller than the VPN CIDR block. Example: 100. **NOTE: Please see notes here in regards to any deltas found in your state with the addition of this argument in R1.14.**
     */
    maxVpnConn?: pulumi.Input<string>;
    /**
     * Set of monitored instance ids. Only valid when 'enable_monitor_gateway_subnets' = true. Available in provider version R2.17.1+.
     */
    monitorExcludeLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of DNS servers used to resolve domain names by a connected VPN user when Split Tunnel Mode is enabled.
     */
    nameServers?: pulumi.Input<string>;
    /**
     * Token for Okta auth mode. Required if `otpMode` is "3".
     */
    oktaToken?: pulumi.Input<string>;
    /**
     * URL for Okta auth mode. Required if `otpMode` is "3".
     */
    oktaUrl?: pulumi.Input<string>;
    /**
     * Username suffix for Okta auth mode. Example: "aviatrix.com".
     */
    oktaUsernameSuffix?: pulumi.Input<string>;
    /**
     * Two step authentication mode. Valid values: "2" for DUO, "3" for Okta.
     */
    otpMode?: pulumi.Input<string>;
    /**
     * Peering HA gateway availability domain. Required and valid only for OCI. Available as of provider version R2.19.3.
     */
    peeringHaAvailabilityDomain?: pulumi.Input<string>;
    /**
     * Name of public IP address resource and its resource group in Azure to be assigned to the HA peering instance. Example: "IP_Name:Resource_Group_Name". Required if `peeringHaEip` is set and `cloudType` is Azure, AzureGov or AzureChina. Available as of provider version 2.20+.
     */
    peeringHaAzureEipNameResourceGroup?: pulumi.Input<string>;
    /**
     * Cloud instance ID of the HA gateway.
     */
    peeringHaCloudInstanceId?: pulumi.Input<string>;
    /**
     * Public IP address to be assigned to the HA peering instance. Only available for AWS, GCP, Azure, OCI, AzureGov, AWSGov, AWSChina, AzureChina, AWS Top Secret and AWS Secret.
     */
    peeringHaEip?: pulumi.Input<string>;
    /**
     * Peering HA gateway fault domain. Required and valid only for OCI. Available as of provider version R2.19.3.
     */
    peeringHaFaultDomain?: pulumi.Input<string>;
    /**
     * Aviatrix gateway unique name of HA gateway.
     */
    peeringHaGwName?: pulumi.Input<string>;
    /**
     * Size of the Peering HA Gateway to be created. Required if enabling Peering HA. **NOTE: Please see notes here in regards to any deltas found in your state with the addition of this argument in R1.8.**
     */
    peeringHaGwSize?: pulumi.Input<string>;
    /**
     * The image version of the HA gateway. Use `aviatrix.getAviatrixGatewayImage` data source to programmatically retrieve this value for the desired `haSoftwareVersion`. If set, we will attempt to update the HA gateway to the specified version if current version is different. If left blank, the gateway upgrades can be managed with the `aviatrix.AviatrixControllerConfig` resource. Type: String. Example: "hvm-cloudx-aws-022021". Available as of provider version R2.20.0.
     */
    peeringHaImageVersion?: pulumi.Input<string>;
    /**
     * Region + Availability Zone of subnet being created for Insane Mode-enabled Peering HA Gateway. Required for AWS only if `insaneMode` is set and `peeringHaSubnet` is set. Example: AWS: "us-west-1a".
     */
    peeringHaInsaneModeAz?: pulumi.Input<string>;
    /**
     * Private IP address of HA gateway.
     */
    peeringHaPrivateIp?: pulumi.Input<string>;
    /**
     * HA security group used for the gateway.
     */
    peeringHaSecurityGroupId?: pulumi.Input<string>;
    /**
     * The software version of the HA gateway. If set, we will attempt to update the HA gateway to the specified version if current version is different. If left blank, the HA gateway upgrade can be managed with the `aviatrix.AviatrixControllerConfig` resource. Type: String. Example: "6.5.821". Available as of provider version R2.20.0.
     */
    peeringHaSoftwareVersion?: pulumi.Input<string>;
    /**
     * Public subnet CIDR to create Peering HA Gateway in. Required if enabling Peering HA for AWS/AWSGov/AWS Top Secret/AWS Secret/Azure/AzureGov/Alibaba Cloud. Optional if enabling Peering HA for GCP. Example: AWS: "10.0.0.0/16".
     */
    peeringHaSubnet?: pulumi.Input<string>;
    /**
     * Zone to create Peering HA Gateway in. Required if enabling Peering HA for GCP. Example: GCP: "us-west1-c". Optional for Azure. Valid values for Azure gateways are in the form "az-n". Example: "az-2". Available for Azure as of provider version R2.17+.
     */
    peeringHaZone?: pulumi.Input<string>;
    /**
     * Private IP address of the gateway created.
     */
    privateIp?: pulumi.Input<string>;
    /**
     * DNS server used by the gateway. Default is "8.8.8.8", can be overridden with the VPC's setting.
     */
    publicDnsServer?: pulumi.Input<string>;
    /**
     * Whether to enforce Guard Duty IP blocking.  Only valid when `enablePublicSubnetFiltering` attribute is true. Valid values: true or false. Default value: true. Available as of provider version R2.18+.
     */
    publicSubnetFilteringGuardDutyEnforced?: pulumi.Input<boolean>;
    /**
     * Route tables whose associated public subnets are protected for the HA PSF gateway. Required when `enablePublicSubnetFiltering` and `peeringHaSubnet` are set. Available as of provider version R2.18+.
     */
    publicSubnetFilteringHaRouteTables?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Route tables whose associated public subnets are protected. Only valid when `enablePublicSubnetFiltering` attribute is true. Available as of provider version R2.18+.
     */
    publicSubnetFilteringRouteTables?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * It sets the value (seconds) of the [renegotiation interval](https://docs.aviatrix.com/HowTos/openvpn_faq.html#how-do-i-fix-the-aviatrix-vpn-timing-out-too-quickly). This renegotiation interval feature is enable only if this attribute is set, otherwise it is disabled. The entered value must be an integer number greater than 300. Available in provider version R2.17.1+.
     */
    renegotiationInterval?: pulumi.Input<number>;
    /**
     * Gateway ethernet interface RX queue size. Once set, can't be deleted or disabled. Available for AWS as of provider version R2.22+.
     */
    rxQueueSize?: pulumi.Input<string>;
    /**
     * Enable/disable SAML. This field is available in Controller version 3.3 or later release. Valid values: true, false. Default value: false.
     */
    samlEnabled?: pulumi.Input<boolean>;
    /**
     * A list of domain names that will use the NameServer when a specific name is not in the destination when Split Tunnel Mode is enabled.
     */
    searchDomains?: pulumi.Input<string>;
    /**
     * Security group used for the gateway.
     */
    securityGroupId?: pulumi.Input<string>;
    /**
     * If enabled, Controller monitors the health of the gateway and restarts the gateway if it becomes unreachable. Valid values: true, false. Default value: false.
     */
    singleAzHa?: pulumi.Input<boolean>;
    /**
     * Enable Source NAT in "single ip" mode for this gateway. Valid values: true, false. Default value: false. **NOTE: If using SNAT for FQDN use-case, please see notes here.**
     */
    singleIpSnat?: pulumi.Input<boolean>;
    /**
     * The software version of the gateway. If set, we will attempt to update the gateway to the specified version if current version is different. If left blank, the gateway upgrade can be managed with the `aviatrix.AviatrixControllerConfig` resource. Type: String. Example: "6.5.821". Available as of provider version R2.20.0.
     */
    softwareVersion?: pulumi.Input<string>;
    /**
     * Enable/disable Split Tunnel Mode. Valid values: true, false. Default value: true. Please see [here](https://docs.aviatrix.com/HowTos/gateway.html#split-tunnel-mode) for more information on split tunnel.
     */
    splitTunnel?: pulumi.Input<boolean>;
    /**
     * Price for spot instance. NOT supported for production deployment.
     */
    spotPrice?: pulumi.Input<string>;
    /**
     * A VPC network address range selected from one of the available network ranges. Example: "172.31.0.0/20". **NOTE: If using `insaneMode`, please see notes here.**
     */
    subnet?: pulumi.Input<string>;
    /**
     * (Optional) Tag list of the gateway instance. Only available for AWS, AWSGov, AWSChina, Azure, AzureGov and AzureChina gateways. Example: ["key1:value1", "key2:value2"].
     * * `storageName` (Optional) Specify a storage account. Required if `cloudType` is 2048 (AzureChina). Removed in Provider version 2.21.0+.
     *
     * @deprecated Use tags instead.
     */
    tagLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Map of tags to assign to the gateway. Only available for AWS, AWSGov, AWSChina, Azure, AzureGov, AzureChina, AWS Top Secret and AWS Secret gateways. Allowed characters vary by cloud type but always include: letters, spaces, and numbers. AWS, AWSGov, AWSChina, AWS Top Secret and AWS Secret allow the use of any character.  Azure, AzureGov and AzureChina allows the following special characters: + - = . _ : @. Example: {"key1" = "value1", "key2" = "value2"}.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The IPSec tunnel down detection time for the Gateway.
     */
    tunnelDetectionTime?: pulumi.Input<number>;
    /**
     * VPC ID/VNet name of cloud provider. Example: AWS/AWSGov/AWSChina: "vpc-abcd1234", GCP: "vpc-gcp-test~-~project-id", Azure/AzureGov/AzureChina: "vnet_name:rg_name:resource_guid", OCI: "ocid1.vcn.oc1.iad.aaaaaaaaba3pv6wkcr4jqae5f44n2b2m2yt2j6rx32uzr4h25vqstifsfdsq".
     */
    vpcId?: pulumi.Input<string>;
    /**
     * VPC region the gateway will be created in. Example: AWS: "us-east-1", GCP: "us-west2-a", Azure: "East US 2", OCI: "us-ashburn-1", AzureGov: "USGov Arizona", AWSGov: "us-gov-west-1", AWSChina: "cn-north-1", AzureChina: "China North", AWS Top Secret: "us-iso-east-1", AWS Secret: "us-isob-east-1".
     */
    vpcReg?: pulumi.Input<string>;
    /**
     * Enable [user access through VPN](https://docs.aviatrix.com/HowTos/gateway.html#vpn-access) to this gateway. Valid values: true, false.
     */
    vpnAccess?: pulumi.Input<boolean>;
    /**
     * VPN CIDR block for the gateway. Required if `vpnAccess` is true. Example: "192.168.43.0/24".
     */
    vpnCidr?: pulumi.Input<string>;
    /**
     * Transport mode for VPN connection. All `cloudTypes` support TCP with ELB, and UDP without ELB. AWS(1) additionally supports UDP with ELB. Valid values: "TCP", "UDP". If not specified, "TCP" will be used.
     */
    vpnProtocol?: pulumi.Input<string>;
    /**
     * Availability Zone. Only available for Azure and Public Subnet Filtering gateway. Available for Azure as of provider version R2.17+.
     */
    zone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AviatrixGateway resource.
 */
export interface AviatrixGatewayArgs {
    /**
     * Account name. This account will be used to launch Aviatrix gateway.
     */
    accountName: pulumi.Input<string>;
    /**
     * A list of destination CIDR ranges that will also go through the VPN tunnel when Split Tunnel Mode is enabled.
     */
    additionalCidrs?: pulumi.Input<string>;
    /**
     * A list of CIDR ranges separated by comma to configure when "Designated Gateway" feature is enabled. Example: "10.8.0.0/16,10.9.0.0/16,10.10.0.0/16".
     */
    additionalCidrsDesignatedGateway?: pulumi.Input<string>;
    /**
     * If set to false, use an available address in Elastic IP pool for this gateway. Otherwise, allocate a new Elastic IP and use it for this gateway. Available in Controller 2.7+. Valid values: true, false. Default: true.
     */
    allocateNewEip?: pulumi.Input<boolean>;
    /**
     * Availability domain. Required and valid only for OCI. Available as of provider version R2.19.3.
     */
    availabilityDomain?: pulumi.Input<string>;
    /**
     * Name of public IP Address resource and its resource group in Azure to be assigned to the gateway instance. Example: "IP_Name:Resource_Group_Name". Required when `allocateNewEip` is false and `cloudType` is Azure, AzureGov or AzureChina. Available as of provider version 2.20+.
     */
    azureEipNameResourceGroup?: pulumi.Input<string>;
    /**
     * Cloud service provider to use to launch the gateway. Requires an integer value. Currently supports AWS(1), GCP(4), Azure(8), OCI(16), AzureGov(32), AWSGov(256), AWSChina(1024), AzureChina(2048), Alibaba Cloud (8192), AWS Top Secret (16384) and AWS Secret (32768).
     */
    cloudType: pulumi.Input<number>;
    /**
     * Customer-managed key ID.
     */
    customerManagedKeys?: pulumi.Input<string>;
    /**
     * API hostname for DUO auth mode. Required: Yes if `otpMode` is "2".
     */
    duoApiHostname?: pulumi.Input<string>;
    /**
     * Integration key for DUO auth mode. Required if `otpMode` is "2".
     */
    duoIntegrationKey?: pulumi.Input<string>;
    /**
     * Push mode for DUO auth. Required if `otpMode` is "2". Valid values: "auto", "selective" and "token".
     */
    duoPushMode?: pulumi.Input<string>;
    /**
     * Secret key for DUO auth mode. Required if `otpMode` is "2".
     */
    duoSecretKey?: pulumi.Input<string>;
    /**
     * Specified EIP to use for gateway creation. Required when `allocateNewEip` is false.  Available in Controller version 3.5+. Only available for AWS, GCP, Azure, OCI, AzureGov, AWSGov, AWSChina, AzureChina, AWS Top Secret and AWS Secret.
     */
    eip?: pulumi.Input<string>;
    /**
     * A name for the ELB that is created. If it is not specified, a name is generated automatically.
     */
    elbName?: pulumi.Input<string>;
    /**
     * Enable Designated Gateway feature for Gateway. Only supported for AWS, AWSGov, AWSChina, AWS Top Secret and AWS Secret gateways. Valid values: true, false. Default value: false. Please view documentation [here](https://docs.aviatrix.com/HowTos/gateway.html#designated-gateway) for more information on this feature.
     */
    enableDesignatedGateway?: pulumi.Input<boolean>;
    /**
     * Specify whether to enable ELB or not. Not supported for OCI gateways. Valid values: true, false.
     */
    enableElb?: pulumi.Input<boolean>;
    /**
     * Enable EBS volume encryption for the gateway. Only supported for AWS, AWSGov, AWSChina, AWS Top Secret and AWS Secret gateways. Valid values: true, false. Default value: false.
     */
    enableEncryptVolume?: pulumi.Input<boolean>;
    /**
     * Enable jumbo frames for this gateway. Default value is true.
     */
    enableJumboFrame?: pulumi.Input<boolean>;
    /**
     * Enable/disable LDAP. Valid values: true, false. Default value: false.
     */
    enableLdap?: pulumi.Input<boolean>;
    /**
     * If set to true, the [Monitor Gateway Subnets](https://docs.aviatrix.com/HowTos/gateway.html#monitor-gateway-subnet) feature is enabled. Default value is false. Available in provider version R2.17.1+.
     */
    enableMonitorGatewaySubnets?: pulumi.Input<boolean>;
    /**
     * Create a [Public Subnet Filtering gateway](https://docs.aviatrix.com/HowTos/public_subnet_filtering_faq.html).
     */
    enablePublicSubnetFiltering?: pulumi.Input<boolean>;
    /**
     * Enable spot instance. NOT supported for production deployment.
     */
    enableSpotInstance?: pulumi.Input<boolean>;
    /**
     * Enable VPC DNS Server for gateway. Currently only supported for AWS, Azure, AzureGov, AWSGov, AWSChina, AzureChina, Alibaba Cloud, AWS Top Secret and AWS Secret gateways. Valid values: true, false. Default value: false.
     */
    enableVpcDnsServer?: pulumi.Input<boolean>;
    /**
     * Enable/disable VPN NAT. Only supported for VPN gateway. Valid values: true, false. Default value: true.
     */
    enableVpnNat?: pulumi.Input<boolean>;
    /**
     * Fault domain. Required and valid only for OCI. Available as of provider version R2.19.3.
     */
    faultDomain?: pulumi.Input<string>;
    /**
     * If `fqdnLanCidr` is set, the FQDN gateway will be created with an additional LAN interface using the provided CIDR. This attribute is required when enabling FQDN gateway FireNet in Azure or GCP. Available in provider version R2.17.1+.
     */
    fqdnLanCidr?: pulumi.Input<string>;
    /**
     * FQDN LAN VPC ID. This attribute is required when enabling FQDN gateway FireNet in GCP. Available as of provider version R2.18.1+.
     */
    fqdnLanVpcId?: pulumi.Input<string>;
    /**
     * Name of the Aviatrix gateway to be created.
     */
    gwName: pulumi.Input<string>;
    /**
     * Size of the gateway instance. Example: AWS/AWSGov/AWSChina: "t2.large", GCP: "n1-standard-1", Azure/AzureGov/AzureChina: "Standard_B1s", OCI: "VM.Standard2.2".
     */
    gwSize: pulumi.Input<string>;
    /**
     * It sets the value (seconds) of the [idle timeout](https://docs.aviatrix.com/HowTos/openvpn_faq.html#how-do-i-fix-the-aviatrix-vpn-timing-out-too-quickly). This idle timeout feature is enable only if this attribute is set, otherwise it is disabled. The entered value must be an integer number greater than 300.  Available in provider version R2.17.1+.
     */
    idleTimeout?: pulumi.Input<number>;
    /**
     * The image version of the gateway. Use `aviatrix.getAviatrixGatewayImage` data source to programmatically retrieve this value for the desired `softwareVersion`. If set, we will attempt to update the gateway to the specified version if current version is different. If left blank, the gateway upgrades can be managed with the `aviatrix.AviatrixControllerConfig` resource. Type: String. Example: "hvm-cloudx-aws-022021". Available as of provider version R2.20.0.
     */
    imageVersion?: pulumi.Input<string>;
    /**
     * Enable [Insane Mode](https://docs.aviatrix.com/HowTos/insane_mode.html) for Gateway. Insane Mode gateway size must be at least c5 series (AWS) or Standard_D3_v2 (Azure/AzureGov). If enabled, a valid /26 CIDR segment of the VPC must be specified to create a new subnet. Only supported for AWS, AWSGov, Azure, AzureGov, AWS China, Azure China, AWS Top Secret or AWS Secret.  Valid values: true, false.
     */
    insaneMode?: pulumi.Input<boolean>;
    /**
     * Region + Availability Zone of subnet being created for Insane Mode gateway. Required for AWS, AWSGov, AWS China, AWS Top Secret or AWS Secret if `insaneMode` is set. Example: AWS: "us-west-1a".
     */
    insaneModeAz?: pulumi.Input<string>;
    /**
     * LDAP base DN. Required if `enableLdap` is true.
     */
    ldapBaseDn?: pulumi.Input<string>;
    /**
     * LDAP bind DN. Required if `enableLdap` is true.
     */
    ldapBindDn?: pulumi.Input<string>;
    /**
     * LDAP password. Required if `enableLdap` is true.
     */
    ldapPassword?: pulumi.Input<string>;
    /**
     * LDAP server address. Required if `enableLdap` is true.
     */
    ldapServer?: pulumi.Input<string>;
    /**
     * LDAP user attribute. Required if `enableLdap` is true.
     */
    ldapUsernameAttribute?: pulumi.Input<string>;
    /**
     * Maximum number of active VPN users allowed to be connected to this gateway. Required if `vpnAccess` is true. Make sure the number is smaller than the VPN CIDR block. Example: 100. **NOTE: Please see notes here in regards to any deltas found in your state with the addition of this argument in R1.14.**
     */
    maxVpnConn?: pulumi.Input<string>;
    /**
     * Set of monitored instance ids. Only valid when 'enable_monitor_gateway_subnets' = true. Available in provider version R2.17.1+.
     */
    monitorExcludeLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of DNS servers used to resolve domain names by a connected VPN user when Split Tunnel Mode is enabled.
     */
    nameServers?: pulumi.Input<string>;
    /**
     * Token for Okta auth mode. Required if `otpMode` is "3".
     */
    oktaToken?: pulumi.Input<string>;
    /**
     * URL for Okta auth mode. Required if `otpMode` is "3".
     */
    oktaUrl?: pulumi.Input<string>;
    /**
     * Username suffix for Okta auth mode. Example: "aviatrix.com".
     */
    oktaUsernameSuffix?: pulumi.Input<string>;
    /**
     * Two step authentication mode. Valid values: "2" for DUO, "3" for Okta.
     */
    otpMode?: pulumi.Input<string>;
    /**
     * Peering HA gateway availability domain. Required and valid only for OCI. Available as of provider version R2.19.3.
     */
    peeringHaAvailabilityDomain?: pulumi.Input<string>;
    /**
     * Name of public IP address resource and its resource group in Azure to be assigned to the HA peering instance. Example: "IP_Name:Resource_Group_Name". Required if `peeringHaEip` is set and `cloudType` is Azure, AzureGov or AzureChina. Available as of provider version 2.20+.
     */
    peeringHaAzureEipNameResourceGroup?: pulumi.Input<string>;
    /**
     * Public IP address to be assigned to the HA peering instance. Only available for AWS, GCP, Azure, OCI, AzureGov, AWSGov, AWSChina, AzureChina, AWS Top Secret and AWS Secret.
     */
    peeringHaEip?: pulumi.Input<string>;
    /**
     * Peering HA gateway fault domain. Required and valid only for OCI. Available as of provider version R2.19.3.
     */
    peeringHaFaultDomain?: pulumi.Input<string>;
    /**
     * Size of the Peering HA Gateway to be created. Required if enabling Peering HA. **NOTE: Please see notes here in regards to any deltas found in your state with the addition of this argument in R1.8.**
     */
    peeringHaGwSize?: pulumi.Input<string>;
    /**
     * The image version of the HA gateway. Use `aviatrix.getAviatrixGatewayImage` data source to programmatically retrieve this value for the desired `haSoftwareVersion`. If set, we will attempt to update the HA gateway to the specified version if current version is different. If left blank, the gateway upgrades can be managed with the `aviatrix.AviatrixControllerConfig` resource. Type: String. Example: "hvm-cloudx-aws-022021". Available as of provider version R2.20.0.
     */
    peeringHaImageVersion?: pulumi.Input<string>;
    /**
     * Region + Availability Zone of subnet being created for Insane Mode-enabled Peering HA Gateway. Required for AWS only if `insaneMode` is set and `peeringHaSubnet` is set. Example: AWS: "us-west-1a".
     */
    peeringHaInsaneModeAz?: pulumi.Input<string>;
    /**
     * The software version of the HA gateway. If set, we will attempt to update the HA gateway to the specified version if current version is different. If left blank, the HA gateway upgrade can be managed with the `aviatrix.AviatrixControllerConfig` resource. Type: String. Example: "6.5.821". Available as of provider version R2.20.0.
     */
    peeringHaSoftwareVersion?: pulumi.Input<string>;
    /**
     * Public subnet CIDR to create Peering HA Gateway in. Required if enabling Peering HA for AWS/AWSGov/AWS Top Secret/AWS Secret/Azure/AzureGov/Alibaba Cloud. Optional if enabling Peering HA for GCP. Example: AWS: "10.0.0.0/16".
     */
    peeringHaSubnet?: pulumi.Input<string>;
    /**
     * Zone to create Peering HA Gateway in. Required if enabling Peering HA for GCP. Example: GCP: "us-west1-c". Optional for Azure. Valid values for Azure gateways are in the form "az-n". Example: "az-2". Available for Azure as of provider version R2.17+.
     */
    peeringHaZone?: pulumi.Input<string>;
    /**
     * Whether to enforce Guard Duty IP blocking.  Only valid when `enablePublicSubnetFiltering` attribute is true. Valid values: true or false. Default value: true. Available as of provider version R2.18+.
     */
    publicSubnetFilteringGuardDutyEnforced?: pulumi.Input<boolean>;
    /**
     * Route tables whose associated public subnets are protected for the HA PSF gateway. Required when `enablePublicSubnetFiltering` and `peeringHaSubnet` are set. Available as of provider version R2.18+.
     */
    publicSubnetFilteringHaRouteTables?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Route tables whose associated public subnets are protected. Only valid when `enablePublicSubnetFiltering` attribute is true. Available as of provider version R2.18+.
     */
    publicSubnetFilteringRouteTables?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * It sets the value (seconds) of the [renegotiation interval](https://docs.aviatrix.com/HowTos/openvpn_faq.html#how-do-i-fix-the-aviatrix-vpn-timing-out-too-quickly). This renegotiation interval feature is enable only if this attribute is set, otherwise it is disabled. The entered value must be an integer number greater than 300. Available in provider version R2.17.1+.
     */
    renegotiationInterval?: pulumi.Input<number>;
    /**
     * Gateway ethernet interface RX queue size. Once set, can't be deleted or disabled. Available for AWS as of provider version R2.22+.
     */
    rxQueueSize?: pulumi.Input<string>;
    /**
     * Enable/disable SAML. This field is available in Controller version 3.3 or later release. Valid values: true, false. Default value: false.
     */
    samlEnabled?: pulumi.Input<boolean>;
    /**
     * A list of domain names that will use the NameServer when a specific name is not in the destination when Split Tunnel Mode is enabled.
     */
    searchDomains?: pulumi.Input<string>;
    /**
     * If enabled, Controller monitors the health of the gateway and restarts the gateway if it becomes unreachable. Valid values: true, false. Default value: false.
     */
    singleAzHa?: pulumi.Input<boolean>;
    /**
     * Enable Source NAT in "single ip" mode for this gateway. Valid values: true, false. Default value: false. **NOTE: If using SNAT for FQDN use-case, please see notes here.**
     */
    singleIpSnat?: pulumi.Input<boolean>;
    /**
     * The software version of the gateway. If set, we will attempt to update the gateway to the specified version if current version is different. If left blank, the gateway upgrade can be managed with the `aviatrix.AviatrixControllerConfig` resource. Type: String. Example: "6.5.821". Available as of provider version R2.20.0.
     */
    softwareVersion?: pulumi.Input<string>;
    /**
     * Enable/disable Split Tunnel Mode. Valid values: true, false. Default value: true. Please see [here](https://docs.aviatrix.com/HowTos/gateway.html#split-tunnel-mode) for more information on split tunnel.
     */
    splitTunnel?: pulumi.Input<boolean>;
    /**
     * Price for spot instance. NOT supported for production deployment.
     */
    spotPrice?: pulumi.Input<string>;
    /**
     * A VPC network address range selected from one of the available network ranges. Example: "172.31.0.0/20". **NOTE: If using `insaneMode`, please see notes here.**
     */
    subnet: pulumi.Input<string>;
    /**
     * (Optional) Tag list of the gateway instance. Only available for AWS, AWSGov, AWSChina, Azure, AzureGov and AzureChina gateways. Example: ["key1:value1", "key2:value2"].
     * * `storageName` (Optional) Specify a storage account. Required if `cloudType` is 2048 (AzureChina). Removed in Provider version 2.21.0+.
     *
     * @deprecated Use tags instead.
     */
    tagLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Map of tags to assign to the gateway. Only available for AWS, AWSGov, AWSChina, Azure, AzureGov, AzureChina, AWS Top Secret and AWS Secret gateways. Allowed characters vary by cloud type but always include: letters, spaces, and numbers. AWS, AWSGov, AWSChina, AWS Top Secret and AWS Secret allow the use of any character.  Azure, AzureGov and AzureChina allows the following special characters: + - = . _ : @. Example: {"key1" = "value1", "key2" = "value2"}.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The IPSec tunnel down detection time for the Gateway.
     */
    tunnelDetectionTime?: pulumi.Input<number>;
    /**
     * VPC ID/VNet name of cloud provider. Example: AWS/AWSGov/AWSChina: "vpc-abcd1234", GCP: "vpc-gcp-test~-~project-id", Azure/AzureGov/AzureChina: "vnet_name:rg_name:resource_guid", OCI: "ocid1.vcn.oc1.iad.aaaaaaaaba3pv6wkcr4jqae5f44n2b2m2yt2j6rx32uzr4h25vqstifsfdsq".
     */
    vpcId: pulumi.Input<string>;
    /**
     * VPC region the gateway will be created in. Example: AWS: "us-east-1", GCP: "us-west2-a", Azure: "East US 2", OCI: "us-ashburn-1", AzureGov: "USGov Arizona", AWSGov: "us-gov-west-1", AWSChina: "cn-north-1", AzureChina: "China North", AWS Top Secret: "us-iso-east-1", AWS Secret: "us-isob-east-1".
     */
    vpcReg: pulumi.Input<string>;
    /**
     * Enable [user access through VPN](https://docs.aviatrix.com/HowTos/gateway.html#vpn-access) to this gateway. Valid values: true, false.
     */
    vpnAccess?: pulumi.Input<boolean>;
    /**
     * VPN CIDR block for the gateway. Required if `vpnAccess` is true. Example: "192.168.43.0/24".
     */
    vpnCidr?: pulumi.Input<string>;
    /**
     * Transport mode for VPN connection. All `cloudTypes` support TCP with ELB, and UDP without ELB. AWS(1) additionally supports UDP with ELB. Valid values: "TCP", "UDP". If not specified, "TCP" will be used.
     */
    vpnProtocol?: pulumi.Input<string>;
    /**
     * Availability Zone. Only available for Azure and Public Subnet Filtering gateway. Available for Azure as of provider version R2.17+.
     */
    zone?: pulumi.Input<string>;
}
