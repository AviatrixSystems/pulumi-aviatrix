// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The **aviatrix_controller_bgp_max_as_limit_config** resource allows management of an Aviatrix Controller's BGP max AS limit for transit gateways. This resource is available as of provider version R2.18.1+.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aviatrix from "@pulumi/aviatrix";
 *
 * // Create an Aviatrix Controller BGP max AS limit config
 * const testMaxAsLimit = new aviatrix.AviatrixControllerBgpMaxAsLimitConfig("test_max_as_limit", {
 *     maxAsLimit: 1,
 * });
 * ```
 *
 * ## Import
 *
 * **aviatrix_controller_bgp_max_as_limit_config** can be imported using controller IP, e.g. controller IP is 10.11.12.13
 *
 * ```sh
 *  $ pulumi import aviatrix:index/aviatrixControllerBgpMaxAsLimitConfig:AviatrixControllerBgpMaxAsLimitConfig test_max_as_limit 10-11-12-13
 * ```
 */
export class AviatrixControllerBgpMaxAsLimitConfig extends pulumi.CustomResource {
    /**
     * Get an existing AviatrixControllerBgpMaxAsLimitConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AviatrixControllerBgpMaxAsLimitConfigState, opts?: pulumi.CustomResourceOptions): AviatrixControllerBgpMaxAsLimitConfig {
        return new AviatrixControllerBgpMaxAsLimitConfig(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aviatrix:index/aviatrixControllerBgpMaxAsLimitConfig:AviatrixControllerBgpMaxAsLimitConfig';

    /**
     * Returns true if the given object is an instance of AviatrixControllerBgpMaxAsLimitConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AviatrixControllerBgpMaxAsLimitConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AviatrixControllerBgpMaxAsLimitConfig.__pulumiType;
    }

    /**
     * The maximum AS path limit allowed by transit gateways when handling BGP/Peering route propagation. Must be a number in the range [1-254].
     */
    public readonly maxAsLimit!: pulumi.Output<number>;

    /**
     * Create a AviatrixControllerBgpMaxAsLimitConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AviatrixControllerBgpMaxAsLimitConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AviatrixControllerBgpMaxAsLimitConfigArgs | AviatrixControllerBgpMaxAsLimitConfigState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AviatrixControllerBgpMaxAsLimitConfigState | undefined;
            resourceInputs["maxAsLimit"] = state ? state.maxAsLimit : undefined;
        } else {
            const args = argsOrState as AviatrixControllerBgpMaxAsLimitConfigArgs | undefined;
            if ((!args || args.maxAsLimit === undefined) && !opts.urn) {
                throw new Error("Missing required property 'maxAsLimit'");
            }
            resourceInputs["maxAsLimit"] = args ? args.maxAsLimit : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AviatrixControllerBgpMaxAsLimitConfig.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AviatrixControllerBgpMaxAsLimitConfig resources.
 */
export interface AviatrixControllerBgpMaxAsLimitConfigState {
    /**
     * The maximum AS path limit allowed by transit gateways when handling BGP/Peering route propagation. Must be a number in the range [1-254].
     */
    maxAsLimit?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a AviatrixControllerBgpMaxAsLimitConfig resource.
 */
export interface AviatrixControllerBgpMaxAsLimitConfigArgs {
    /**
     * The maximum AS path limit allowed by transit gateways when handling BGP/Peering route propagation. Must be a number in the range [1-254].
     */
    maxAsLimit: pulumi.Input<number>;
}
