// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Import
 *
 * **spoke_gateway** can be imported using the `gw_name`, e.g. ****
 *
 * ```sh
 *  $ pulumi import aviatrix:index/aviatrixSpokeGateway:AviatrixSpokeGateway test gw_name
 * ```
 */
export class AviatrixSpokeGateway extends pulumi.CustomResource {
    /**
     * Get an existing AviatrixSpokeGateway resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AviatrixSpokeGatewayState, opts?: pulumi.CustomResourceOptions): AviatrixSpokeGateway {
        return new AviatrixSpokeGateway(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aviatrix:index/aviatrixSpokeGateway:AviatrixSpokeGateway';

    /**
     * Returns true if the given object is an instance of AviatrixSpokeGateway.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AviatrixSpokeGateway {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AviatrixSpokeGateway.__pulumiType;
    }

    /**
     * This parameter represents the name of a Cloud-Account in Aviatrix controller.
     */
    public readonly accountName!: pulumi.Output<string>;
    /**
     * When value is false, reuse an idle address in Elastic IP pool for this gateway. Otherwise, allocate a new Elastic IP and use it for this gateway. Available in Controller 4.7+. Valid values: true, false. Default: true.
     */
    public readonly allocateNewEip!: pulumi.Output<boolean | undefined>;
    /**
     * A set of approved learned CIDRs. Only valid when `enableLearnedCidrsApproval` is set to true. Example: ["10.250.0.0/16", "10.251.0.0/16"]. Available as of provider version R2.21+.
     */
    public readonly approvedLearnedCidrs!: pulumi.Output<string[] | undefined>;
    /**
     * Availability domain. Required and valid only for OCI. Available as of provider version R2.19.3.
     */
    public readonly availabilityDomain!: pulumi.Output<string>;
    /**
     * Name of public IP Address resource and its resource group in Azure to be assigned to the Spoke Gateway instance. Example: "IP_Name:Resource_Group_Name". Required if `allocateNewEip` is false and `cloudType` is Azure, AzureGov or AzureChina. Available as of provider version 2.20+.
     */
    public readonly azureEipNameResourceGroup!: pulumi.Output<string>;
    /**
     * Enable Equal Cost Multi Path (ECMP) routing for the next hop. Default value: false.
     */
    public readonly bgpEcmp!: pulumi.Output<boolean | undefined>;
    /**
     * BGP hold time. Unit is in seconds. Valid values are between 12 and 360. Default value: 180.
     */
    public readonly bgpHoldTime!: pulumi.Output<number | undefined>;
    /**
     * BGP route polling time. Unit is in seconds. Valid values are between 10 and 50. Default value: "50".
     */
    public readonly bgpPollingTime!: pulumi.Output<number | undefined>;
    /**
     * Cloud instance ID of the spoke gateway.
     */
    public /*out*/ readonly cloudInstanceId!: pulumi.Output<string>;
    /**
     * Type of cloud service provider, requires an integer value. Currently, only AWS(1), GCP(4), Azure(8), OCI(16), AzureGov(32), AWSGov(256), AWSChina(1024), AzureChina(2048), Alibaba Cloud(8192), AWS Top Secret(16384) and AWS Secret (32768) are supported.
     */
    public readonly cloudType!: pulumi.Output<number>;
    /**
     * Customer managed key ID.
     */
    public readonly customerManagedKeys!: pulumi.Output<string | undefined>;
    /**
     * A list of comma separated CIDRs to be customized for the spoke VPC routes. When configured, it will replace all learned routes in VPC routing tables, including RFC1918 and non-RFC1918 CIDRs. It applies to this spoke gateway only. Example: "10.0.0.0/116,10.2.0.0/16".
     */
    public readonly customizedSpokeVpcRoutes!: pulumi.Output<string | undefined>;
    /**
     * Disables route propagation on BGP Spoke to attached Transit Gateway. Default value: false.
     */
    public readonly disableRoutePropagation!: pulumi.Output<boolean | undefined>;
    /**
     * Required when `allocateNewEip` is false. It uses the specified EIP for this gateway. Available in Controller 4.7+. Only available for AWS, GCP, Azure, OCI, AzureGov, AWSGov, AWSChina, AzureChina, AWS Top Secret and AWS Secret.
     */
    public readonly eip!: pulumi.Output<string>;
    /**
     * Enables [Active-Standby Mode](https://docs.aviatrix.com/HowTos/transit_advanced.html#active-standby). Available only with HA enabled. Valid values: true, false. Default value: false.
     */
    public readonly enableActiveStandby!: pulumi.Output<boolean | undefined>;
    /**
     * Enables Preemptive Mode for Active-Standby. Available only with BGP enabled, HA enabled and Active-Standby enabled. Valid values: true, false. Default value: false.
     */
    public readonly enableActiveStandbyPreemptive!: pulumi.Output<boolean | undefined>;
    /**
     * Auto Advertise Spoke Site2Cloud CIDRs. Default: false. Valid values: true or false. Available as of provider version R2.19+.
     */
    public readonly enableAutoAdvertiseS2cCidrs!: pulumi.Output<boolean | undefined>;
    /**
     * Enable BGP for this spoke gateway. Only available for AWS and Azure. Valid values: true, false. Default value: false. Available in provider R2.21.0+.
     */
    public readonly enableBgp!: pulumi.Output<boolean | undefined>;
    /**
     * Enable EBS volume encryption for Gateway. Only supports AWS, AWSGov, AWSChina, AWS Top Secret and AWS Secret providers. Valid values: true, false. Default value: false.
     */
    public readonly enableEncryptVolume!: pulumi.Output<boolean | undefined>;
    /**
     * Enable jumbo frames for this spoke gateway. Default value is true.
     */
    public readonly enableJumboFrame!: pulumi.Output<boolean | undefined>;
    /**
     * Switch to enable/disable learned CIDR approval for BGP Spoke Gateway. Valid values: true, false. Default value: false.
     */
    public readonly enableLearnedCidrsApproval!: pulumi.Output<boolean | undefined>;
    /**
     * If set to true, the [Monitor Gateway Subnets](https://docs.aviatrix.com/HowTos/gateway.html#monitor-gateway-subnet) feature is enabled. Default value is false. Available in provider version R2.18+.
     */
    public readonly enableMonitorGatewaySubnets!: pulumi.Output<boolean | undefined>;
    /**
     * Enable preserve asPath when advertising manual summary cidrs on BGP spoke gateway. Valid values: true, false. Default value: false. Available as of provider version R.2.22.1+
     */
    public readonly enablePreserveAsPath!: pulumi.Output<boolean | undefined>;
    /**
     * Enable Private OOB feature. Only available for AWS, AWSGov, AWSChina, AWS Top Secret and AWS Secret. Valid values: true, false. Default value: false.
     */
    public readonly enablePrivateOob!: pulumi.Output<boolean | undefined>;
    /**
     * Program default route in VPC private route table. Default: false. Valid values: true or false. Available as of provider version R2.19+.
     */
    public readonly enablePrivateVpcDefaultRoute!: pulumi.Output<boolean | undefined>;
    /**
     * Skip programming VPC public route table. Default: false. Valid values: true or false. Available as of provider version R2.19+.
     */
    public readonly enableSkipPublicRouteTableUpdate!: pulumi.Output<boolean | undefined>;
    /**
     * Enable spot instance. NOT supported for production deployment.
     */
    public readonly enableSpotInstance!: pulumi.Output<boolean | undefined>;
    /**
     * Enable VPC DNS Server for Gateway. Currently only supported for AWS, Azure, AzureGov, AWSGov, AWSChina, AzureChina, Alibaba Cloud, AWS Top Secret and AWS Secret gateways. Valid values: true, false. Default value: false.
     */
    public readonly enableVpcDnsServer!: pulumi.Output<boolean | undefined>;
    /**
     * Fault domain. Required and valid only for OCI. Available as of provider version R2.19.3.
     */
    public readonly faultDomain!: pulumi.Output<string>;
    /**
     * A list of comma separated CIDRs to be filtered from the spoke VPC route table. When configured, filtering CIDR(s) or it’s subnet will be deleted from VPC routing tables as well as from spoke gateway’s routing table. It applies to this spoke gateway only. Example: "10.2.0.0/116,10.3.0.0/16".
     */
    public readonly filteredSpokeVpcRoutes!: pulumi.Output<string | undefined>;
    /**
     * Name of the gateway which is going to be created.
     */
    public readonly gwName!: pulumi.Output<string>;
    /**
     * Size of the gateway instance. Example: AWS/AWSGov/AWSChina: "t2.large", Azure/AzureGov/AzureChina: "Standard_B1s", OCI: "VM.Standard2.2", GCP: "n1-standard-1".
     */
    public readonly gwSize!: pulumi.Output<string>;
    /**
     * HA gateway availability domain. Required and valid only for OCI. Available as of provider version R2.19.3.
     */
    public readonly haAvailabilityDomain!: pulumi.Output<string>;
    /**
     * Name of public IP Address resource and its resource group in Azure to be assigned to the HA Spoke Gateway instance. Example: "IP_Name:Resource_Group_Name". Required if `haEip` is set and `cloudType` is Azure, AzureGov or AzureChina. Available as of provider version 2.20+.
     */
    public readonly haAzureEipNameResourceGroup!: pulumi.Output<string>;
    /**
     * Cloud instance ID of the HA spoke gateway.
     */
    public /*out*/ readonly haCloudInstanceId!: pulumi.Output<string>;
    /**
     * Public IP address that you want to assign to the HA peering instance. If no value is given, a new EIP will automatically be allocated. Only available for AWS, GCP, Azure, OCI, AzureGov, AWSGov, AWSChina, AzureChina, AWS Top Secret and AWS Secret.
     */
    public readonly haEip!: pulumi.Output<string>;
    /**
     * HA gateway fault domain. Required and valid only for OCI. Available as of provider version R2.19.3.
     */
    public readonly haFaultDomain!: pulumi.Output<string>;
    /**
     * Aviatrix spoke gateway unique name of HA spoke gateway.
     */
    public /*out*/ readonly haGwName!: pulumi.Output<string>;
    /**
     * HA Gateway Size. Mandatory if enabling HA.
     */
    public readonly haGwSize!: pulumi.Output<string | undefined>;
    /**
     * The image version of the HA gateway. Use `aviatrix.getAviatrixGatewayImage` data source to programmatically retrieve this value for the desired `haSoftwareVersion`. If set, we will attempt to update the HA gateway to the specified version if current version is different. If left blank, the gateway upgrades can be managed with the `aviatrix.AviatrixControllerConfig` resource. Type: String. Example: "hvm-cloudx-aws-022021". Available as of provider version R2.20.0.
     */
    public readonly haImageVersion!: pulumi.Output<string>;
    /**
     * AZ of subnet being created for Insane Mode Spoke HA Gateway. Required for AWS, AzureGov, AWSGov, AWS Top Secret and AWS Secret if `insaneMode` is enabled and `haSubnet` is set. Example: AWS: "us-west-1a".
     */
    public readonly haInsaneModeAz!: pulumi.Output<string | undefined>;
    /**
     * HA OOB availability zone. Required if enabling Private OOB and HA. Example: "us-west-1b".
     */
    public readonly haOobAvailabilityZone!: pulumi.Output<string | undefined>;
    /**
     * HA OOB management subnet. Required if enabling Private OOB and HA. Example: "11.0.0.48/28".
     */
    public readonly haOobManagementSubnet!: pulumi.Output<string | undefined>;
    /**
     * Private IP address of HA spoke gateway.
     */
    public /*out*/ readonly haPrivateIp!: pulumi.Output<string>;
    /**
     * Availability Zone of the HA subnet. Required when Private Mode is enabled on the Controller and `cloudType` is AWS or AWSGov with HA. Available in Provider version R2.23+.
     */
    public readonly haPrivateModeSubnetZone!: pulumi.Output<string | undefined>;
    /**
     * Public IP address of the HA Spoke Gateway.
     */
    public /*out*/ readonly haPublicIp!: pulumi.Output<string>;
    /**
     * HA security group used for the spoke gateway.
     */
    public /*out*/ readonly haSecurityGroupId!: pulumi.Output<string>;
    /**
     * The software version of the HA gateway. If set, we will attempt to update the HA gateway to the specified version if current version is different. If left blank, the HA gateway upgrade can be managed with the `aviatrix.AviatrixControllerConfig` resource. Type: String. Example: "6.5.821". Available as of provider version R2.20.0.
     */
    public readonly haSoftwareVersion!: pulumi.Output<string>;
    /**
     * HA Subnet. Required if enabling HA for AWS, AWSGov, AWSChina, Azure, AzureGov, AzureChina, OCI, Alibaba Cloud, AWS Top Secret or AWS Secret gateways. Optional for GCP. Setting to empty/unsetting will disable HA. Setting to a valid subnet CIDR will create an HA gateway on the subnet. Example: "10.12.0.0/24"
     */
    public readonly haSubnet!: pulumi.Output<string | undefined>;
    /**
     * HA Zone. Required if enabling HA for GCP gateway. Optional for Azure. For GCP, setting to empty/unsetting will disable HA and setting to a valid zone will create an HA gateway in the zone. Example: "us-west1-c". For Azure, this is an optional parameter to place the HA gateway in a specific availability zone. Valid values for Azure gateways are in the form "az-n". Example: "az-2". Available for Azure as of provider version R2.17+.
     */
    public readonly haZone!: pulumi.Output<string | undefined>;
    /**
     * The image version of the gateway. Use `aviatrix.getAviatrixGatewayImage` data source to programmatically retrieve this value for the desired `softwareVersion`. If set, we will attempt to update the gateway to the specified version if current version is different. If left blank, the gateway upgrades can be managed with the `aviatrix.AviatrixControllerConfig` resource. Type: String. Example: "hvm-cloudx-aws-022021". Available as of provider version R2.20.0.
     */
    public readonly imageVersion!: pulumi.Output<string>;
    /**
     * A list of comma separated CIDRs to be advertised to on-prem as 'Included CIDR List'. When configured, it will replace all advertised routes from this VPC. Example: "10.4.0.0/116,10.5.0.0/16".
     */
    public readonly includedAdvertisedSpokeRoutes!: pulumi.Output<string | undefined>;
    /**
     * Enable [Insane Mode](https://docs.aviatrix.com/HowTos/insane_mode.html) for Spoke Gateway. Insane Mode gateway size must be at least c5 size (AWS, AWSGov, AWS China, AWS Top Secret and AWS Secret) or Standard_D3_v2 (Azure and AzureGov); for GCP only four size are supported: "n1-highcpu-4", "n1-highcpu-8", "n1-highcpu-16" and "n1-highcpu-32". If enabled, you must specify a valid /26 CIDR segment of the VPC to create a new subnet for AWS, Azure, AzureGov, AWSGov, AWS Top Secret and AWS Secret. Only available for AWS, GCP/OCI, Azure, AzureGov, AzureChina, AWSGov, AWS Top Secret and AWS Secret. Valid values: true, false. Default value: false.
     */
    public readonly insaneMode!: pulumi.Output<boolean | undefined>;
    /**
     * AZ of subnet being created for Insane Mode Spoke Gateway. Required for AWS, AWSGov, AWS China, AWS Top Secret or AWS Secret if `insaneMode` is enabled. Example: AWS: "us-west-1a".
     */
    public readonly insaneModeAz!: pulumi.Output<string | undefined>;
    /**
     * Learned CIDRs approval mode. Either "gateway" (approval on a per-gateway basis) or "connection" (approval on a per-connection basis). Only "gateway" is supported for BGP SPOKE Gateway. Default value: "gateway". Available as of provider version R2.21+.
     */
    public readonly learnedCidrsApprovalMode!: pulumi.Output<string | undefined>;
    /**
     * Changes the Aviatrix Spoke Gateway ASN number before you setup Aviatrix Spoke Gateway connection configurations.
     */
    public readonly localAsNumber!: pulumi.Output<string>;
    /**
     * Enable to manage spoke-to-Aviatrix transit gateway attachments using the **aviatrix_spoke_gateway** resource with the below `transitGw` attribute. If this is set to false, attaching this spoke to transit gateways must be done using the **aviatrix_spoke_transit_attachment** resource. Valid values: true, false. Default value: true. Available in provider R2.17+.
     */
    public readonly manageTransitGatewayAttachment!: pulumi.Output<boolean | undefined>;
    /**
     * Set of monitored instance ids. Only valid when 'enable_monitor_gateway_subnets' = true. Available in provider version R2.18+.
     */
    public readonly monitorExcludeLists!: pulumi.Output<string[] | undefined>;
    /**
     * OOB availability zone. Required if enabling Private OOB. Example: "us-west-1a".
     */
    public readonly oobAvailabilityZone!: pulumi.Output<string | undefined>;
    /**
     * OOB management subnet. Required if enabling Private OOB. Example: "11.0.2.0/24".
     */
    public readonly oobManagementSubnet!: pulumi.Output<string | undefined>;
    /**
     * List of AS numbers to populate BGP AS_PATH field when it advertises to VGW or peer devices.
     */
    public readonly prependAsPaths!: pulumi.Output<string[] | undefined>;
    /**
     * Private IP address of the spoke gateway created.
     */
    public /*out*/ readonly privateIp!: pulumi.Output<string>;
    /**
     * VPC ID of Private Mode load balancer. Required when Private Mode is enabled on the Controller. Available in provider version R2.23+.
     */
    public readonly privateModeLbVpcId!: pulumi.Output<string | undefined>;
    /**
     * Availability Zone of the subnet. Required when Private Mode is enabled on the Controller and `cloudType` is AWS or AWSGov. Available in Provider version R2.23+.
     */
    public readonly privateModeSubnetZone!: pulumi.Output<string | undefined>;
    /**
     * Public IP address of the Spoke Gateway created.
     */
    public /*out*/ readonly publicIp!: pulumi.Output<string>;
    /**
     * Gateway ethernet interface RX queue size. Once set, can't be deleted or disabled. Available for AWS as of provider version R2.22+.
     */
    public readonly rxQueueSize!: pulumi.Output<string | undefined>;
    /**
     * Security group used for the spoke gateway.
     */
    public /*out*/ readonly securityGroupId!: pulumi.Output<string>;
    /**
     * Set to true if this [feature](https://docs.aviatrix.com/Solutions/gateway_ha.html#single-az-gateway) is desired. Valid values: true, false.
     */
    public readonly singleAzHa!: pulumi.Output<boolean | undefined>;
    /**
     * Specify whether to enable Source NAT feature in "singleIp" mode on the gateway or not. Please disable AWS NAT instance before enabling this feature. Currently only supports AWS(1) and Azure(8). Valid values: true, false.
     */
    public readonly singleIpSnat!: pulumi.Output<boolean | undefined>;
    /**
     * The software version of the gateway. If set, we will attempt to update the gateway to the specified version if current version is different. If left blank, the gateway upgrade can be managed with the `aviatrix.AviatrixControllerConfig` resource. Type: String. Example: "6.5.821". Available as of provider version R2.20.0.
     */
    public readonly softwareVersion!: pulumi.Output<string>;
    /**
     * Intended CIDR list to be advertised to external BGP router. Empty list is not valid. Example: ["10.2.0.0/16", "10.4.0.0/16"].
     */
    public readonly spokeBgpManualAdvertiseCidrs!: pulumi.Output<string[] | undefined>;
    /**
     * Price for spot instance. NOT supported for production deployment.
     */
    public readonly spotPrice!: pulumi.Output<string | undefined>;
    /**
     * A VPC Network address range selected from one of the available network ranges. Example: "172.31.0.0/20". **NOTE: If using `insaneMode`, please see notes here.**
     */
    public readonly subnet!: pulumi.Output<string>;
    /**
     * (Optional) Instance tag of cloud provider. Only supported for AWS, Azure, AzureGov, AWSGov, AWSChina and AzureChina. Example: ["key1:value1", "key2:value2"].
     *
     * @deprecated Use tags instead.
     */
    public readonly tagLists!: pulumi.Output<string[] | undefined>;
    /**
     * Map of tags to assign to the gateway. Only available for AWS, Azure, AzureGov, AWSGov, AWSChina, AzureChina, AWS Top Secret and AWS Secret gateways. Allowed characters vary by cloud type but always include: letters, spaces, and numbers. AWS, AWSGov, AWSChina, AWS Top Secret and AWS Secret allow the use of any character. Azure, AzureGov and AzureChina allows the following special characters: + - = . _ : @. Example: {"key1" = "value1", "key2" = "value2"}.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Specify the Aviatrix transit gateways to attach this spoke gateway to. Format is a comma separated list of transit gateway names. For example: "transit-gw1,transit-gw2".
     *
     * @deprecated Please set `manage_transit_gateway_attachment` to false, and use the standalone aviatrix_spoke_transit_attachment resource instead.
     */
    public readonly transitGw!: pulumi.Output<string | undefined>;
    /**
     * The IPSec tunnel down detection time for the Spoke Gateway.
     */
    public readonly tunnelDetectionTime!: pulumi.Output<number>;
    /**
     * VPC-ID/VNet-Name of cloud provider. Example: AWS/AWSGov/AWSChina: "vpc-abcd1234", GCP: "vpc-gcp-test~-~project-id", Azure/AzureGov/AzureChina: "vnet_name:rg_name:resource_guid", OCI: "ocid1.vcn.oc1.iad.aaaaaaaaba3pv6wkcr4jqae5f44n2b2m2yt2j6rx32uzr4h25vqstifsfdsq".
     */
    public readonly vpcId!: pulumi.Output<string>;
    /**
     * Region of cloud provider. Example: AWS: "us-east-1", GCP: "us-west2-a", Azure: "East US 2", OCI: "us-ashburn-1", AzureGov: "USGov Arizona", AWSGov: "us-gov-west-1, AWSChina: "cn-north-1", AzureChina: "China North", AWS Top Secret: "us-iso-east-1", AWS Secret: "us-isob-east-1".
     */
    public readonly vpcReg!: pulumi.Output<string>;
    /**
     * Availability Zone. Only available for cloudType = 8 (Azure). Must be in the form 'az-n', for example, 'az-2'. Available in provider version R2.17+.
     */
    public readonly zone!: pulumi.Output<string | undefined>;

    /**
     * Create a AviatrixSpokeGateway resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AviatrixSpokeGatewayArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AviatrixSpokeGatewayArgs | AviatrixSpokeGatewayState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AviatrixSpokeGatewayState | undefined;
            resourceInputs["accountName"] = state ? state.accountName : undefined;
            resourceInputs["allocateNewEip"] = state ? state.allocateNewEip : undefined;
            resourceInputs["approvedLearnedCidrs"] = state ? state.approvedLearnedCidrs : undefined;
            resourceInputs["availabilityDomain"] = state ? state.availabilityDomain : undefined;
            resourceInputs["azureEipNameResourceGroup"] = state ? state.azureEipNameResourceGroup : undefined;
            resourceInputs["bgpEcmp"] = state ? state.bgpEcmp : undefined;
            resourceInputs["bgpHoldTime"] = state ? state.bgpHoldTime : undefined;
            resourceInputs["bgpPollingTime"] = state ? state.bgpPollingTime : undefined;
            resourceInputs["cloudInstanceId"] = state ? state.cloudInstanceId : undefined;
            resourceInputs["cloudType"] = state ? state.cloudType : undefined;
            resourceInputs["customerManagedKeys"] = state ? state.customerManagedKeys : undefined;
            resourceInputs["customizedSpokeVpcRoutes"] = state ? state.customizedSpokeVpcRoutes : undefined;
            resourceInputs["disableRoutePropagation"] = state ? state.disableRoutePropagation : undefined;
            resourceInputs["eip"] = state ? state.eip : undefined;
            resourceInputs["enableActiveStandby"] = state ? state.enableActiveStandby : undefined;
            resourceInputs["enableActiveStandbyPreemptive"] = state ? state.enableActiveStandbyPreemptive : undefined;
            resourceInputs["enableAutoAdvertiseS2cCidrs"] = state ? state.enableAutoAdvertiseS2cCidrs : undefined;
            resourceInputs["enableBgp"] = state ? state.enableBgp : undefined;
            resourceInputs["enableEncryptVolume"] = state ? state.enableEncryptVolume : undefined;
            resourceInputs["enableJumboFrame"] = state ? state.enableJumboFrame : undefined;
            resourceInputs["enableLearnedCidrsApproval"] = state ? state.enableLearnedCidrsApproval : undefined;
            resourceInputs["enableMonitorGatewaySubnets"] = state ? state.enableMonitorGatewaySubnets : undefined;
            resourceInputs["enablePreserveAsPath"] = state ? state.enablePreserveAsPath : undefined;
            resourceInputs["enablePrivateOob"] = state ? state.enablePrivateOob : undefined;
            resourceInputs["enablePrivateVpcDefaultRoute"] = state ? state.enablePrivateVpcDefaultRoute : undefined;
            resourceInputs["enableSkipPublicRouteTableUpdate"] = state ? state.enableSkipPublicRouteTableUpdate : undefined;
            resourceInputs["enableSpotInstance"] = state ? state.enableSpotInstance : undefined;
            resourceInputs["enableVpcDnsServer"] = state ? state.enableVpcDnsServer : undefined;
            resourceInputs["faultDomain"] = state ? state.faultDomain : undefined;
            resourceInputs["filteredSpokeVpcRoutes"] = state ? state.filteredSpokeVpcRoutes : undefined;
            resourceInputs["gwName"] = state ? state.gwName : undefined;
            resourceInputs["gwSize"] = state ? state.gwSize : undefined;
            resourceInputs["haAvailabilityDomain"] = state ? state.haAvailabilityDomain : undefined;
            resourceInputs["haAzureEipNameResourceGroup"] = state ? state.haAzureEipNameResourceGroup : undefined;
            resourceInputs["haCloudInstanceId"] = state ? state.haCloudInstanceId : undefined;
            resourceInputs["haEip"] = state ? state.haEip : undefined;
            resourceInputs["haFaultDomain"] = state ? state.haFaultDomain : undefined;
            resourceInputs["haGwName"] = state ? state.haGwName : undefined;
            resourceInputs["haGwSize"] = state ? state.haGwSize : undefined;
            resourceInputs["haImageVersion"] = state ? state.haImageVersion : undefined;
            resourceInputs["haInsaneModeAz"] = state ? state.haInsaneModeAz : undefined;
            resourceInputs["haOobAvailabilityZone"] = state ? state.haOobAvailabilityZone : undefined;
            resourceInputs["haOobManagementSubnet"] = state ? state.haOobManagementSubnet : undefined;
            resourceInputs["haPrivateIp"] = state ? state.haPrivateIp : undefined;
            resourceInputs["haPrivateModeSubnetZone"] = state ? state.haPrivateModeSubnetZone : undefined;
            resourceInputs["haPublicIp"] = state ? state.haPublicIp : undefined;
            resourceInputs["haSecurityGroupId"] = state ? state.haSecurityGroupId : undefined;
            resourceInputs["haSoftwareVersion"] = state ? state.haSoftwareVersion : undefined;
            resourceInputs["haSubnet"] = state ? state.haSubnet : undefined;
            resourceInputs["haZone"] = state ? state.haZone : undefined;
            resourceInputs["imageVersion"] = state ? state.imageVersion : undefined;
            resourceInputs["includedAdvertisedSpokeRoutes"] = state ? state.includedAdvertisedSpokeRoutes : undefined;
            resourceInputs["insaneMode"] = state ? state.insaneMode : undefined;
            resourceInputs["insaneModeAz"] = state ? state.insaneModeAz : undefined;
            resourceInputs["learnedCidrsApprovalMode"] = state ? state.learnedCidrsApprovalMode : undefined;
            resourceInputs["localAsNumber"] = state ? state.localAsNumber : undefined;
            resourceInputs["manageTransitGatewayAttachment"] = state ? state.manageTransitGatewayAttachment : undefined;
            resourceInputs["monitorExcludeLists"] = state ? state.monitorExcludeLists : undefined;
            resourceInputs["oobAvailabilityZone"] = state ? state.oobAvailabilityZone : undefined;
            resourceInputs["oobManagementSubnet"] = state ? state.oobManagementSubnet : undefined;
            resourceInputs["prependAsPaths"] = state ? state.prependAsPaths : undefined;
            resourceInputs["privateIp"] = state ? state.privateIp : undefined;
            resourceInputs["privateModeLbVpcId"] = state ? state.privateModeLbVpcId : undefined;
            resourceInputs["privateModeSubnetZone"] = state ? state.privateModeSubnetZone : undefined;
            resourceInputs["publicIp"] = state ? state.publicIp : undefined;
            resourceInputs["rxQueueSize"] = state ? state.rxQueueSize : undefined;
            resourceInputs["securityGroupId"] = state ? state.securityGroupId : undefined;
            resourceInputs["singleAzHa"] = state ? state.singleAzHa : undefined;
            resourceInputs["singleIpSnat"] = state ? state.singleIpSnat : undefined;
            resourceInputs["softwareVersion"] = state ? state.softwareVersion : undefined;
            resourceInputs["spokeBgpManualAdvertiseCidrs"] = state ? state.spokeBgpManualAdvertiseCidrs : undefined;
            resourceInputs["spotPrice"] = state ? state.spotPrice : undefined;
            resourceInputs["subnet"] = state ? state.subnet : undefined;
            resourceInputs["tagLists"] = state ? state.tagLists : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["transitGw"] = state ? state.transitGw : undefined;
            resourceInputs["tunnelDetectionTime"] = state ? state.tunnelDetectionTime : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
            resourceInputs["vpcReg"] = state ? state.vpcReg : undefined;
            resourceInputs["zone"] = state ? state.zone : undefined;
        } else {
            const args = argsOrState as AviatrixSpokeGatewayArgs | undefined;
            if ((!args || args.accountName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountName'");
            }
            if ((!args || args.cloudType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cloudType'");
            }
            if ((!args || args.gwName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'gwName'");
            }
            if ((!args || args.gwSize === undefined) && !opts.urn) {
                throw new Error("Missing required property 'gwSize'");
            }
            if ((!args || args.subnet === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnet'");
            }
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            if ((!args || args.vpcReg === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcReg'");
            }
            resourceInputs["accountName"] = args ? args.accountName : undefined;
            resourceInputs["allocateNewEip"] = args ? args.allocateNewEip : undefined;
            resourceInputs["approvedLearnedCidrs"] = args ? args.approvedLearnedCidrs : undefined;
            resourceInputs["availabilityDomain"] = args ? args.availabilityDomain : undefined;
            resourceInputs["azureEipNameResourceGroup"] = args ? args.azureEipNameResourceGroup : undefined;
            resourceInputs["bgpEcmp"] = args ? args.bgpEcmp : undefined;
            resourceInputs["bgpHoldTime"] = args ? args.bgpHoldTime : undefined;
            resourceInputs["bgpPollingTime"] = args ? args.bgpPollingTime : undefined;
            resourceInputs["cloudType"] = args ? args.cloudType : undefined;
            resourceInputs["customerManagedKeys"] = args?.customerManagedKeys ? pulumi.secret(args.customerManagedKeys) : undefined;
            resourceInputs["customizedSpokeVpcRoutes"] = args ? args.customizedSpokeVpcRoutes : undefined;
            resourceInputs["disableRoutePropagation"] = args ? args.disableRoutePropagation : undefined;
            resourceInputs["eip"] = args ? args.eip : undefined;
            resourceInputs["enableActiveStandby"] = args ? args.enableActiveStandby : undefined;
            resourceInputs["enableActiveStandbyPreemptive"] = args ? args.enableActiveStandbyPreemptive : undefined;
            resourceInputs["enableAutoAdvertiseS2cCidrs"] = args ? args.enableAutoAdvertiseS2cCidrs : undefined;
            resourceInputs["enableBgp"] = args ? args.enableBgp : undefined;
            resourceInputs["enableEncryptVolume"] = args ? args.enableEncryptVolume : undefined;
            resourceInputs["enableJumboFrame"] = args ? args.enableJumboFrame : undefined;
            resourceInputs["enableLearnedCidrsApproval"] = args ? args.enableLearnedCidrsApproval : undefined;
            resourceInputs["enableMonitorGatewaySubnets"] = args ? args.enableMonitorGatewaySubnets : undefined;
            resourceInputs["enablePreserveAsPath"] = args ? args.enablePreserveAsPath : undefined;
            resourceInputs["enablePrivateOob"] = args ? args.enablePrivateOob : undefined;
            resourceInputs["enablePrivateVpcDefaultRoute"] = args ? args.enablePrivateVpcDefaultRoute : undefined;
            resourceInputs["enableSkipPublicRouteTableUpdate"] = args ? args.enableSkipPublicRouteTableUpdate : undefined;
            resourceInputs["enableSpotInstance"] = args ? args.enableSpotInstance : undefined;
            resourceInputs["enableVpcDnsServer"] = args ? args.enableVpcDnsServer : undefined;
            resourceInputs["faultDomain"] = args ? args.faultDomain : undefined;
            resourceInputs["filteredSpokeVpcRoutes"] = args ? args.filteredSpokeVpcRoutes : undefined;
            resourceInputs["gwName"] = args ? args.gwName : undefined;
            resourceInputs["gwSize"] = args ? args.gwSize : undefined;
            resourceInputs["haAvailabilityDomain"] = args ? args.haAvailabilityDomain : undefined;
            resourceInputs["haAzureEipNameResourceGroup"] = args ? args.haAzureEipNameResourceGroup : undefined;
            resourceInputs["haEip"] = args ? args.haEip : undefined;
            resourceInputs["haFaultDomain"] = args ? args.haFaultDomain : undefined;
            resourceInputs["haGwSize"] = args ? args.haGwSize : undefined;
            resourceInputs["haImageVersion"] = args ? args.haImageVersion : undefined;
            resourceInputs["haInsaneModeAz"] = args ? args.haInsaneModeAz : undefined;
            resourceInputs["haOobAvailabilityZone"] = args ? args.haOobAvailabilityZone : undefined;
            resourceInputs["haOobManagementSubnet"] = args ? args.haOobManagementSubnet : undefined;
            resourceInputs["haPrivateModeSubnetZone"] = args ? args.haPrivateModeSubnetZone : undefined;
            resourceInputs["haSoftwareVersion"] = args ? args.haSoftwareVersion : undefined;
            resourceInputs["haSubnet"] = args ? args.haSubnet : undefined;
            resourceInputs["haZone"] = args ? args.haZone : undefined;
            resourceInputs["imageVersion"] = args ? args.imageVersion : undefined;
            resourceInputs["includedAdvertisedSpokeRoutes"] = args ? args.includedAdvertisedSpokeRoutes : undefined;
            resourceInputs["insaneMode"] = args ? args.insaneMode : undefined;
            resourceInputs["insaneModeAz"] = args ? args.insaneModeAz : undefined;
            resourceInputs["learnedCidrsApprovalMode"] = args ? args.learnedCidrsApprovalMode : undefined;
            resourceInputs["localAsNumber"] = args ? args.localAsNumber : undefined;
            resourceInputs["manageTransitGatewayAttachment"] = args ? args.manageTransitGatewayAttachment : undefined;
            resourceInputs["monitorExcludeLists"] = args ? args.monitorExcludeLists : undefined;
            resourceInputs["oobAvailabilityZone"] = args ? args.oobAvailabilityZone : undefined;
            resourceInputs["oobManagementSubnet"] = args ? args.oobManagementSubnet : undefined;
            resourceInputs["prependAsPaths"] = args ? args.prependAsPaths : undefined;
            resourceInputs["privateModeLbVpcId"] = args ? args.privateModeLbVpcId : undefined;
            resourceInputs["privateModeSubnetZone"] = args ? args.privateModeSubnetZone : undefined;
            resourceInputs["rxQueueSize"] = args ? args.rxQueueSize : undefined;
            resourceInputs["singleAzHa"] = args ? args.singleAzHa : undefined;
            resourceInputs["singleIpSnat"] = args ? args.singleIpSnat : undefined;
            resourceInputs["softwareVersion"] = args ? args.softwareVersion : undefined;
            resourceInputs["spokeBgpManualAdvertiseCidrs"] = args ? args.spokeBgpManualAdvertiseCidrs : undefined;
            resourceInputs["spotPrice"] = args ? args.spotPrice : undefined;
            resourceInputs["subnet"] = args ? args.subnet : undefined;
            resourceInputs["tagLists"] = args ? args.tagLists : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["transitGw"] = args ? args.transitGw : undefined;
            resourceInputs["tunnelDetectionTime"] = args ? args.tunnelDetectionTime : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["vpcReg"] = args ? args.vpcReg : undefined;
            resourceInputs["zone"] = args ? args.zone : undefined;
            resourceInputs["cloudInstanceId"] = undefined /*out*/;
            resourceInputs["haCloudInstanceId"] = undefined /*out*/;
            resourceInputs["haGwName"] = undefined /*out*/;
            resourceInputs["haPrivateIp"] = undefined /*out*/;
            resourceInputs["haPublicIp"] = undefined /*out*/;
            resourceInputs["haSecurityGroupId"] = undefined /*out*/;
            resourceInputs["privateIp"] = undefined /*out*/;
            resourceInputs["publicIp"] = undefined /*out*/;
            resourceInputs["securityGroupId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["customerManagedKeys"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(AviatrixSpokeGateway.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AviatrixSpokeGateway resources.
 */
export interface AviatrixSpokeGatewayState {
    /**
     * This parameter represents the name of a Cloud-Account in Aviatrix controller.
     */
    accountName?: pulumi.Input<string>;
    /**
     * When value is false, reuse an idle address in Elastic IP pool for this gateway. Otherwise, allocate a new Elastic IP and use it for this gateway. Available in Controller 4.7+. Valid values: true, false. Default: true.
     */
    allocateNewEip?: pulumi.Input<boolean>;
    /**
     * A set of approved learned CIDRs. Only valid when `enableLearnedCidrsApproval` is set to true. Example: ["10.250.0.0/16", "10.251.0.0/16"]. Available as of provider version R2.21+.
     */
    approvedLearnedCidrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Availability domain. Required and valid only for OCI. Available as of provider version R2.19.3.
     */
    availabilityDomain?: pulumi.Input<string>;
    /**
     * Name of public IP Address resource and its resource group in Azure to be assigned to the Spoke Gateway instance. Example: "IP_Name:Resource_Group_Name". Required if `allocateNewEip` is false and `cloudType` is Azure, AzureGov or AzureChina. Available as of provider version 2.20+.
     */
    azureEipNameResourceGroup?: pulumi.Input<string>;
    /**
     * Enable Equal Cost Multi Path (ECMP) routing for the next hop. Default value: false.
     */
    bgpEcmp?: pulumi.Input<boolean>;
    /**
     * BGP hold time. Unit is in seconds. Valid values are between 12 and 360. Default value: 180.
     */
    bgpHoldTime?: pulumi.Input<number>;
    /**
     * BGP route polling time. Unit is in seconds. Valid values are between 10 and 50. Default value: "50".
     */
    bgpPollingTime?: pulumi.Input<number>;
    /**
     * Cloud instance ID of the spoke gateway.
     */
    cloudInstanceId?: pulumi.Input<string>;
    /**
     * Type of cloud service provider, requires an integer value. Currently, only AWS(1), GCP(4), Azure(8), OCI(16), AzureGov(32), AWSGov(256), AWSChina(1024), AzureChina(2048), Alibaba Cloud(8192), AWS Top Secret(16384) and AWS Secret (32768) are supported.
     */
    cloudType?: pulumi.Input<number>;
    /**
     * Customer managed key ID.
     */
    customerManagedKeys?: pulumi.Input<string>;
    /**
     * A list of comma separated CIDRs to be customized for the spoke VPC routes. When configured, it will replace all learned routes in VPC routing tables, including RFC1918 and non-RFC1918 CIDRs. It applies to this spoke gateway only. Example: "10.0.0.0/116,10.2.0.0/16".
     */
    customizedSpokeVpcRoutes?: pulumi.Input<string>;
    /**
     * Disables route propagation on BGP Spoke to attached Transit Gateway. Default value: false.
     */
    disableRoutePropagation?: pulumi.Input<boolean>;
    /**
     * Required when `allocateNewEip` is false. It uses the specified EIP for this gateway. Available in Controller 4.7+. Only available for AWS, GCP, Azure, OCI, AzureGov, AWSGov, AWSChina, AzureChina, AWS Top Secret and AWS Secret.
     */
    eip?: pulumi.Input<string>;
    /**
     * Enables [Active-Standby Mode](https://docs.aviatrix.com/HowTos/transit_advanced.html#active-standby). Available only with HA enabled. Valid values: true, false. Default value: false.
     */
    enableActiveStandby?: pulumi.Input<boolean>;
    /**
     * Enables Preemptive Mode for Active-Standby. Available only with BGP enabled, HA enabled and Active-Standby enabled. Valid values: true, false. Default value: false.
     */
    enableActiveStandbyPreemptive?: pulumi.Input<boolean>;
    /**
     * Auto Advertise Spoke Site2Cloud CIDRs. Default: false. Valid values: true or false. Available as of provider version R2.19+.
     */
    enableAutoAdvertiseS2cCidrs?: pulumi.Input<boolean>;
    /**
     * Enable BGP for this spoke gateway. Only available for AWS and Azure. Valid values: true, false. Default value: false. Available in provider R2.21.0+.
     */
    enableBgp?: pulumi.Input<boolean>;
    /**
     * Enable EBS volume encryption for Gateway. Only supports AWS, AWSGov, AWSChina, AWS Top Secret and AWS Secret providers. Valid values: true, false. Default value: false.
     */
    enableEncryptVolume?: pulumi.Input<boolean>;
    /**
     * Enable jumbo frames for this spoke gateway. Default value is true.
     */
    enableJumboFrame?: pulumi.Input<boolean>;
    /**
     * Switch to enable/disable learned CIDR approval for BGP Spoke Gateway. Valid values: true, false. Default value: false.
     */
    enableLearnedCidrsApproval?: pulumi.Input<boolean>;
    /**
     * If set to true, the [Monitor Gateway Subnets](https://docs.aviatrix.com/HowTos/gateway.html#monitor-gateway-subnet) feature is enabled. Default value is false. Available in provider version R2.18+.
     */
    enableMonitorGatewaySubnets?: pulumi.Input<boolean>;
    /**
     * Enable preserve asPath when advertising manual summary cidrs on BGP spoke gateway. Valid values: true, false. Default value: false. Available as of provider version R.2.22.1+
     */
    enablePreserveAsPath?: pulumi.Input<boolean>;
    /**
     * Enable Private OOB feature. Only available for AWS, AWSGov, AWSChina, AWS Top Secret and AWS Secret. Valid values: true, false. Default value: false.
     */
    enablePrivateOob?: pulumi.Input<boolean>;
    /**
     * Program default route in VPC private route table. Default: false. Valid values: true or false. Available as of provider version R2.19+.
     */
    enablePrivateVpcDefaultRoute?: pulumi.Input<boolean>;
    /**
     * Skip programming VPC public route table. Default: false. Valid values: true or false. Available as of provider version R2.19+.
     */
    enableSkipPublicRouteTableUpdate?: pulumi.Input<boolean>;
    /**
     * Enable spot instance. NOT supported for production deployment.
     */
    enableSpotInstance?: pulumi.Input<boolean>;
    /**
     * Enable VPC DNS Server for Gateway. Currently only supported for AWS, Azure, AzureGov, AWSGov, AWSChina, AzureChina, Alibaba Cloud, AWS Top Secret and AWS Secret gateways. Valid values: true, false. Default value: false.
     */
    enableVpcDnsServer?: pulumi.Input<boolean>;
    /**
     * Fault domain. Required and valid only for OCI. Available as of provider version R2.19.3.
     */
    faultDomain?: pulumi.Input<string>;
    /**
     * A list of comma separated CIDRs to be filtered from the spoke VPC route table. When configured, filtering CIDR(s) or it’s subnet will be deleted from VPC routing tables as well as from spoke gateway’s routing table. It applies to this spoke gateway only. Example: "10.2.0.0/116,10.3.0.0/16".
     */
    filteredSpokeVpcRoutes?: pulumi.Input<string>;
    /**
     * Name of the gateway which is going to be created.
     */
    gwName?: pulumi.Input<string>;
    /**
     * Size of the gateway instance. Example: AWS/AWSGov/AWSChina: "t2.large", Azure/AzureGov/AzureChina: "Standard_B1s", OCI: "VM.Standard2.2", GCP: "n1-standard-1".
     */
    gwSize?: pulumi.Input<string>;
    /**
     * HA gateway availability domain. Required and valid only for OCI. Available as of provider version R2.19.3.
     */
    haAvailabilityDomain?: pulumi.Input<string>;
    /**
     * Name of public IP Address resource and its resource group in Azure to be assigned to the HA Spoke Gateway instance. Example: "IP_Name:Resource_Group_Name". Required if `haEip` is set and `cloudType` is Azure, AzureGov or AzureChina. Available as of provider version 2.20+.
     */
    haAzureEipNameResourceGroup?: pulumi.Input<string>;
    /**
     * Cloud instance ID of the HA spoke gateway.
     */
    haCloudInstanceId?: pulumi.Input<string>;
    /**
     * Public IP address that you want to assign to the HA peering instance. If no value is given, a new EIP will automatically be allocated. Only available for AWS, GCP, Azure, OCI, AzureGov, AWSGov, AWSChina, AzureChina, AWS Top Secret and AWS Secret.
     */
    haEip?: pulumi.Input<string>;
    /**
     * HA gateway fault domain. Required and valid only for OCI. Available as of provider version R2.19.3.
     */
    haFaultDomain?: pulumi.Input<string>;
    /**
     * Aviatrix spoke gateway unique name of HA spoke gateway.
     */
    haGwName?: pulumi.Input<string>;
    /**
     * HA Gateway Size. Mandatory if enabling HA.
     */
    haGwSize?: pulumi.Input<string>;
    /**
     * The image version of the HA gateway. Use `aviatrix.getAviatrixGatewayImage` data source to programmatically retrieve this value for the desired `haSoftwareVersion`. If set, we will attempt to update the HA gateway to the specified version if current version is different. If left blank, the gateway upgrades can be managed with the `aviatrix.AviatrixControllerConfig` resource. Type: String. Example: "hvm-cloudx-aws-022021". Available as of provider version R2.20.0.
     */
    haImageVersion?: pulumi.Input<string>;
    /**
     * AZ of subnet being created for Insane Mode Spoke HA Gateway. Required for AWS, AzureGov, AWSGov, AWS Top Secret and AWS Secret if `insaneMode` is enabled and `haSubnet` is set. Example: AWS: "us-west-1a".
     */
    haInsaneModeAz?: pulumi.Input<string>;
    /**
     * HA OOB availability zone. Required if enabling Private OOB and HA. Example: "us-west-1b".
     */
    haOobAvailabilityZone?: pulumi.Input<string>;
    /**
     * HA OOB management subnet. Required if enabling Private OOB and HA. Example: "11.0.0.48/28".
     */
    haOobManagementSubnet?: pulumi.Input<string>;
    /**
     * Private IP address of HA spoke gateway.
     */
    haPrivateIp?: pulumi.Input<string>;
    /**
     * Availability Zone of the HA subnet. Required when Private Mode is enabled on the Controller and `cloudType` is AWS or AWSGov with HA. Available in Provider version R2.23+.
     */
    haPrivateModeSubnetZone?: pulumi.Input<string>;
    /**
     * Public IP address of the HA Spoke Gateway.
     */
    haPublicIp?: pulumi.Input<string>;
    /**
     * HA security group used for the spoke gateway.
     */
    haSecurityGroupId?: pulumi.Input<string>;
    /**
     * The software version of the HA gateway. If set, we will attempt to update the HA gateway to the specified version if current version is different. If left blank, the HA gateway upgrade can be managed with the `aviatrix.AviatrixControllerConfig` resource. Type: String. Example: "6.5.821". Available as of provider version R2.20.0.
     */
    haSoftwareVersion?: pulumi.Input<string>;
    /**
     * HA Subnet. Required if enabling HA for AWS, AWSGov, AWSChina, Azure, AzureGov, AzureChina, OCI, Alibaba Cloud, AWS Top Secret or AWS Secret gateways. Optional for GCP. Setting to empty/unsetting will disable HA. Setting to a valid subnet CIDR will create an HA gateway on the subnet. Example: "10.12.0.0/24"
     */
    haSubnet?: pulumi.Input<string>;
    /**
     * HA Zone. Required if enabling HA for GCP gateway. Optional for Azure. For GCP, setting to empty/unsetting will disable HA and setting to a valid zone will create an HA gateway in the zone. Example: "us-west1-c". For Azure, this is an optional parameter to place the HA gateway in a specific availability zone. Valid values for Azure gateways are in the form "az-n". Example: "az-2". Available for Azure as of provider version R2.17+.
     */
    haZone?: pulumi.Input<string>;
    /**
     * The image version of the gateway. Use `aviatrix.getAviatrixGatewayImage` data source to programmatically retrieve this value for the desired `softwareVersion`. If set, we will attempt to update the gateway to the specified version if current version is different. If left blank, the gateway upgrades can be managed with the `aviatrix.AviatrixControllerConfig` resource. Type: String. Example: "hvm-cloudx-aws-022021". Available as of provider version R2.20.0.
     */
    imageVersion?: pulumi.Input<string>;
    /**
     * A list of comma separated CIDRs to be advertised to on-prem as 'Included CIDR List'. When configured, it will replace all advertised routes from this VPC. Example: "10.4.0.0/116,10.5.0.0/16".
     */
    includedAdvertisedSpokeRoutes?: pulumi.Input<string>;
    /**
     * Enable [Insane Mode](https://docs.aviatrix.com/HowTos/insane_mode.html) for Spoke Gateway. Insane Mode gateway size must be at least c5 size (AWS, AWSGov, AWS China, AWS Top Secret and AWS Secret) or Standard_D3_v2 (Azure and AzureGov); for GCP only four size are supported: "n1-highcpu-4", "n1-highcpu-8", "n1-highcpu-16" and "n1-highcpu-32". If enabled, you must specify a valid /26 CIDR segment of the VPC to create a new subnet for AWS, Azure, AzureGov, AWSGov, AWS Top Secret and AWS Secret. Only available for AWS, GCP/OCI, Azure, AzureGov, AzureChina, AWSGov, AWS Top Secret and AWS Secret. Valid values: true, false. Default value: false.
     */
    insaneMode?: pulumi.Input<boolean>;
    /**
     * AZ of subnet being created for Insane Mode Spoke Gateway. Required for AWS, AWSGov, AWS China, AWS Top Secret or AWS Secret if `insaneMode` is enabled. Example: AWS: "us-west-1a".
     */
    insaneModeAz?: pulumi.Input<string>;
    /**
     * Learned CIDRs approval mode. Either "gateway" (approval on a per-gateway basis) or "connection" (approval on a per-connection basis). Only "gateway" is supported for BGP SPOKE Gateway. Default value: "gateway". Available as of provider version R2.21+.
     */
    learnedCidrsApprovalMode?: pulumi.Input<string>;
    /**
     * Changes the Aviatrix Spoke Gateway ASN number before you setup Aviatrix Spoke Gateway connection configurations.
     */
    localAsNumber?: pulumi.Input<string>;
    /**
     * Enable to manage spoke-to-Aviatrix transit gateway attachments using the **aviatrix_spoke_gateway** resource with the below `transitGw` attribute. If this is set to false, attaching this spoke to transit gateways must be done using the **aviatrix_spoke_transit_attachment** resource. Valid values: true, false. Default value: true. Available in provider R2.17+.
     */
    manageTransitGatewayAttachment?: pulumi.Input<boolean>;
    /**
     * Set of monitored instance ids. Only valid when 'enable_monitor_gateway_subnets' = true. Available in provider version R2.18+.
     */
    monitorExcludeLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * OOB availability zone. Required if enabling Private OOB. Example: "us-west-1a".
     */
    oobAvailabilityZone?: pulumi.Input<string>;
    /**
     * OOB management subnet. Required if enabling Private OOB. Example: "11.0.2.0/24".
     */
    oobManagementSubnet?: pulumi.Input<string>;
    /**
     * List of AS numbers to populate BGP AS_PATH field when it advertises to VGW or peer devices.
     */
    prependAsPaths?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Private IP address of the spoke gateway created.
     */
    privateIp?: pulumi.Input<string>;
    /**
     * VPC ID of Private Mode load balancer. Required when Private Mode is enabled on the Controller. Available in provider version R2.23+.
     */
    privateModeLbVpcId?: pulumi.Input<string>;
    /**
     * Availability Zone of the subnet. Required when Private Mode is enabled on the Controller and `cloudType` is AWS or AWSGov. Available in Provider version R2.23+.
     */
    privateModeSubnetZone?: pulumi.Input<string>;
    /**
     * Public IP address of the Spoke Gateway created.
     */
    publicIp?: pulumi.Input<string>;
    /**
     * Gateway ethernet interface RX queue size. Once set, can't be deleted or disabled. Available for AWS as of provider version R2.22+.
     */
    rxQueueSize?: pulumi.Input<string>;
    /**
     * Security group used for the spoke gateway.
     */
    securityGroupId?: pulumi.Input<string>;
    /**
     * Set to true if this [feature](https://docs.aviatrix.com/Solutions/gateway_ha.html#single-az-gateway) is desired. Valid values: true, false.
     */
    singleAzHa?: pulumi.Input<boolean>;
    /**
     * Specify whether to enable Source NAT feature in "singleIp" mode on the gateway or not. Please disable AWS NAT instance before enabling this feature. Currently only supports AWS(1) and Azure(8). Valid values: true, false.
     */
    singleIpSnat?: pulumi.Input<boolean>;
    /**
     * The software version of the gateway. If set, we will attempt to update the gateway to the specified version if current version is different. If left blank, the gateway upgrade can be managed with the `aviatrix.AviatrixControllerConfig` resource. Type: String. Example: "6.5.821". Available as of provider version R2.20.0.
     */
    softwareVersion?: pulumi.Input<string>;
    /**
     * Intended CIDR list to be advertised to external BGP router. Empty list is not valid. Example: ["10.2.0.0/16", "10.4.0.0/16"].
     */
    spokeBgpManualAdvertiseCidrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Price for spot instance. NOT supported for production deployment.
     */
    spotPrice?: pulumi.Input<string>;
    /**
     * A VPC Network address range selected from one of the available network ranges. Example: "172.31.0.0/20". **NOTE: If using `insaneMode`, please see notes here.**
     */
    subnet?: pulumi.Input<string>;
    /**
     * (Optional) Instance tag of cloud provider. Only supported for AWS, Azure, AzureGov, AWSGov, AWSChina and AzureChina. Example: ["key1:value1", "key2:value2"].
     *
     * @deprecated Use tags instead.
     */
    tagLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Map of tags to assign to the gateway. Only available for AWS, Azure, AzureGov, AWSGov, AWSChina, AzureChina, AWS Top Secret and AWS Secret gateways. Allowed characters vary by cloud type but always include: letters, spaces, and numbers. AWS, AWSGov, AWSChina, AWS Top Secret and AWS Secret allow the use of any character. Azure, AzureGov and AzureChina allows the following special characters: + - = . _ : @. Example: {"key1" = "value1", "key2" = "value2"}.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specify the Aviatrix transit gateways to attach this spoke gateway to. Format is a comma separated list of transit gateway names. For example: "transit-gw1,transit-gw2".
     *
     * @deprecated Please set `manage_transit_gateway_attachment` to false, and use the standalone aviatrix_spoke_transit_attachment resource instead.
     */
    transitGw?: pulumi.Input<string>;
    /**
     * The IPSec tunnel down detection time for the Spoke Gateway.
     */
    tunnelDetectionTime?: pulumi.Input<number>;
    /**
     * VPC-ID/VNet-Name of cloud provider. Example: AWS/AWSGov/AWSChina: "vpc-abcd1234", GCP: "vpc-gcp-test~-~project-id", Azure/AzureGov/AzureChina: "vnet_name:rg_name:resource_guid", OCI: "ocid1.vcn.oc1.iad.aaaaaaaaba3pv6wkcr4jqae5f44n2b2m2yt2j6rx32uzr4h25vqstifsfdsq".
     */
    vpcId?: pulumi.Input<string>;
    /**
     * Region of cloud provider. Example: AWS: "us-east-1", GCP: "us-west2-a", Azure: "East US 2", OCI: "us-ashburn-1", AzureGov: "USGov Arizona", AWSGov: "us-gov-west-1, AWSChina: "cn-north-1", AzureChina: "China North", AWS Top Secret: "us-iso-east-1", AWS Secret: "us-isob-east-1".
     */
    vpcReg?: pulumi.Input<string>;
    /**
     * Availability Zone. Only available for cloudType = 8 (Azure). Must be in the form 'az-n', for example, 'az-2'. Available in provider version R2.17+.
     */
    zone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AviatrixSpokeGateway resource.
 */
export interface AviatrixSpokeGatewayArgs {
    /**
     * This parameter represents the name of a Cloud-Account in Aviatrix controller.
     */
    accountName: pulumi.Input<string>;
    /**
     * When value is false, reuse an idle address in Elastic IP pool for this gateway. Otherwise, allocate a new Elastic IP and use it for this gateway. Available in Controller 4.7+. Valid values: true, false. Default: true.
     */
    allocateNewEip?: pulumi.Input<boolean>;
    /**
     * A set of approved learned CIDRs. Only valid when `enableLearnedCidrsApproval` is set to true. Example: ["10.250.0.0/16", "10.251.0.0/16"]. Available as of provider version R2.21+.
     */
    approvedLearnedCidrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Availability domain. Required and valid only for OCI. Available as of provider version R2.19.3.
     */
    availabilityDomain?: pulumi.Input<string>;
    /**
     * Name of public IP Address resource and its resource group in Azure to be assigned to the Spoke Gateway instance. Example: "IP_Name:Resource_Group_Name". Required if `allocateNewEip` is false and `cloudType` is Azure, AzureGov or AzureChina. Available as of provider version 2.20+.
     */
    azureEipNameResourceGroup?: pulumi.Input<string>;
    /**
     * Enable Equal Cost Multi Path (ECMP) routing for the next hop. Default value: false.
     */
    bgpEcmp?: pulumi.Input<boolean>;
    /**
     * BGP hold time. Unit is in seconds. Valid values are between 12 and 360. Default value: 180.
     */
    bgpHoldTime?: pulumi.Input<number>;
    /**
     * BGP route polling time. Unit is in seconds. Valid values are between 10 and 50. Default value: "50".
     */
    bgpPollingTime?: pulumi.Input<number>;
    /**
     * Type of cloud service provider, requires an integer value. Currently, only AWS(1), GCP(4), Azure(8), OCI(16), AzureGov(32), AWSGov(256), AWSChina(1024), AzureChina(2048), Alibaba Cloud(8192), AWS Top Secret(16384) and AWS Secret (32768) are supported.
     */
    cloudType: pulumi.Input<number>;
    /**
     * Customer managed key ID.
     */
    customerManagedKeys?: pulumi.Input<string>;
    /**
     * A list of comma separated CIDRs to be customized for the spoke VPC routes. When configured, it will replace all learned routes in VPC routing tables, including RFC1918 and non-RFC1918 CIDRs. It applies to this spoke gateway only. Example: "10.0.0.0/116,10.2.0.0/16".
     */
    customizedSpokeVpcRoutes?: pulumi.Input<string>;
    /**
     * Disables route propagation on BGP Spoke to attached Transit Gateway. Default value: false.
     */
    disableRoutePropagation?: pulumi.Input<boolean>;
    /**
     * Required when `allocateNewEip` is false. It uses the specified EIP for this gateway. Available in Controller 4.7+. Only available for AWS, GCP, Azure, OCI, AzureGov, AWSGov, AWSChina, AzureChina, AWS Top Secret and AWS Secret.
     */
    eip?: pulumi.Input<string>;
    /**
     * Enables [Active-Standby Mode](https://docs.aviatrix.com/HowTos/transit_advanced.html#active-standby). Available only with HA enabled. Valid values: true, false. Default value: false.
     */
    enableActiveStandby?: pulumi.Input<boolean>;
    /**
     * Enables Preemptive Mode for Active-Standby. Available only with BGP enabled, HA enabled and Active-Standby enabled. Valid values: true, false. Default value: false.
     */
    enableActiveStandbyPreemptive?: pulumi.Input<boolean>;
    /**
     * Auto Advertise Spoke Site2Cloud CIDRs. Default: false. Valid values: true or false. Available as of provider version R2.19+.
     */
    enableAutoAdvertiseS2cCidrs?: pulumi.Input<boolean>;
    /**
     * Enable BGP for this spoke gateway. Only available for AWS and Azure. Valid values: true, false. Default value: false. Available in provider R2.21.0+.
     */
    enableBgp?: pulumi.Input<boolean>;
    /**
     * Enable EBS volume encryption for Gateway. Only supports AWS, AWSGov, AWSChina, AWS Top Secret and AWS Secret providers. Valid values: true, false. Default value: false.
     */
    enableEncryptVolume?: pulumi.Input<boolean>;
    /**
     * Enable jumbo frames for this spoke gateway. Default value is true.
     */
    enableJumboFrame?: pulumi.Input<boolean>;
    /**
     * Switch to enable/disable learned CIDR approval for BGP Spoke Gateway. Valid values: true, false. Default value: false.
     */
    enableLearnedCidrsApproval?: pulumi.Input<boolean>;
    /**
     * If set to true, the [Monitor Gateway Subnets](https://docs.aviatrix.com/HowTos/gateway.html#monitor-gateway-subnet) feature is enabled. Default value is false. Available in provider version R2.18+.
     */
    enableMonitorGatewaySubnets?: pulumi.Input<boolean>;
    /**
     * Enable preserve asPath when advertising manual summary cidrs on BGP spoke gateway. Valid values: true, false. Default value: false. Available as of provider version R.2.22.1+
     */
    enablePreserveAsPath?: pulumi.Input<boolean>;
    /**
     * Enable Private OOB feature. Only available for AWS, AWSGov, AWSChina, AWS Top Secret and AWS Secret. Valid values: true, false. Default value: false.
     */
    enablePrivateOob?: pulumi.Input<boolean>;
    /**
     * Program default route in VPC private route table. Default: false. Valid values: true or false. Available as of provider version R2.19+.
     */
    enablePrivateVpcDefaultRoute?: pulumi.Input<boolean>;
    /**
     * Skip programming VPC public route table. Default: false. Valid values: true or false. Available as of provider version R2.19+.
     */
    enableSkipPublicRouteTableUpdate?: pulumi.Input<boolean>;
    /**
     * Enable spot instance. NOT supported for production deployment.
     */
    enableSpotInstance?: pulumi.Input<boolean>;
    /**
     * Enable VPC DNS Server for Gateway. Currently only supported for AWS, Azure, AzureGov, AWSGov, AWSChina, AzureChina, Alibaba Cloud, AWS Top Secret and AWS Secret gateways. Valid values: true, false. Default value: false.
     */
    enableVpcDnsServer?: pulumi.Input<boolean>;
    /**
     * Fault domain. Required and valid only for OCI. Available as of provider version R2.19.3.
     */
    faultDomain?: pulumi.Input<string>;
    /**
     * A list of comma separated CIDRs to be filtered from the spoke VPC route table. When configured, filtering CIDR(s) or it’s subnet will be deleted from VPC routing tables as well as from spoke gateway’s routing table. It applies to this spoke gateway only. Example: "10.2.0.0/116,10.3.0.0/16".
     */
    filteredSpokeVpcRoutes?: pulumi.Input<string>;
    /**
     * Name of the gateway which is going to be created.
     */
    gwName: pulumi.Input<string>;
    /**
     * Size of the gateway instance. Example: AWS/AWSGov/AWSChina: "t2.large", Azure/AzureGov/AzureChina: "Standard_B1s", OCI: "VM.Standard2.2", GCP: "n1-standard-1".
     */
    gwSize: pulumi.Input<string>;
    /**
     * HA gateway availability domain. Required and valid only for OCI. Available as of provider version R2.19.3.
     */
    haAvailabilityDomain?: pulumi.Input<string>;
    /**
     * Name of public IP Address resource and its resource group in Azure to be assigned to the HA Spoke Gateway instance. Example: "IP_Name:Resource_Group_Name". Required if `haEip` is set and `cloudType` is Azure, AzureGov or AzureChina. Available as of provider version 2.20+.
     */
    haAzureEipNameResourceGroup?: pulumi.Input<string>;
    /**
     * Public IP address that you want to assign to the HA peering instance. If no value is given, a new EIP will automatically be allocated. Only available for AWS, GCP, Azure, OCI, AzureGov, AWSGov, AWSChina, AzureChina, AWS Top Secret and AWS Secret.
     */
    haEip?: pulumi.Input<string>;
    /**
     * HA gateway fault domain. Required and valid only for OCI. Available as of provider version R2.19.3.
     */
    haFaultDomain?: pulumi.Input<string>;
    /**
     * HA Gateway Size. Mandatory if enabling HA.
     */
    haGwSize?: pulumi.Input<string>;
    /**
     * The image version of the HA gateway. Use `aviatrix.getAviatrixGatewayImage` data source to programmatically retrieve this value for the desired `haSoftwareVersion`. If set, we will attempt to update the HA gateway to the specified version if current version is different. If left blank, the gateway upgrades can be managed with the `aviatrix.AviatrixControllerConfig` resource. Type: String. Example: "hvm-cloudx-aws-022021". Available as of provider version R2.20.0.
     */
    haImageVersion?: pulumi.Input<string>;
    /**
     * AZ of subnet being created for Insane Mode Spoke HA Gateway. Required for AWS, AzureGov, AWSGov, AWS Top Secret and AWS Secret if `insaneMode` is enabled and `haSubnet` is set. Example: AWS: "us-west-1a".
     */
    haInsaneModeAz?: pulumi.Input<string>;
    /**
     * HA OOB availability zone. Required if enabling Private OOB and HA. Example: "us-west-1b".
     */
    haOobAvailabilityZone?: pulumi.Input<string>;
    /**
     * HA OOB management subnet. Required if enabling Private OOB and HA. Example: "11.0.0.48/28".
     */
    haOobManagementSubnet?: pulumi.Input<string>;
    /**
     * Availability Zone of the HA subnet. Required when Private Mode is enabled on the Controller and `cloudType` is AWS or AWSGov with HA. Available in Provider version R2.23+.
     */
    haPrivateModeSubnetZone?: pulumi.Input<string>;
    /**
     * The software version of the HA gateway. If set, we will attempt to update the HA gateway to the specified version if current version is different. If left blank, the HA gateway upgrade can be managed with the `aviatrix.AviatrixControllerConfig` resource. Type: String. Example: "6.5.821". Available as of provider version R2.20.0.
     */
    haSoftwareVersion?: pulumi.Input<string>;
    /**
     * HA Subnet. Required if enabling HA for AWS, AWSGov, AWSChina, Azure, AzureGov, AzureChina, OCI, Alibaba Cloud, AWS Top Secret or AWS Secret gateways. Optional for GCP. Setting to empty/unsetting will disable HA. Setting to a valid subnet CIDR will create an HA gateway on the subnet. Example: "10.12.0.0/24"
     */
    haSubnet?: pulumi.Input<string>;
    /**
     * HA Zone. Required if enabling HA for GCP gateway. Optional for Azure. For GCP, setting to empty/unsetting will disable HA and setting to a valid zone will create an HA gateway in the zone. Example: "us-west1-c". For Azure, this is an optional parameter to place the HA gateway in a specific availability zone. Valid values for Azure gateways are in the form "az-n". Example: "az-2". Available for Azure as of provider version R2.17+.
     */
    haZone?: pulumi.Input<string>;
    /**
     * The image version of the gateway. Use `aviatrix.getAviatrixGatewayImage` data source to programmatically retrieve this value for the desired `softwareVersion`. If set, we will attempt to update the gateway to the specified version if current version is different. If left blank, the gateway upgrades can be managed with the `aviatrix.AviatrixControllerConfig` resource. Type: String. Example: "hvm-cloudx-aws-022021". Available as of provider version R2.20.0.
     */
    imageVersion?: pulumi.Input<string>;
    /**
     * A list of comma separated CIDRs to be advertised to on-prem as 'Included CIDR List'. When configured, it will replace all advertised routes from this VPC. Example: "10.4.0.0/116,10.5.0.0/16".
     */
    includedAdvertisedSpokeRoutes?: pulumi.Input<string>;
    /**
     * Enable [Insane Mode](https://docs.aviatrix.com/HowTos/insane_mode.html) for Spoke Gateway. Insane Mode gateway size must be at least c5 size (AWS, AWSGov, AWS China, AWS Top Secret and AWS Secret) or Standard_D3_v2 (Azure and AzureGov); for GCP only four size are supported: "n1-highcpu-4", "n1-highcpu-8", "n1-highcpu-16" and "n1-highcpu-32". If enabled, you must specify a valid /26 CIDR segment of the VPC to create a new subnet for AWS, Azure, AzureGov, AWSGov, AWS Top Secret and AWS Secret. Only available for AWS, GCP/OCI, Azure, AzureGov, AzureChina, AWSGov, AWS Top Secret and AWS Secret. Valid values: true, false. Default value: false.
     */
    insaneMode?: pulumi.Input<boolean>;
    /**
     * AZ of subnet being created for Insane Mode Spoke Gateway. Required for AWS, AWSGov, AWS China, AWS Top Secret or AWS Secret if `insaneMode` is enabled. Example: AWS: "us-west-1a".
     */
    insaneModeAz?: pulumi.Input<string>;
    /**
     * Learned CIDRs approval mode. Either "gateway" (approval on a per-gateway basis) or "connection" (approval on a per-connection basis). Only "gateway" is supported for BGP SPOKE Gateway. Default value: "gateway". Available as of provider version R2.21+.
     */
    learnedCidrsApprovalMode?: pulumi.Input<string>;
    /**
     * Changes the Aviatrix Spoke Gateway ASN number before you setup Aviatrix Spoke Gateway connection configurations.
     */
    localAsNumber?: pulumi.Input<string>;
    /**
     * Enable to manage spoke-to-Aviatrix transit gateway attachments using the **aviatrix_spoke_gateway** resource with the below `transitGw` attribute. If this is set to false, attaching this spoke to transit gateways must be done using the **aviatrix_spoke_transit_attachment** resource. Valid values: true, false. Default value: true. Available in provider R2.17+.
     */
    manageTransitGatewayAttachment?: pulumi.Input<boolean>;
    /**
     * Set of monitored instance ids. Only valid when 'enable_monitor_gateway_subnets' = true. Available in provider version R2.18+.
     */
    monitorExcludeLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * OOB availability zone. Required if enabling Private OOB. Example: "us-west-1a".
     */
    oobAvailabilityZone?: pulumi.Input<string>;
    /**
     * OOB management subnet. Required if enabling Private OOB. Example: "11.0.2.0/24".
     */
    oobManagementSubnet?: pulumi.Input<string>;
    /**
     * List of AS numbers to populate BGP AS_PATH field when it advertises to VGW or peer devices.
     */
    prependAsPaths?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * VPC ID of Private Mode load balancer. Required when Private Mode is enabled on the Controller. Available in provider version R2.23+.
     */
    privateModeLbVpcId?: pulumi.Input<string>;
    /**
     * Availability Zone of the subnet. Required when Private Mode is enabled on the Controller and `cloudType` is AWS or AWSGov. Available in Provider version R2.23+.
     */
    privateModeSubnetZone?: pulumi.Input<string>;
    /**
     * Gateway ethernet interface RX queue size. Once set, can't be deleted or disabled. Available for AWS as of provider version R2.22+.
     */
    rxQueueSize?: pulumi.Input<string>;
    /**
     * Set to true if this [feature](https://docs.aviatrix.com/Solutions/gateway_ha.html#single-az-gateway) is desired. Valid values: true, false.
     */
    singleAzHa?: pulumi.Input<boolean>;
    /**
     * Specify whether to enable Source NAT feature in "singleIp" mode on the gateway or not. Please disable AWS NAT instance before enabling this feature. Currently only supports AWS(1) and Azure(8). Valid values: true, false.
     */
    singleIpSnat?: pulumi.Input<boolean>;
    /**
     * The software version of the gateway. If set, we will attempt to update the gateway to the specified version if current version is different. If left blank, the gateway upgrade can be managed with the `aviatrix.AviatrixControllerConfig` resource. Type: String. Example: "6.5.821". Available as of provider version R2.20.0.
     */
    softwareVersion?: pulumi.Input<string>;
    /**
     * Intended CIDR list to be advertised to external BGP router. Empty list is not valid. Example: ["10.2.0.0/16", "10.4.0.0/16"].
     */
    spokeBgpManualAdvertiseCidrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Price for spot instance. NOT supported for production deployment.
     */
    spotPrice?: pulumi.Input<string>;
    /**
     * A VPC Network address range selected from one of the available network ranges. Example: "172.31.0.0/20". **NOTE: If using `insaneMode`, please see notes here.**
     */
    subnet: pulumi.Input<string>;
    /**
     * (Optional) Instance tag of cloud provider. Only supported for AWS, Azure, AzureGov, AWSGov, AWSChina and AzureChina. Example: ["key1:value1", "key2:value2"].
     *
     * @deprecated Use tags instead.
     */
    tagLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Map of tags to assign to the gateway. Only available for AWS, Azure, AzureGov, AWSGov, AWSChina, AzureChina, AWS Top Secret and AWS Secret gateways. Allowed characters vary by cloud type but always include: letters, spaces, and numbers. AWS, AWSGov, AWSChina, AWS Top Secret and AWS Secret allow the use of any character. Azure, AzureGov and AzureChina allows the following special characters: + - = . _ : @. Example: {"key1" = "value1", "key2" = "value2"}.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specify the Aviatrix transit gateways to attach this spoke gateway to. Format is a comma separated list of transit gateway names. For example: "transit-gw1,transit-gw2".
     *
     * @deprecated Please set `manage_transit_gateway_attachment` to false, and use the standalone aviatrix_spoke_transit_attachment resource instead.
     */
    transitGw?: pulumi.Input<string>;
    /**
     * The IPSec tunnel down detection time for the Spoke Gateway.
     */
    tunnelDetectionTime?: pulumi.Input<number>;
    /**
     * VPC-ID/VNet-Name of cloud provider. Example: AWS/AWSGov/AWSChina: "vpc-abcd1234", GCP: "vpc-gcp-test~-~project-id", Azure/AzureGov/AzureChina: "vnet_name:rg_name:resource_guid", OCI: "ocid1.vcn.oc1.iad.aaaaaaaaba3pv6wkcr4jqae5f44n2b2m2yt2j6rx32uzr4h25vqstifsfdsq".
     */
    vpcId: pulumi.Input<string>;
    /**
     * Region of cloud provider. Example: AWS: "us-east-1", GCP: "us-west2-a", Azure: "East US 2", OCI: "us-ashburn-1", AzureGov: "USGov Arizona", AWSGov: "us-gov-west-1, AWSChina: "cn-north-1", AzureChina: "China North", AWS Top Secret: "us-iso-east-1", AWS Secret: "us-isob-east-1".
     */
    vpcReg: pulumi.Input<string>;
    /**
     * Availability Zone. Only available for cloudType = 8 (Azure). Must be in the form 'az-n', for example, 'az-2'. Available in provider version R2.17+.
     */
    zone?: pulumi.Input<string>;
}
