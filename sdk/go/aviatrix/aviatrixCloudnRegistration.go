// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aviatrix

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AviatrixCloudnRegistration struct {
	pulumi.CustomResourceState

	// CloudN IP Address or FQDN.
	Address pulumi.StringOutput `pulumi:"address"`
	// Changes the Aviatrix CloudN ASN number before you setup Aviatrix Transit Gateway connection configurations.
	LocalAsNumber pulumi.StringOutput `pulumi:"localAsNumber"`
	// CloudN name to register on controller.
	Name pulumi.StringOutput `pulumi:"name"`
	// CloudN password.
	Password pulumi.StringOutput `pulumi:"password"`
	// AS path prepend.
	PrependAsPaths pulumi.StringArrayOutput `pulumi:"prependAsPaths"`
	// CloudN username.
	Username pulumi.StringOutput `pulumi:"username"`
}

// NewAviatrixCloudnRegistration registers a new resource with the given unique name, arguments, and options.
func NewAviatrixCloudnRegistration(ctx *pulumi.Context,
	name string, args *AviatrixCloudnRegistrationArgs, opts ...pulumi.ResourceOption) (*AviatrixCloudnRegistration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Address == nil {
		return nil, errors.New("invalid value for required argument 'Address'")
	}
	if args.Password == nil {
		return nil, errors.New("invalid value for required argument 'Password'")
	}
	if args.Username == nil {
		return nil, errors.New("invalid value for required argument 'Username'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource AviatrixCloudnRegistration
	err := ctx.RegisterResource("aviatrix:index/aviatrixCloudnRegistration:AviatrixCloudnRegistration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAviatrixCloudnRegistration gets an existing AviatrixCloudnRegistration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAviatrixCloudnRegistration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AviatrixCloudnRegistrationState, opts ...pulumi.ResourceOption) (*AviatrixCloudnRegistration, error) {
	var resource AviatrixCloudnRegistration
	err := ctx.ReadResource("aviatrix:index/aviatrixCloudnRegistration:AviatrixCloudnRegistration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AviatrixCloudnRegistration resources.
type aviatrixCloudnRegistrationState struct {
	// CloudN IP Address or FQDN.
	Address *string `pulumi:"address"`
	// Changes the Aviatrix CloudN ASN number before you setup Aviatrix Transit Gateway connection configurations.
	LocalAsNumber *string `pulumi:"localAsNumber"`
	// CloudN name to register on controller.
	Name *string `pulumi:"name"`
	// CloudN password.
	Password *string `pulumi:"password"`
	// AS path prepend.
	PrependAsPaths []string `pulumi:"prependAsPaths"`
	// CloudN username.
	Username *string `pulumi:"username"`
}

type AviatrixCloudnRegistrationState struct {
	// CloudN IP Address or FQDN.
	Address pulumi.StringPtrInput
	// Changes the Aviatrix CloudN ASN number before you setup Aviatrix Transit Gateway connection configurations.
	LocalAsNumber pulumi.StringPtrInput
	// CloudN name to register on controller.
	Name pulumi.StringPtrInput
	// CloudN password.
	Password pulumi.StringPtrInput
	// AS path prepend.
	PrependAsPaths pulumi.StringArrayInput
	// CloudN username.
	Username pulumi.StringPtrInput
}

func (AviatrixCloudnRegistrationState) ElementType() reflect.Type {
	return reflect.TypeOf((*aviatrixCloudnRegistrationState)(nil)).Elem()
}

type aviatrixCloudnRegistrationArgs struct {
	// CloudN IP Address or FQDN.
	Address string `pulumi:"address"`
	// Changes the Aviatrix CloudN ASN number before you setup Aviatrix Transit Gateway connection configurations.
	LocalAsNumber *string `pulumi:"localAsNumber"`
	// CloudN name to register on controller.
	Name *string `pulumi:"name"`
	// CloudN password.
	Password string `pulumi:"password"`
	// AS path prepend.
	PrependAsPaths []string `pulumi:"prependAsPaths"`
	// CloudN username.
	Username string `pulumi:"username"`
}

// The set of arguments for constructing a AviatrixCloudnRegistration resource.
type AviatrixCloudnRegistrationArgs struct {
	// CloudN IP Address or FQDN.
	Address pulumi.StringInput
	// Changes the Aviatrix CloudN ASN number before you setup Aviatrix Transit Gateway connection configurations.
	LocalAsNumber pulumi.StringPtrInput
	// CloudN name to register on controller.
	Name pulumi.StringPtrInput
	// CloudN password.
	Password pulumi.StringInput
	// AS path prepend.
	PrependAsPaths pulumi.StringArrayInput
	// CloudN username.
	Username pulumi.StringInput
}

func (AviatrixCloudnRegistrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*aviatrixCloudnRegistrationArgs)(nil)).Elem()
}

type AviatrixCloudnRegistrationInput interface {
	pulumi.Input

	ToAviatrixCloudnRegistrationOutput() AviatrixCloudnRegistrationOutput
	ToAviatrixCloudnRegistrationOutputWithContext(ctx context.Context) AviatrixCloudnRegistrationOutput
}

func (*AviatrixCloudnRegistration) ElementType() reflect.Type {
	return reflect.TypeOf((**AviatrixCloudnRegistration)(nil)).Elem()
}

func (i *AviatrixCloudnRegistration) ToAviatrixCloudnRegistrationOutput() AviatrixCloudnRegistrationOutput {
	return i.ToAviatrixCloudnRegistrationOutputWithContext(context.Background())
}

func (i *AviatrixCloudnRegistration) ToAviatrixCloudnRegistrationOutputWithContext(ctx context.Context) AviatrixCloudnRegistrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixCloudnRegistrationOutput)
}

// AviatrixCloudnRegistrationArrayInput is an input type that accepts AviatrixCloudnRegistrationArray and AviatrixCloudnRegistrationArrayOutput values.
// You can construct a concrete instance of `AviatrixCloudnRegistrationArrayInput` via:
//
//	AviatrixCloudnRegistrationArray{ AviatrixCloudnRegistrationArgs{...} }
type AviatrixCloudnRegistrationArrayInput interface {
	pulumi.Input

	ToAviatrixCloudnRegistrationArrayOutput() AviatrixCloudnRegistrationArrayOutput
	ToAviatrixCloudnRegistrationArrayOutputWithContext(context.Context) AviatrixCloudnRegistrationArrayOutput
}

type AviatrixCloudnRegistrationArray []AviatrixCloudnRegistrationInput

func (AviatrixCloudnRegistrationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AviatrixCloudnRegistration)(nil)).Elem()
}

func (i AviatrixCloudnRegistrationArray) ToAviatrixCloudnRegistrationArrayOutput() AviatrixCloudnRegistrationArrayOutput {
	return i.ToAviatrixCloudnRegistrationArrayOutputWithContext(context.Background())
}

func (i AviatrixCloudnRegistrationArray) ToAviatrixCloudnRegistrationArrayOutputWithContext(ctx context.Context) AviatrixCloudnRegistrationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixCloudnRegistrationArrayOutput)
}

// AviatrixCloudnRegistrationMapInput is an input type that accepts AviatrixCloudnRegistrationMap and AviatrixCloudnRegistrationMapOutput values.
// You can construct a concrete instance of `AviatrixCloudnRegistrationMapInput` via:
//
//	AviatrixCloudnRegistrationMap{ "key": AviatrixCloudnRegistrationArgs{...} }
type AviatrixCloudnRegistrationMapInput interface {
	pulumi.Input

	ToAviatrixCloudnRegistrationMapOutput() AviatrixCloudnRegistrationMapOutput
	ToAviatrixCloudnRegistrationMapOutputWithContext(context.Context) AviatrixCloudnRegistrationMapOutput
}

type AviatrixCloudnRegistrationMap map[string]AviatrixCloudnRegistrationInput

func (AviatrixCloudnRegistrationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AviatrixCloudnRegistration)(nil)).Elem()
}

func (i AviatrixCloudnRegistrationMap) ToAviatrixCloudnRegistrationMapOutput() AviatrixCloudnRegistrationMapOutput {
	return i.ToAviatrixCloudnRegistrationMapOutputWithContext(context.Background())
}

func (i AviatrixCloudnRegistrationMap) ToAviatrixCloudnRegistrationMapOutputWithContext(ctx context.Context) AviatrixCloudnRegistrationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixCloudnRegistrationMapOutput)
}

type AviatrixCloudnRegistrationOutput struct{ *pulumi.OutputState }

func (AviatrixCloudnRegistrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AviatrixCloudnRegistration)(nil)).Elem()
}

func (o AviatrixCloudnRegistrationOutput) ToAviatrixCloudnRegistrationOutput() AviatrixCloudnRegistrationOutput {
	return o
}

func (o AviatrixCloudnRegistrationOutput) ToAviatrixCloudnRegistrationOutputWithContext(ctx context.Context) AviatrixCloudnRegistrationOutput {
	return o
}

// CloudN IP Address or FQDN.
func (o AviatrixCloudnRegistrationOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixCloudnRegistration) pulumi.StringOutput { return v.Address }).(pulumi.StringOutput)
}

// Changes the Aviatrix CloudN ASN number before you setup Aviatrix Transit Gateway connection configurations.
func (o AviatrixCloudnRegistrationOutput) LocalAsNumber() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixCloudnRegistration) pulumi.StringOutput { return v.LocalAsNumber }).(pulumi.StringOutput)
}

// CloudN name to register on controller.
func (o AviatrixCloudnRegistrationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixCloudnRegistration) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// CloudN password.
func (o AviatrixCloudnRegistrationOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixCloudnRegistration) pulumi.StringOutput { return v.Password }).(pulumi.StringOutput)
}

// AS path prepend.
func (o AviatrixCloudnRegistrationOutput) PrependAsPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AviatrixCloudnRegistration) pulumi.StringArrayOutput { return v.PrependAsPaths }).(pulumi.StringArrayOutput)
}

// CloudN username.
func (o AviatrixCloudnRegistrationOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixCloudnRegistration) pulumi.StringOutput { return v.Username }).(pulumi.StringOutput)
}

type AviatrixCloudnRegistrationArrayOutput struct{ *pulumi.OutputState }

func (AviatrixCloudnRegistrationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AviatrixCloudnRegistration)(nil)).Elem()
}

func (o AviatrixCloudnRegistrationArrayOutput) ToAviatrixCloudnRegistrationArrayOutput() AviatrixCloudnRegistrationArrayOutput {
	return o
}

func (o AviatrixCloudnRegistrationArrayOutput) ToAviatrixCloudnRegistrationArrayOutputWithContext(ctx context.Context) AviatrixCloudnRegistrationArrayOutput {
	return o
}

func (o AviatrixCloudnRegistrationArrayOutput) Index(i pulumi.IntInput) AviatrixCloudnRegistrationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AviatrixCloudnRegistration {
		return vs[0].([]*AviatrixCloudnRegistration)[vs[1].(int)]
	}).(AviatrixCloudnRegistrationOutput)
}

type AviatrixCloudnRegistrationMapOutput struct{ *pulumi.OutputState }

func (AviatrixCloudnRegistrationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AviatrixCloudnRegistration)(nil)).Elem()
}

func (o AviatrixCloudnRegistrationMapOutput) ToAviatrixCloudnRegistrationMapOutput() AviatrixCloudnRegistrationMapOutput {
	return o
}

func (o AviatrixCloudnRegistrationMapOutput) ToAviatrixCloudnRegistrationMapOutputWithContext(ctx context.Context) AviatrixCloudnRegistrationMapOutput {
	return o
}

func (o AviatrixCloudnRegistrationMapOutput) MapIndex(k pulumi.StringInput) AviatrixCloudnRegistrationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AviatrixCloudnRegistration {
		return vs[0].(map[string]*AviatrixCloudnRegistration)[vs[1].(string)]
	}).(AviatrixCloudnRegistrationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixCloudnRegistrationInput)(nil)).Elem(), &AviatrixCloudnRegistration{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixCloudnRegistrationArrayInput)(nil)).Elem(), AviatrixCloudnRegistrationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixCloudnRegistrationMapInput)(nil)).Elem(), AviatrixCloudnRegistrationMap{})
	pulumi.RegisterOutputType(AviatrixCloudnRegistrationOutput{})
	pulumi.RegisterOutputType(AviatrixCloudnRegistrationArrayOutput{})
	pulumi.RegisterOutputType(AviatrixCloudnRegistrationMapOutput{})
}
