// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class AviatrixAwsTgwSecurityDomainConn extends pulumi.CustomResource {
    /**
     * Get an existing AviatrixAwsTgwSecurityDomainConn resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AviatrixAwsTgwSecurityDomainConnState, opts?: pulumi.CustomResourceOptions): AviatrixAwsTgwSecurityDomainConn {
        return new AviatrixAwsTgwSecurityDomainConn(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aviatrix:index/aviatrixAwsTgwSecurityDomainConn:AviatrixAwsTgwSecurityDomainConn';

    /**
     * Returns true if the given object is an instance of AviatrixAwsTgwSecurityDomainConn.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AviatrixAwsTgwSecurityDomainConn {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AviatrixAwsTgwSecurityDomainConn.__pulumiType;
    }

    /**
     * Security domain name 1.
     */
    public readonly domainName1!: pulumi.Output<string>;
    /**
     * Security domain name 2.
     */
    public readonly domainName2!: pulumi.Output<string>;
    /**
     * AWS TGW name.
     */
    public readonly tgwName!: pulumi.Output<string>;

    /**
     * Create a AviatrixAwsTgwSecurityDomainConn resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AviatrixAwsTgwSecurityDomainConnArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AviatrixAwsTgwSecurityDomainConnArgs | AviatrixAwsTgwSecurityDomainConnState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AviatrixAwsTgwSecurityDomainConnState | undefined;
            resourceInputs["domainName1"] = state ? state.domainName1 : undefined;
            resourceInputs["domainName2"] = state ? state.domainName2 : undefined;
            resourceInputs["tgwName"] = state ? state.tgwName : undefined;
        } else {
            const args = argsOrState as AviatrixAwsTgwSecurityDomainConnArgs | undefined;
            if ((!args || args.domainName1 === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domainName1'");
            }
            if ((!args || args.domainName2 === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domainName2'");
            }
            if ((!args || args.tgwName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tgwName'");
            }
            resourceInputs["domainName1"] = args ? args.domainName1 : undefined;
            resourceInputs["domainName2"] = args ? args.domainName2 : undefined;
            resourceInputs["tgwName"] = args ? args.tgwName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AviatrixAwsTgwSecurityDomainConn.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AviatrixAwsTgwSecurityDomainConn resources.
 */
export interface AviatrixAwsTgwSecurityDomainConnState {
    /**
     * Security domain name 1.
     */
    domainName1?: pulumi.Input<string>;
    /**
     * Security domain name 2.
     */
    domainName2?: pulumi.Input<string>;
    /**
     * AWS TGW name.
     */
    tgwName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AviatrixAwsTgwSecurityDomainConn resource.
 */
export interface AviatrixAwsTgwSecurityDomainConnArgs {
    /**
     * Security domain name 1.
     */
    domainName1: pulumi.Input<string>;
    /**
     * Security domain name 2.
     */
    domainName2: pulumi.Input<string>;
    /**
     * AWS TGW name.
     */
    tgwName: pulumi.Input<string>;
}
