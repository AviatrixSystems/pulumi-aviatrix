// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class AviatrixControllerCertDomainConfig extends pulumi.CustomResource {
    /**
     * Get an existing AviatrixControllerCertDomainConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AviatrixControllerCertDomainConfigState, opts?: pulumi.CustomResourceOptions): AviatrixControllerCertDomainConfig {
        return new AviatrixControllerCertDomainConfig(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aviatrix:index/aviatrixControllerCertDomainConfig:AviatrixControllerCertDomainConfig';

    /**
     * Returns true if the given object is an instance of AviatrixControllerCertDomainConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AviatrixControllerCertDomainConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AviatrixControllerCertDomainConfig.__pulumiType;
    }

    /**
     * Domain name that is used in FQDN for generating cert.
     */
    public readonly certDomain!: pulumi.Output<string | undefined>;

    /**
     * Create a AviatrixControllerCertDomainConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AviatrixControllerCertDomainConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AviatrixControllerCertDomainConfigArgs | AviatrixControllerCertDomainConfigState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AviatrixControllerCertDomainConfigState | undefined;
            resourceInputs["certDomain"] = state ? state.certDomain : undefined;
        } else {
            const args = argsOrState as AviatrixControllerCertDomainConfigArgs | undefined;
            resourceInputs["certDomain"] = args ? args.certDomain : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AviatrixControllerCertDomainConfig.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AviatrixControllerCertDomainConfig resources.
 */
export interface AviatrixControllerCertDomainConfigState {
    /**
     * Domain name that is used in FQDN for generating cert.
     */
    certDomain?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AviatrixControllerCertDomainConfig resource.
 */
export interface AviatrixControllerCertDomainConfigArgs {
    /**
     * Domain name that is used in FQDN for generating cert.
     */
    certDomain?: pulumi.Input<string>;
}
