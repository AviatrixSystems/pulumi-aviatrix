// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aviatrix

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AviatrixControllerEmailConfig struct {
	pulumi.CustomResourceState

	// Email to receive important account and certification information.
	AdminAlertEmail pulumi.StringOutput `pulumi:"adminAlertEmail"`
	// Whether admin alert notification email is verified.
	AdminAlertEmailVerified pulumi.BoolOutput `pulumi:"adminAlertEmailVerified"`
	// Email to receive field notices and critical notices.
	CriticalAlertEmail pulumi.StringOutput `pulumi:"criticalAlertEmail"`
	// Whether critical alert notification email is verified.
	CriticalAlertEmailVerified pulumi.BoolOutput `pulumi:"criticalAlertEmailVerified"`
	// Email to receive security and CVE (Common Vulnerabilities and Exposures) notification emails.
	SecurityEventEmail pulumi.StringOutput `pulumi:"securityEventEmail"`
	// Whether security event notification email is verified.
	SecurityEventEmailVerified pulumi.BoolOutput `pulumi:"securityEventEmailVerified"`
	// Email to receive system/tunnel status notification emails.
	StatusChangeEmail pulumi.StringOutput `pulumi:"statusChangeEmail"`
	// Whether status change notification email is verified.
	StatusChangeEmailVerified pulumi.BoolOutput `pulumi:"statusChangeEmailVerified"`
	// Status change notification interval in seconds.
	StatusChangeNotificationInterval pulumi.IntPtrOutput `pulumi:"statusChangeNotificationInterval"`
}

// NewAviatrixControllerEmailConfig registers a new resource with the given unique name, arguments, and options.
func NewAviatrixControllerEmailConfig(ctx *pulumi.Context,
	name string, args *AviatrixControllerEmailConfigArgs, opts ...pulumi.ResourceOption) (*AviatrixControllerEmailConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AdminAlertEmail == nil {
		return nil, errors.New("invalid value for required argument 'AdminAlertEmail'")
	}
	if args.CriticalAlertEmail == nil {
		return nil, errors.New("invalid value for required argument 'CriticalAlertEmail'")
	}
	if args.SecurityEventEmail == nil {
		return nil, errors.New("invalid value for required argument 'SecurityEventEmail'")
	}
	if args.StatusChangeEmail == nil {
		return nil, errors.New("invalid value for required argument 'StatusChangeEmail'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource AviatrixControllerEmailConfig
	err := ctx.RegisterResource("aviatrix:index/aviatrixControllerEmailConfig:AviatrixControllerEmailConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAviatrixControllerEmailConfig gets an existing AviatrixControllerEmailConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAviatrixControllerEmailConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AviatrixControllerEmailConfigState, opts ...pulumi.ResourceOption) (*AviatrixControllerEmailConfig, error) {
	var resource AviatrixControllerEmailConfig
	err := ctx.ReadResource("aviatrix:index/aviatrixControllerEmailConfig:AviatrixControllerEmailConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AviatrixControllerEmailConfig resources.
type aviatrixControllerEmailConfigState struct {
	// Email to receive important account and certification information.
	AdminAlertEmail *string `pulumi:"adminAlertEmail"`
	// Whether admin alert notification email is verified.
	AdminAlertEmailVerified *bool `pulumi:"adminAlertEmailVerified"`
	// Email to receive field notices and critical notices.
	CriticalAlertEmail *string `pulumi:"criticalAlertEmail"`
	// Whether critical alert notification email is verified.
	CriticalAlertEmailVerified *bool `pulumi:"criticalAlertEmailVerified"`
	// Email to receive security and CVE (Common Vulnerabilities and Exposures) notification emails.
	SecurityEventEmail *string `pulumi:"securityEventEmail"`
	// Whether security event notification email is verified.
	SecurityEventEmailVerified *bool `pulumi:"securityEventEmailVerified"`
	// Email to receive system/tunnel status notification emails.
	StatusChangeEmail *string `pulumi:"statusChangeEmail"`
	// Whether status change notification email is verified.
	StatusChangeEmailVerified *bool `pulumi:"statusChangeEmailVerified"`
	// Status change notification interval in seconds.
	StatusChangeNotificationInterval *int `pulumi:"statusChangeNotificationInterval"`
}

type AviatrixControllerEmailConfigState struct {
	// Email to receive important account and certification information.
	AdminAlertEmail pulumi.StringPtrInput
	// Whether admin alert notification email is verified.
	AdminAlertEmailVerified pulumi.BoolPtrInput
	// Email to receive field notices and critical notices.
	CriticalAlertEmail pulumi.StringPtrInput
	// Whether critical alert notification email is verified.
	CriticalAlertEmailVerified pulumi.BoolPtrInput
	// Email to receive security and CVE (Common Vulnerabilities and Exposures) notification emails.
	SecurityEventEmail pulumi.StringPtrInput
	// Whether security event notification email is verified.
	SecurityEventEmailVerified pulumi.BoolPtrInput
	// Email to receive system/tunnel status notification emails.
	StatusChangeEmail pulumi.StringPtrInput
	// Whether status change notification email is verified.
	StatusChangeEmailVerified pulumi.BoolPtrInput
	// Status change notification interval in seconds.
	StatusChangeNotificationInterval pulumi.IntPtrInput
}

func (AviatrixControllerEmailConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*aviatrixControllerEmailConfigState)(nil)).Elem()
}

type aviatrixControllerEmailConfigArgs struct {
	// Email to receive important account and certification information.
	AdminAlertEmail string `pulumi:"adminAlertEmail"`
	// Email to receive field notices and critical notices.
	CriticalAlertEmail string `pulumi:"criticalAlertEmail"`
	// Email to receive security and CVE (Common Vulnerabilities and Exposures) notification emails.
	SecurityEventEmail string `pulumi:"securityEventEmail"`
	// Email to receive system/tunnel status notification emails.
	StatusChangeEmail string `pulumi:"statusChangeEmail"`
	// Status change notification interval in seconds.
	StatusChangeNotificationInterval *int `pulumi:"statusChangeNotificationInterval"`
}

// The set of arguments for constructing a AviatrixControllerEmailConfig resource.
type AviatrixControllerEmailConfigArgs struct {
	// Email to receive important account and certification information.
	AdminAlertEmail pulumi.StringInput
	// Email to receive field notices and critical notices.
	CriticalAlertEmail pulumi.StringInput
	// Email to receive security and CVE (Common Vulnerabilities and Exposures) notification emails.
	SecurityEventEmail pulumi.StringInput
	// Email to receive system/tunnel status notification emails.
	StatusChangeEmail pulumi.StringInput
	// Status change notification interval in seconds.
	StatusChangeNotificationInterval pulumi.IntPtrInput
}

func (AviatrixControllerEmailConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*aviatrixControllerEmailConfigArgs)(nil)).Elem()
}

type AviatrixControllerEmailConfigInput interface {
	pulumi.Input

	ToAviatrixControllerEmailConfigOutput() AviatrixControllerEmailConfigOutput
	ToAviatrixControllerEmailConfigOutputWithContext(ctx context.Context) AviatrixControllerEmailConfigOutput
}

func (*AviatrixControllerEmailConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**AviatrixControllerEmailConfig)(nil)).Elem()
}

func (i *AviatrixControllerEmailConfig) ToAviatrixControllerEmailConfigOutput() AviatrixControllerEmailConfigOutput {
	return i.ToAviatrixControllerEmailConfigOutputWithContext(context.Background())
}

func (i *AviatrixControllerEmailConfig) ToAviatrixControllerEmailConfigOutputWithContext(ctx context.Context) AviatrixControllerEmailConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixControllerEmailConfigOutput)
}

// AviatrixControllerEmailConfigArrayInput is an input type that accepts AviatrixControllerEmailConfigArray and AviatrixControllerEmailConfigArrayOutput values.
// You can construct a concrete instance of `AviatrixControllerEmailConfigArrayInput` via:
//
//	AviatrixControllerEmailConfigArray{ AviatrixControllerEmailConfigArgs{...} }
type AviatrixControllerEmailConfigArrayInput interface {
	pulumi.Input

	ToAviatrixControllerEmailConfigArrayOutput() AviatrixControllerEmailConfigArrayOutput
	ToAviatrixControllerEmailConfigArrayOutputWithContext(context.Context) AviatrixControllerEmailConfigArrayOutput
}

type AviatrixControllerEmailConfigArray []AviatrixControllerEmailConfigInput

func (AviatrixControllerEmailConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AviatrixControllerEmailConfig)(nil)).Elem()
}

func (i AviatrixControllerEmailConfigArray) ToAviatrixControllerEmailConfigArrayOutput() AviatrixControllerEmailConfigArrayOutput {
	return i.ToAviatrixControllerEmailConfigArrayOutputWithContext(context.Background())
}

func (i AviatrixControllerEmailConfigArray) ToAviatrixControllerEmailConfigArrayOutputWithContext(ctx context.Context) AviatrixControllerEmailConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixControllerEmailConfigArrayOutput)
}

// AviatrixControllerEmailConfigMapInput is an input type that accepts AviatrixControllerEmailConfigMap and AviatrixControllerEmailConfigMapOutput values.
// You can construct a concrete instance of `AviatrixControllerEmailConfigMapInput` via:
//
//	AviatrixControllerEmailConfigMap{ "key": AviatrixControllerEmailConfigArgs{...} }
type AviatrixControllerEmailConfigMapInput interface {
	pulumi.Input

	ToAviatrixControllerEmailConfigMapOutput() AviatrixControllerEmailConfigMapOutput
	ToAviatrixControllerEmailConfigMapOutputWithContext(context.Context) AviatrixControllerEmailConfigMapOutput
}

type AviatrixControllerEmailConfigMap map[string]AviatrixControllerEmailConfigInput

func (AviatrixControllerEmailConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AviatrixControllerEmailConfig)(nil)).Elem()
}

func (i AviatrixControllerEmailConfigMap) ToAviatrixControllerEmailConfigMapOutput() AviatrixControllerEmailConfigMapOutput {
	return i.ToAviatrixControllerEmailConfigMapOutputWithContext(context.Background())
}

func (i AviatrixControllerEmailConfigMap) ToAviatrixControllerEmailConfigMapOutputWithContext(ctx context.Context) AviatrixControllerEmailConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AviatrixControllerEmailConfigMapOutput)
}

type AviatrixControllerEmailConfigOutput struct{ *pulumi.OutputState }

func (AviatrixControllerEmailConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AviatrixControllerEmailConfig)(nil)).Elem()
}

func (o AviatrixControllerEmailConfigOutput) ToAviatrixControllerEmailConfigOutput() AviatrixControllerEmailConfigOutput {
	return o
}

func (o AviatrixControllerEmailConfigOutput) ToAviatrixControllerEmailConfigOutputWithContext(ctx context.Context) AviatrixControllerEmailConfigOutput {
	return o
}

// Email to receive important account and certification information.
func (o AviatrixControllerEmailConfigOutput) AdminAlertEmail() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixControllerEmailConfig) pulumi.StringOutput { return v.AdminAlertEmail }).(pulumi.StringOutput)
}

// Whether admin alert notification email is verified.
func (o AviatrixControllerEmailConfigOutput) AdminAlertEmailVerified() pulumi.BoolOutput {
	return o.ApplyT(func(v *AviatrixControllerEmailConfig) pulumi.BoolOutput { return v.AdminAlertEmailVerified }).(pulumi.BoolOutput)
}

// Email to receive field notices and critical notices.
func (o AviatrixControllerEmailConfigOutput) CriticalAlertEmail() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixControllerEmailConfig) pulumi.StringOutput { return v.CriticalAlertEmail }).(pulumi.StringOutput)
}

// Whether critical alert notification email is verified.
func (o AviatrixControllerEmailConfigOutput) CriticalAlertEmailVerified() pulumi.BoolOutput {
	return o.ApplyT(func(v *AviatrixControllerEmailConfig) pulumi.BoolOutput { return v.CriticalAlertEmailVerified }).(pulumi.BoolOutput)
}

// Email to receive security and CVE (Common Vulnerabilities and Exposures) notification emails.
func (o AviatrixControllerEmailConfigOutput) SecurityEventEmail() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixControllerEmailConfig) pulumi.StringOutput { return v.SecurityEventEmail }).(pulumi.StringOutput)
}

// Whether security event notification email is verified.
func (o AviatrixControllerEmailConfigOutput) SecurityEventEmailVerified() pulumi.BoolOutput {
	return o.ApplyT(func(v *AviatrixControllerEmailConfig) pulumi.BoolOutput { return v.SecurityEventEmailVerified }).(pulumi.BoolOutput)
}

// Email to receive system/tunnel status notification emails.
func (o AviatrixControllerEmailConfigOutput) StatusChangeEmail() pulumi.StringOutput {
	return o.ApplyT(func(v *AviatrixControllerEmailConfig) pulumi.StringOutput { return v.StatusChangeEmail }).(pulumi.StringOutput)
}

// Whether status change notification email is verified.
func (o AviatrixControllerEmailConfigOutput) StatusChangeEmailVerified() pulumi.BoolOutput {
	return o.ApplyT(func(v *AviatrixControllerEmailConfig) pulumi.BoolOutput { return v.StatusChangeEmailVerified }).(pulumi.BoolOutput)
}

// Status change notification interval in seconds.
func (o AviatrixControllerEmailConfigOutput) StatusChangeNotificationInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AviatrixControllerEmailConfig) pulumi.IntPtrOutput { return v.StatusChangeNotificationInterval }).(pulumi.IntPtrOutput)
}

type AviatrixControllerEmailConfigArrayOutput struct{ *pulumi.OutputState }

func (AviatrixControllerEmailConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AviatrixControllerEmailConfig)(nil)).Elem()
}

func (o AviatrixControllerEmailConfigArrayOutput) ToAviatrixControllerEmailConfigArrayOutput() AviatrixControllerEmailConfigArrayOutput {
	return o
}

func (o AviatrixControllerEmailConfigArrayOutput) ToAviatrixControllerEmailConfigArrayOutputWithContext(ctx context.Context) AviatrixControllerEmailConfigArrayOutput {
	return o
}

func (o AviatrixControllerEmailConfigArrayOutput) Index(i pulumi.IntInput) AviatrixControllerEmailConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AviatrixControllerEmailConfig {
		return vs[0].([]*AviatrixControllerEmailConfig)[vs[1].(int)]
	}).(AviatrixControllerEmailConfigOutput)
}

type AviatrixControllerEmailConfigMapOutput struct{ *pulumi.OutputState }

func (AviatrixControllerEmailConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AviatrixControllerEmailConfig)(nil)).Elem()
}

func (o AviatrixControllerEmailConfigMapOutput) ToAviatrixControllerEmailConfigMapOutput() AviatrixControllerEmailConfigMapOutput {
	return o
}

func (o AviatrixControllerEmailConfigMapOutput) ToAviatrixControllerEmailConfigMapOutputWithContext(ctx context.Context) AviatrixControllerEmailConfigMapOutput {
	return o
}

func (o AviatrixControllerEmailConfigMapOutput) MapIndex(k pulumi.StringInput) AviatrixControllerEmailConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AviatrixControllerEmailConfig {
		return vs[0].(map[string]*AviatrixControllerEmailConfig)[vs[1].(string)]
	}).(AviatrixControllerEmailConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixControllerEmailConfigInput)(nil)).Elem(), &AviatrixControllerEmailConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixControllerEmailConfigArrayInput)(nil)).Elem(), AviatrixControllerEmailConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AviatrixControllerEmailConfigMapInput)(nil)).Elem(), AviatrixControllerEmailConfigMap{})
	pulumi.RegisterOutputType(AviatrixControllerEmailConfigOutput{})
	pulumi.RegisterOutputType(AviatrixControllerEmailConfigArrayOutput{})
	pulumi.RegisterOutputType(AviatrixControllerEmailConfigMapOutput{})
}
