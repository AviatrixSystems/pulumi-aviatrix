// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The aviatrix.AviatrixTransitVpc resource creates and manages the Aviatrix Transit Network Gateways.
 *
 * !> **WARNING:** The `aviatrix.AviatrixTransitVpc` resource is deprecated as of **Release 2.0**. It is currently kept for backward-compatibility and will be removed in the future. Please use the transit gateway resource instead. If this is already in the state, please remove it from state file and import as `aviatrix.AviatrixTransitGateway`.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aviatrix from "@pulumi/aviatrix";
 *
 * // Manage Aviatrix Transit Network Gateways in aws
 * const testTransitGwAws = new aviatrix.AviatrixTransitVpc("test_transit_gw_aws", {
 *     accountName: "devops_aws",
 *     cloudType: 1,
 *     connectedTransit: "yes",
 *     enableHybridConnection: true,
 *     gwName: "transit",
 *     haGwSize: "t2.micro",
 *     haSubnet: "10.1.0.0/24",
 *     subnet: "10.1.0.0/24",
 *     tagLists: [
 *         "name:value",
 *         "name1:value1",
 *         "name2:value2",
 *     ],
 *     vpcId: "vpc-abcd1234",
 *     vpcReg: "us-east-1",
 *     vpcSize: "t2.micro",
 * });
 * // Manage Aviatrix Transit Network Gateways in azure
 * const testTransitGwAzure = new aviatrix.AviatrixTransitVpc("test_transit_gw_azure", {
 *     accountName: "devops_azure",
 *     cloudType: 8,
 *     connectedTransit: "yes",
 *     gwName: "transit",
 *     haGwSize: "Standard_B1s",
 *     haSubnet: "10.30.0.0/24",
 *     subnet: "10.30.0.0/24",
 *     vpcId: "vnet1:hello",
 *     vpcReg: "West US",
 *     vpcSize: "Standard_B1s",
 * });
 * ```
 *
 * ## Import
 *
 * Instance transit_vpc can be imported using the gw_name, e.g.
 *
 * ```sh
 *  $ pulumi import aviatrix:index/aviatrixTransitVpc:AviatrixTransitVpc test gw_name
 * ```
 */
export class AviatrixTransitVpc extends pulumi.CustomResource {
    /**
     * Get an existing AviatrixTransitVpc resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AviatrixTransitVpcState, opts?: pulumi.CustomResourceOptions): AviatrixTransitVpc {
        return new AviatrixTransitVpc(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'aviatrix:index/aviatrixTransitVpc:AviatrixTransitVpc';

    /**
     * Returns true if the given object is an instance of AviatrixTransitVpc.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AviatrixTransitVpc {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AviatrixTransitVpc.__pulumiType;
    }

    /**
     * This parameter represents the name of a Cloud-Account in Aviatrix controller.
     */
    public readonly accountName!: pulumi.Output<string>;
    /**
     * Type of cloud service provider, requires an integer value. Use 1 for AWS.
     */
    public readonly cloudType!: pulumi.Output<number>;
    /**
     * Specify Connected Transit status. Supported values: true, false.
     */
    public readonly connectedTransit!: pulumi.Output<string | undefined>;
    /**
     * Sign of readiness for FireNet connection. Valid values: true and false. Default: false.
     */
    public readonly enableFirenetInterfaces!: pulumi.Output<boolean | undefined>;
    /**
     * Sign of readiness for TGW connection. Only supported for aws. Example: false.
     */
    public readonly enableHybridConnection!: pulumi.Output<boolean | undefined>;
    /**
     * Enable NAT for this container.
     */
    public readonly enableNat!: pulumi.Output<string | undefined>;
    /**
     * Name of the gateway which is going to be created.
     */
    public readonly gwName!: pulumi.Output<string>;
    /**
     * HA Gateway Size. Mandatory if HA is enabled (ha_subnet is set). Example: "t2.micro".
     */
    public readonly haGwSize!: pulumi.Output<string | undefined>;
    /**
     * AZ of subnet being created for Insane Mode Transit HA Gateway. Required if insaneMode is enabled and haSubnet is set.
     */
    public readonly haInsaneModeAz!: pulumi.Output<string | undefined>;
    /**
     * HA Subnet CIDR. Example: "10.12.0.0/24".Setting to empty/unset will disable HA. Setting to a valid subnet CIDR will create an HA gateway on the subnet.
     */
    public readonly haSubnet!: pulumi.Output<string | undefined>;
    /**
     * Specify Insane Mode high performance gateway. Insane Mode gateway size must be at least c5 size. If enabled, will look for spare /26 segment to create a new subnet. Only available for AWS. Supported values: true, false.
     */
    public readonly insaneMode!: pulumi.Output<boolean | undefined>;
    /**
     * AZ of subnet being created for Insane Mode Transit Gateway. Required if insaneMode is enabled.
     */
    public readonly insaneModeAz!: pulumi.Output<string | undefined>;
    /**
     * Public Subnet CIDR. Example: AWS: "10.0.0.0/24". Copy/paste from AWS Console to get the right subnet CIDR.
     */
    public readonly subnet!: pulumi.Output<string>;
    /**
     * Instance tag of cloud provider. Only supported for aws. Example: ["key1:value1","key002:value002"]
     */
    public readonly tagLists!: pulumi.Output<string[] | undefined>;
    /**
     * VPC-ID/VNet-Name of cloud provider. Required if for aws. Example: AWS: "vpc-abcd1234", GCP: "mygooglecloudvpcname", etc...
     */
    public readonly vpcId!: pulumi.Output<string>;
    /**
     * Region of cloud provider. Example: AWS: "us-east-1", ARM: "East US 2", etc...
     */
    public readonly vpcReg!: pulumi.Output<string>;
    /**
     * Size of the gateway instance. Example: AWS: "t2.large", etc...
     */
    public readonly vpcSize!: pulumi.Output<string>;

    /**
     * Create a AviatrixTransitVpc resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AviatrixTransitVpcArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AviatrixTransitVpcArgs | AviatrixTransitVpcState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AviatrixTransitVpcState | undefined;
            resourceInputs["accountName"] = state ? state.accountName : undefined;
            resourceInputs["cloudType"] = state ? state.cloudType : undefined;
            resourceInputs["connectedTransit"] = state ? state.connectedTransit : undefined;
            resourceInputs["enableFirenetInterfaces"] = state ? state.enableFirenetInterfaces : undefined;
            resourceInputs["enableHybridConnection"] = state ? state.enableHybridConnection : undefined;
            resourceInputs["enableNat"] = state ? state.enableNat : undefined;
            resourceInputs["gwName"] = state ? state.gwName : undefined;
            resourceInputs["haGwSize"] = state ? state.haGwSize : undefined;
            resourceInputs["haInsaneModeAz"] = state ? state.haInsaneModeAz : undefined;
            resourceInputs["haSubnet"] = state ? state.haSubnet : undefined;
            resourceInputs["insaneMode"] = state ? state.insaneMode : undefined;
            resourceInputs["insaneModeAz"] = state ? state.insaneModeAz : undefined;
            resourceInputs["subnet"] = state ? state.subnet : undefined;
            resourceInputs["tagLists"] = state ? state.tagLists : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
            resourceInputs["vpcReg"] = state ? state.vpcReg : undefined;
            resourceInputs["vpcSize"] = state ? state.vpcSize : undefined;
        } else {
            const args = argsOrState as AviatrixTransitVpcArgs | undefined;
            if ((!args || args.accountName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountName'");
            }
            if ((!args || args.cloudType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cloudType'");
            }
            if ((!args || args.gwName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'gwName'");
            }
            if ((!args || args.subnet === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnet'");
            }
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            if ((!args || args.vpcReg === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcReg'");
            }
            if ((!args || args.vpcSize === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcSize'");
            }
            resourceInputs["accountName"] = args ? args.accountName : undefined;
            resourceInputs["cloudType"] = args ? args.cloudType : undefined;
            resourceInputs["connectedTransit"] = args ? args.connectedTransit : undefined;
            resourceInputs["enableFirenetInterfaces"] = args ? args.enableFirenetInterfaces : undefined;
            resourceInputs["enableHybridConnection"] = args ? args.enableHybridConnection : undefined;
            resourceInputs["enableNat"] = args ? args.enableNat : undefined;
            resourceInputs["gwName"] = args ? args.gwName : undefined;
            resourceInputs["haGwSize"] = args ? args.haGwSize : undefined;
            resourceInputs["haInsaneModeAz"] = args ? args.haInsaneModeAz : undefined;
            resourceInputs["haSubnet"] = args ? args.haSubnet : undefined;
            resourceInputs["insaneMode"] = args ? args.insaneMode : undefined;
            resourceInputs["insaneModeAz"] = args ? args.insaneModeAz : undefined;
            resourceInputs["subnet"] = args ? args.subnet : undefined;
            resourceInputs["tagLists"] = args ? args.tagLists : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["vpcReg"] = args ? args.vpcReg : undefined;
            resourceInputs["vpcSize"] = args ? args.vpcSize : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AviatrixTransitVpc.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AviatrixTransitVpc resources.
 */
export interface AviatrixTransitVpcState {
    /**
     * This parameter represents the name of a Cloud-Account in Aviatrix controller.
     */
    accountName?: pulumi.Input<string>;
    /**
     * Type of cloud service provider, requires an integer value. Use 1 for AWS.
     */
    cloudType?: pulumi.Input<number>;
    /**
     * Specify Connected Transit status. Supported values: true, false.
     */
    connectedTransit?: pulumi.Input<string>;
    /**
     * Sign of readiness for FireNet connection. Valid values: true and false. Default: false.
     */
    enableFirenetInterfaces?: pulumi.Input<boolean>;
    /**
     * Sign of readiness for TGW connection. Only supported for aws. Example: false.
     */
    enableHybridConnection?: pulumi.Input<boolean>;
    /**
     * Enable NAT for this container.
     */
    enableNat?: pulumi.Input<string>;
    /**
     * Name of the gateway which is going to be created.
     */
    gwName?: pulumi.Input<string>;
    /**
     * HA Gateway Size. Mandatory if HA is enabled (ha_subnet is set). Example: "t2.micro".
     */
    haGwSize?: pulumi.Input<string>;
    /**
     * AZ of subnet being created for Insane Mode Transit HA Gateway. Required if insaneMode is enabled and haSubnet is set.
     */
    haInsaneModeAz?: pulumi.Input<string>;
    /**
     * HA Subnet CIDR. Example: "10.12.0.0/24".Setting to empty/unset will disable HA. Setting to a valid subnet CIDR will create an HA gateway on the subnet.
     */
    haSubnet?: pulumi.Input<string>;
    /**
     * Specify Insane Mode high performance gateway. Insane Mode gateway size must be at least c5 size. If enabled, will look for spare /26 segment to create a new subnet. Only available for AWS. Supported values: true, false.
     */
    insaneMode?: pulumi.Input<boolean>;
    /**
     * AZ of subnet being created for Insane Mode Transit Gateway. Required if insaneMode is enabled.
     */
    insaneModeAz?: pulumi.Input<string>;
    /**
     * Public Subnet CIDR. Example: AWS: "10.0.0.0/24". Copy/paste from AWS Console to get the right subnet CIDR.
     */
    subnet?: pulumi.Input<string>;
    /**
     * Instance tag of cloud provider. Only supported for aws. Example: ["key1:value1","key002:value002"]
     */
    tagLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * VPC-ID/VNet-Name of cloud provider. Required if for aws. Example: AWS: "vpc-abcd1234", GCP: "mygooglecloudvpcname", etc...
     */
    vpcId?: pulumi.Input<string>;
    /**
     * Region of cloud provider. Example: AWS: "us-east-1", ARM: "East US 2", etc...
     */
    vpcReg?: pulumi.Input<string>;
    /**
     * Size of the gateway instance. Example: AWS: "t2.large", etc...
     */
    vpcSize?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AviatrixTransitVpc resource.
 */
export interface AviatrixTransitVpcArgs {
    /**
     * This parameter represents the name of a Cloud-Account in Aviatrix controller.
     */
    accountName: pulumi.Input<string>;
    /**
     * Type of cloud service provider, requires an integer value. Use 1 for AWS.
     */
    cloudType: pulumi.Input<number>;
    /**
     * Specify Connected Transit status. Supported values: true, false.
     */
    connectedTransit?: pulumi.Input<string>;
    /**
     * Sign of readiness for FireNet connection. Valid values: true and false. Default: false.
     */
    enableFirenetInterfaces?: pulumi.Input<boolean>;
    /**
     * Sign of readiness for TGW connection. Only supported for aws. Example: false.
     */
    enableHybridConnection?: pulumi.Input<boolean>;
    /**
     * Enable NAT for this container.
     */
    enableNat?: pulumi.Input<string>;
    /**
     * Name of the gateway which is going to be created.
     */
    gwName: pulumi.Input<string>;
    /**
     * HA Gateway Size. Mandatory if HA is enabled (ha_subnet is set). Example: "t2.micro".
     */
    haGwSize?: pulumi.Input<string>;
    /**
     * AZ of subnet being created for Insane Mode Transit HA Gateway. Required if insaneMode is enabled and haSubnet is set.
     */
    haInsaneModeAz?: pulumi.Input<string>;
    /**
     * HA Subnet CIDR. Example: "10.12.0.0/24".Setting to empty/unset will disable HA. Setting to a valid subnet CIDR will create an HA gateway on the subnet.
     */
    haSubnet?: pulumi.Input<string>;
    /**
     * Specify Insane Mode high performance gateway. Insane Mode gateway size must be at least c5 size. If enabled, will look for spare /26 segment to create a new subnet. Only available for AWS. Supported values: true, false.
     */
    insaneMode?: pulumi.Input<boolean>;
    /**
     * AZ of subnet being created for Insane Mode Transit Gateway. Required if insaneMode is enabled.
     */
    insaneModeAz?: pulumi.Input<string>;
    /**
     * Public Subnet CIDR. Example: AWS: "10.0.0.0/24". Copy/paste from AWS Console to get the right subnet CIDR.
     */
    subnet: pulumi.Input<string>;
    /**
     * Instance tag of cloud provider. Only supported for aws. Example: ["key1:value1","key002:value002"]
     */
    tagLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * VPC-ID/VNet-Name of cloud provider. Required if for aws. Example: AWS: "vpc-abcd1234", GCP: "mygooglecloudvpcname", etc...
     */
    vpcId: pulumi.Input<string>;
    /**
     * Region of cloud provider. Example: AWS: "us-east-1", ARM: "East US 2", etc...
     */
    vpcReg: pulumi.Input<string>;
    /**
     * Size of the gateway instance. Example: AWS: "t2.large", etc...
     */
    vpcSize: pulumi.Input<string>;
}
